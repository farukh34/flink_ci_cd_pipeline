SET 'execution.checkpointing.interval' = '1min';
SET pipeline.name=EdrJob13;
SET yarn.application.queue=root;
DROP TABLE IF EXISTS EdrTable;
CREATE Temporary TABLE EdrTable (
		`uuid`  varchar,
		`service` row(`name` varchar),
        `source_data` string,
		`organization` row(`id` varchar),
        `agent` row(`type` varchar),
        `error` row(`code` varchar,
                    `message` varchar),
        `log` row(`level` varchar,
                  `type` varchar),
        `sysmon` row(`dns` row(`status_code` varchar),
                     `file` row(`archived` varchar,
                                `is_executable` varchar)),
        `related` row(`hash` array<varchar>,
                      `hosts` array<varchar>,
                      `ip` array<varchar>,
                      `user` array<varchar>),
		`observer` row(`product`  varchar,
                `ip` varchar,
                `name` varchar,
				`vendor`  varchar,
				`type` varchar),
		`event` row(`created` varchar,
                    `channel` varchar,
                    `category` array<varchar>,
                    `code` int,
                    `host` varchar,
                    `ingested` varchar,
                    `message` varchar,
                    `dataset`  varchar,
                    `original` string,
                    `module` varchar,
                    `provider` varchar,
                    `kind` varchar,
                    `outcome` varchar,
                    `type` array<varchar>,
                    `action` varchar,
                    `id` varchar,
                    `severity` varchar,
                    `reason` varchar),
		`rule` row(`name` varchar),
		`sensor` row(`id` varchar),
		`host` row(`name` varchar,
                   `mac` varchar,
                   `os` row(`name` varchar,
                            `platform` varchar,
                            `version` varchar),
                   `architecture` varchar),
		`network` row(`community_id` varchar,
		              `transport` varchar,
                      `type` varchar,
                      `protocol` varchar,
				      `direction` varchar),
		`process` row(`name` varchar,
		            `args` varchar,
                    `args_count` varchar,
                    `working_directory` varchar,
                    `title` varchar,
                    `executable` varchar,
                    `command_line` varchar,
			        `pid` varchar,
				`thread` row(`id` varchar),
                                `entity_id` varchar,
                                `hash` row(`sha1` varchar,
				                           `imphash` varchar,
                                        `sha256` varchar,
	                                      `md5` varchar),
				`parent` row(`executable` varchar,
				                `args` varchar,
						        `pid` varchar,
					         `name` varchar,
						     `command_line` varchar,
						     `entity_id` varchar),
				 `pe` row( `company` varchar,
		                              `sha256` varchar,
									 `description` varchar,
									 `file_version` varchar,
									 `imphash` varchar,
									 `original_file_name` varchar,
									 `product` varchar)
									),
		`source` row(`ip` varchar,
					`port` int,
                    `address` varchar,
					`locality` varchar,
					`domain` varchar,
					`user` row(`name` varchar, `domain` varchar),
					`as` row(`organization` row(`name` varchar),
						`number` varchar,
						`locality` varchar),
					`geo` row(`city_name` varchar,
						`country_code` varchar,
						`country_name` varchar,
						`region_name` varchar ,
						`continent_code` varchar,
						`location` row(`lat` double,`lon` double),
						`address` varchar,
						`domain` varchar,
						`ip` varchar,
						`port` int)),
		`destination` row(`ip` varchar,
					`port` int,
					`locality` varchar,
					`domain` varchar,
					`as` row(`organization` row(`name` varchar),
						`number` varchar,
						`locality` varchar),
					`geo` row(`city_name` varchar,
						`country_code` varchar,
						`country_name` varchar,
						`region_name` varchar ,
						`continent_code` varchar,
						`location` row(`lat` double,`lon` double),
						`address` varchar,
						`domain` varchar,
						`ip` varchar,
						`port` int)),
		`user` row(`name` varchar,
					`domain` varchar,
					`id`    varchar,
					`type`  varchar),
		`threatintel` row(`entity` varchar,
					`days` int,
                    `event_data` varchar,
                    `malware` row(`malware` varchar,
                                  `timestamp` timestamp),
					`severity` varchar,
                    `tags` varchar,
                    `white_list` varchar,
					`lookup` varchar),
		`registry` row(`path` varchar,
                    `hive` varchar,
                    `key` varchar,
                    `data` row(`strings` varchar,
                               `type` varchar),
					`value`  varchar),
		`hash` row(`imphash` varchar,
		            `sha256` varchar,
					`sha1` varchar,
					`md5`  varchar),
		`dns` row(`answers` array<varchar>,
                  `resolved_ip` array<varchar>,
                  `question` row(`domain` varchar,
					             `name`  varchar)),
		`file` row(`name` varchar,
				`path`  varchar,
                `size` int,
                `directory` varchar,
                `extension` varchar,
				`code_signature` row(`signed` varchar,
				                        `subject_name` varchar,
                                        `valid` varchar,
				                        `status` varchar),
				`pe` row(`imphash` varchar,
				            `description` varchar,
					    `product` varchar,
					    `company` varchar,
					    `file_version` varchar,
						`original_file_name` varchar),
				`hash` row( `md5` varchar,
				               `imphash` varchar,
						`sha1` varchar,
						`sha256` varchar)),
                `winlog` row(`channel` varchar,
                               `event_data` row(`hashes` varchar,
                                                `description` varchar,
                                                `eventtype` varchar,
                                                `feature_name` varchar,
                                                `reason` varchar,
                                                `process_name` varchar,
                                                `source_name` varchar,
                                                `new_value` varchar,
                                                `old_value` varchar,
                                                `operation` varchar,
                                                `path` varchar,
                                                `value` varchar,
                                                `user` varchar,
                                                `details` varchar,
                                                `integritylevel` varchar),
                                `accesses` varchar,
                                `accessgranted` varchar,
                                `accesslist` varchar,
                                `accessmask` varchar,
                                `accessreason` varchar,
                                `accessremoved` varchar,
                                `accountexpires` varchar,
                                `action` varchar,
                                `action_id` varchar,
                                `action_name` varchar,
                                `activity_id` varchar,
                                `additional_actions_id` varchar,
                                `additional_actions_string` varchar,
                                `additionalinfo` varchar,
                                `additionalinfo2` varchar,
                                `address` varchar,
                                `allowedtodelegateto` varchar,
                                `appcorrelationid` varchar,
                                `appid` varchar,
				                `appname` varchar,
                                `applicationpath` varchar,
                                `assemblypath` varchar,
                                `attributeldapdisplayname` varchar,
                                `attributesyntaxoid` varchar,
                                `attributevalue` varchar,
                                `auditpolicychanges` varchar,
                                `auditsourcename` varchar,
                                `authenticationalgorithm` varchar,
                                `authenticationpackagename` varchar,
                                `binary` varchar,
                                `bssid` varchar,
                                `bsstype` varchar,
                                `callerprocessid` varchar,
                                `callerprocessname` varchar,
                                `callingprocessname` varchar,
                                `callstack` varchar,
                                `calltrace` varchar,
                                `caption` varchar,
                                `category_id` varchar,
                                `category_name` varchar,
                                `categoryid` varchar,
                                `certissuername` varchar,
                                `certserialnumber` varchar,
                                `certthumbprint` varchar,
                                `cipheralgorithm` varchar,
                                `classid` varchar,
                                `classname` varchar,
                                `clientinfo` varchar,
                                `clientprocessid` varchar,
                                `clientprocessstartkey` varchar,
                                `commandline` varchar,
                                `company` varchar,
                                `computer_name` varchar,
                                `computeraccountchange` varchar,
                                `configuration` varchar,
                                `configurationfilehash` varchar,
                                `connectionid` varchar,
                                `connectionmode` varchar,
                                `consumer` varchar,
                                `contents` varchar,
                                `contextinfo` varchar,
                                `crashonauditfailvalue` varchar,
                                `creationutctime` varchar,
                                `ddtype` varchar,
                                `description` varchar,
                                `details` varchar,
                                `detection_id` varchar,
                                `detection_time` varchar,
                                `detection_user` varchar,
                                `devicedescription` varchar,
                                `devicename` varchar,
                                `direction` varchar,
                                `displayname` varchar,
                                `dnshostname` varchar,
                                `domainbehaviorversion` varchar,
                                `domainname` varchar,
                                `domainpolicychanged` varchar,
                                `domainsid` varchar,
                                `drivename` varchar,
                                `dsname` varchar,
                                `dummy` varchar,
                                `elevatedtoken` varchar,
                                `engine_version` varchar,
                                `engineversion` varchar,
                                `error_code` varchar,
                                `error_description` varchar,
                                `errorcode` varchar,
                                `event_id` int,
				                `event` row(`destinationisipv6` varchar),
                                `eventnamespace` varchar,
                                `eventsourceid` varchar,
                                `eventtype` varchar,
                                `exceptioncode` varchar,
                                `execution_id` varchar,
                                `execution_name` varchar,
                                `failurecode` varchar,
                                `failurereason` varchar,
                                `feature` varchar,
				                `feature_name` varchar,
                                `filehash` varchar,
                                `filename` varchar,
                                `filenamebuffer` varchar,
                                `fileversion` varchar,
                                `filter` varchar,
                                `filterorigin` varchar,
                                `filterrtid` varchar,
                                `forcelogoff` varchar,
                                `fqdn` varchar,
                                `fwlink` varchar,
                                `grantedaccess` varchar,
                                `grouptypechange` varchar,
                                `handleid` varchar,
                                `hash` varchar,
                                `hashes` varchar,
                                `headerflags` varchar,
                                `hivename` varchar,
                                `homedirectory` varchar,
                                `homepath` varchar,
                                `hostversion` varchar,
                                `imagename` varchar,
                                `imagepath` varchar,
                                `impersonationlevel` varchar,
                                `initiated` varchar,
                                `integritylevel` varchar,
                                `interfacedescription` varchar,
                                `interfaceguid` varchar,
                                `keylength` varchar,
                                `layername` varchar,
                                `layerrtid` varchar,
                                `ldapdisplayname` varchar,
                                `level` varchar,
                                `lmpackagename` varchar,
                                `localname` varchar,
                                `lockoutduration` varchar,
                                `lockoutobservationwindow` varchar,
                                `lockoutthreshold` varchar,
                                `logonguid` varchar,
                                `logonhours` varchar,
                                `logonid` varchar,
                                `logon` row(`id` varchar,
                                            `failure` row(`status` varchar,
                                                          `sub_status` varchar),
                                            `type` varchar),
                                `logonprocessname` varchar,
                                `logontype` varchar,
                                `machineaccountquota` varchar,
                                `mandatorylabel` varchar,
                                `masterkeyid` varchar,
                                `maxpasswordage` varchar,
                                `membername` varchar,
                                `membersid` varchar,
                                `message` varchar,
                                `minpasswordage` varchar,
                                `minpasswordlength` varchar,
                                `mixeddomainmode` varchar,
                                `modifyingapplication` varchar,
                                `name` varchar,
                                `new_value` varchar,
                                `newname` varchar,
                                `newsd` varchar,
                                `newtargetusername` varchar,
                                `newtemplatecontent` varchar,
                                `newthreadid` varchar,
                                `newtime` varchar,
                                `newuacvalue` varchar,
                                `newvalue` varchar,
                                `newvaluetype` varchar,
                                `objectclass` varchar,
                                `objectdn` varchar,
                                `objectguid` varchar,
                                `objectname` varchar,
                                `objectserver` varchar,
                                `objecttype` varchar,
                                `objectvaluename` varchar,
                                `oeminformation` varchar,
                                `old_value` varchar,
                                `oldsd` varchar,
                                `oldtargetusername` varchar,
                                `olduacvalue` varchar,
                                `oldvalue` varchar,
                                `oldvaluetype` varchar,
                                `onexenabled` varchar,
                                `opcorrelationid` varchar,
                                `opcode` varchar,
                                `operation` varchar,
                                `operationtype` varchar,
                                `origin` varchar,
                                `origin_id` varchar,
                                `origin_name` varchar,
                                `originalfilename` varchar,
                                `outcome` varchar,
                                `packagefullname` varchar,
                                `packagename` varchar,
                                `param1` varchar,
                                `param2` varchar,
                                `param3` varchar,
                                `parentuser` varchar,
                                `passwordhistorylength` varchar,
                                `passwordlastset` varchar,
                                `passwordproperties` varchar,
                                `path` varchar,
                                `payload` varchar,
                                `phytype` varchar,
                                `policyname` varchar,
                                `post_clean_status` varchar,
                                `pre_execution_status` varchar,
                                `preauthtype` varchar,
                                `previouscreationutctime` varchar,
                                `previoustime` varchar,
                                `primarygroupid` varchar,
                                `privilegelist` varchar,
                                `process` row(`pid` varchar,
                                              `thread` row(`id` varchar)),
                                `process_name` varchar,
                                `processcommandline` varchar,
                                `processnamebuffer` varchar,
                                `processpath` varchar,
                                `product` varchar,
                                `product_name` varchar,
                                `product_version` varchar,
                                `profilename` varchar,
                                `profilepath` varchar,
                                `properties` varchar,
                                `protocol` varchar,
                                `provider_guid` varchar,
                                `provider_name` varchar,
                                `puacount` varchar,
                                `puapolicyid` varchar,
                                `query` varchar,
                                `queryresults` varchar,
                                `record_id` varchar,
                                `reason` varchar,
                                `recoverykeyid` varchar,
                                `recoveryserver` varchar,
                                `relativetargetname` varchar,
                                `remediation_user` varchar,
                                `remotemachineid` varchar,
                                `remotename` varchar,
                                `remoteuserid` varchar,
                                `requestedpolicy` varchar,
                                `resourceattributes` varchar,
                                `restrictedadminmode` varchar,
                                `restrictedsidcount` varchar,
                                `rpccallclientlocality` varchar,
                                `ruleid` varchar,
                                `rulename` varchar,
                                `samaccountname` varchar,
                                `sampledata` varchar,
                                `samplelength` varchar,
                                `schemaversion` varchar,
                                `scriptpath` varchar,
                                `scriptblockid` varchar,
                                `scriptblocktext` varchar,
                                `searchfilter` varchar,
                                `security_intelligence_version` varchar,
                                `securityid` varchar,
                                `servername` varchar,
                                `service` varchar,
                                `serviceaccount` varchar,
                                `servicefilename` varchar,
                                `servicename` varchar,
                                `serviceprincipalnames` varchar,
                                `servicesid` varchar,
                                `servicestarttype` varchar,
                                `servicetype` varchar,
                                `session` varchar,
                                `sessionid` varchar,
                                `sessionname` varchar,
                                `severity` varchar,
                                `severity_id` varchar,
                                `severity_name` varchar,
                                `sharelocalpath` varchar,
                                `sharename` varchar,
                                `sidhistory` varchar,
                                `sidlist` varchar,
                                `signature` varchar,
                                `source` varchar,
                                `source_id` varchar,
                                `source_name` varchar,
                                `sourcefile` varchar,
                                `sourcefilename` varchar,
                                `sourceline` varchar,
                                `sourceportname` varchar,
                                `sourcetag` varchar,
                                `sourceuser` varchar,
                                `ssid` varchar,
                                `startaddress` varchar,
                                `startfunction` varchar,
                                `startmodule` varchar,
                                `starttype` varchar,
                                `state` varchar,
                                `status` varchar,
                                `status_code` varchar,
                                `status_description` varchar,
                                `subcategoryguid` varchar,
                                `subcategoryid` varchar,
                                `subjectdomainname` varchar,
                                `subjectlogonid` varchar,
                                `subjectname` varchar,
                                `subjectusername` varchar,
                                `subjectusersid` varchar,
                                `substatus` varchar,
                                `targetimage` varchar,
                                `targetlinkedlogonid` varchar,
                                `targetlogonid` varchar,
                                `targetname` varchar,
				                `targetdomainname` varchar,
                                `targetoutbounddomainname` varchar,
                                `targetoutboundusername` varchar,
                                `targetprocessaddress` varchar,
                                `targetprocessguid` varchar,
                                `targetprocessid` varchar,
                                `targetservername` varchar,
                                `targetsid` varchar,
                                `targetuser` varchar,
                                `targetusername` varchar,
                                `targetusersid` varchar,
                                `task` varchar,
                                `taskcontent` varchar,
                                `taskcontentnew` varchar,
                                `taskname` varchar,
                                `templatecontent` varchar,
                                `terminalsessionid` varchar,
                                `threat_id` varchar,
                                `threat_name` varchar,
                                `ticketencryptiontype` varchar,
                                `ticketoptions` varchar,
                                `tokenelevationtype` varchar,
                                `transactionid` varchar,
                                `transmittedservices` varchar,
                                `type` varchar,
                                `type_id` varchar,
                                `type_name` varchar,
                                `user` row(`domain` varchar,
                                           `identifier` varchar,
                                           `name` varchar,
                                           `type` varchar),
                                `useraccountcontrol` varchar,
                                `username` varchar,
                                `userparameters` varchar,
                                `userprincipalname` varchar,
                                `userworkstations` varchar,
                                `value` varchar,
                                `verb` varchar,
                                `version` varchar,
                                `virtualaccount` varchar,
                                `wmi_name` varchar,
                                `wmi_namespace` varchar,
                                `wmi_filter_path` varchar,
                                `wmi_operation` varchar,
                                `workstation` varchar),
                                 `ts` TIMESTAMP(3) METADATA FROM 'timestamp')
WITH (
  'connector' = 'kafka',
  'topic' = 'edr',
  'properties.bootstrap.servers' = '10.0.10.105:9092,10.0.22.60:9092,10.0.43.247:9092',
  'properties.group.id' = 'flink-edr13',
  'scan.startup.mode' = 'latest-offset',
  'format' = 'json',
 'json.fail-on-missing-field' = 'false',
 'json.ignore-parse-errors' = 'true'
);

 CREATE TABLE default_catalog.default_database.FlinkOut (
  `message` STRING
) WITH (
  'connector' = 'kafka',
  'topic' = 'ams_alert_in',
  'properties.bootstrap.servers' = '10.0.10.105:9092,10.0.22.60:9092,10.0.43.247:9092',
  'properties.group.id' = 'flink',
  'scan.startup.mode' = 'earliest-offset',
  'format' = 'raw'
);


ADD jar 'flink/flink-1.18.0/bin/jars/flink-sql-connector-kafka-3.0.2-1.18.jar';

EXECUTE STATEMENT SET
BEGIN
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ab567429-1dfb-4674-b6d2-979fd2f9d125', 'name' VALUE 'Internet Explorer DisableFirstRunCustomize Enabled', 'description' VALUE 'Detects changes to the Internet Explorer "DisableFirstRunCustomize" value, which prevents Internet Explorer from running the first run wizard the first time a user starts the browser after installing Internet Explorer or Windows.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['As this is controlled by group policy as well as user settings. Some false positives may occur.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ab567429-1dfb-4674-b6d2-979fd2f9d125', 'name' VALUE 'Internet Explorer DisableFirstRunCustomize Enabled', 'description' VALUE 'Detects changes to the Internet Explorer "DisableFirstRunCustomize" value, which prevents Internet Explorer from running the first run wizard the first time a user starts the browser after installing Internet Explorer or Windows.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['As this is controlled by group policy as well as user settings. Some false positives may occur.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000002\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\internet\ explorer\\main\\disablefirstruncustomize$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\explorer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\ie4uinit\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8b9606c9-28be-4a38-b146-0e313cc232c1', 'name' VALUE 'Potential Ransomware Activity Using LegalNotice Message', 'description' VALUE 'Detect changes to the "LegalNoticeCaption" or "LegalNoticeText" registry values where the message set contains keywords often used in ransomware ransom messages'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0040'],
       'techniqueidlist' VALUE ARRAY['T1491.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8b9606c9-28be-4a38-b146-0e313cc232c1', 'name' VALUE 'Potential Ransomware Activity Using LegalNotice Message', 'description' VALUE 'Detect changes to the "LegalNoticeCaption" or "LegalNoticeText" registry values where the message set contains keywords often used in ransomware ransom messages'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0040'],
       'techniqueidlist' VALUE ARRAY['T1491.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*encrypted.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*unlock\-password.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*paying.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\policies\\system\\legalnoticecaption.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\policies\\system\\legalnoticetext.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3aff0be0-7802-4a7e-a4fa-c60c74bc5e1d', 'name' VALUE 'Lolbas OneDriveStandaloneUpdater.exe Proxy Download', 'description' VALUE 'Detects setting a custom URL for OneDriveStandaloneUpdater.exe to download a file from the Internet without executing any
anomalous executables with suspicious arguments. The downloaded file will be in C:\Users\redacted\AppData\Local\Microsoft\OneDrive\StandaloneUpdaterreSignInSettingsConfig.json
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1105']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3aff0be0-7802-4a7e-a4fa-c60c74bc5e1d', 'name' VALUE 'Lolbas OneDriveStandaloneUpdater.exe Proxy Download', 'description' VALUE 'Detects setting a custom URL for OneDriveStandaloneUpdater.exe to download a file from the Internet without executing any
anomalous executables with suspicious arguments. The downloaded file will be in C:\Users\redacted\AppData\Local\Microsoft\OneDrive\StandaloneUpdaterreSignInSettingsConfig.json
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1105']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\onedrive\\updateofficeconfig\\updateringsettingurlfromoc.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd6ce7ebd-260b-4323-9768-a9631c8d4db2', 'name' VALUE 'Disabled RestrictedAdminMode For RDS', 'description' VALUE 'Detect activation of DisableRestrictedAdmin to disable RestrictedAdmin mode.
RestrictedAdmin mode prevents the transmission of reusable credentials to the remote system to which you connect using Remote Desktop.
This prevents your credentials from being harvested during the initial connection process if the remote server has been compromise
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd6ce7ebd-260b-4323-9768-a9631c8d4db2', 'name' VALUE 'Disabled RestrictedAdminMode For RDS', 'description' VALUE 'Detect activation of DisableRestrictedAdmin to disable RestrictedAdmin mode.
RestrictedAdmin mode prevents the transmission of reusable credentials to the remote system to which you connect using Remote Desktop.
This prevents your credentials from being harvested during the initial connection process if the remote server has been compromise
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*system\\currentcontrolset\\control\\lsa\\disablerestrictedadmin$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '33efc23c-6ea2-4503-8cfe-bdf82ce8f719', 'name' VALUE 'Lsass Full Dump Request Via DumpType Registry Settings', 'description' VALUE 'Detects the setting of the "DumpType" registry value to "2" which stands for a "Full Dump". Technique such as LSASS Shtinkering requires this value to be "2" in order to dump LSASS.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate application that needs to do a full dump of their process'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '33efc23c-6ea2-4503-8cfe-bdf82ce8f719', 'name' VALUE 'Lsass Full Dump Request Via DumpType Registry Settings', 'description' VALUE 'Detects the setting of the "DumpType" registry value to "2" which stands for a "Full Dump". Technique such as LSASS Shtinkering requires this value to be "2" in order to dump LSASS.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate application that needs to do a full dump of their process'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000002\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\windows\ error\ reporting\\localdumps\\dumptype.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\windows\ error\ reporting\\localdumps\\lsass\.exe\\dumptype.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '42f0e038-767e-4b85-9d96-2c6335bad0b5', 'name' VALUE 'Adwind RAT / JRAT - Registry', 'description' VALUE 'Detects javaw.exe in AppData folder as used by Adwind / JRAT'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['NA'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.005', 'T1059.007']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '42f0e038-767e-4b85-9d96-2c6335bad0b5', 'name' VALUE 'Adwind RAT / JRAT - Registry', 'description' VALUE 'Detects javaw.exe in AppData folder as used by Adwind / JRAT'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['NA'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.005', 'T1059.007']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^%appdata%\\roaming\\oracle\\bin\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hklm\\software\\microsoft\\windows\\currentversion\\run.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '92b0b372-a939-44ed-a11b-5136cf680e27', 'name' VALUE 'Blue Mockingbird - Registry', 'description' VALUE 'Attempts to detect system changes made by Blue Mockingbird'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1112', 'T1047']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '92b0b372-a939-44ed-a11b-5136cf680e27', 'name' VALUE 'Blue Mockingbird - Registry', 'description' VALUE 'Attempts to detect system changes made by Blue Mockingbird'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1112', 'T1047']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\currentcontrolset\\services\\wercplsupport\\parameters\\servicedll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '28036918-04d3-423d-91c0-55ecf99fb892', 'name' VALUE 'NET NGenAssemblyUsageLog Registry Key Tamper', 'description' VALUE 'Detects changes to the NGenAssemblyUsageLog registry key.
.NET Usage Log output location can be controlled by setting the NGenAssemblyUsageLog CLR configuration knob in the Registry or by configuring an environment variable (as described in the next section).
By simplify specifying an arbitrary value (e.g. fake output location or junk data) for the expected value, a Usage Log file for the .NET execution context will not be created.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '28036918-04d3-423d-91c0-55ecf99fb892', 'name' VALUE 'NET NGenAssemblyUsageLog Registry Key Tamper', 'description' VALUE 'Detects changes to the NGenAssemblyUsageLog registry key.
.NET Usage Log output location can be controlled by setting the NGenAssemblyUsageLog CLR configuration knob in the Registry or by configuring an environment variable (as described in the next section).
By simplify specifying an arbitrary value (e.g. fake output location or junk data) for the expected value, a Usage Log file for the .NET execution context will not be created.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\\.netframework\\ngenassemblyusagelog$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '60936b49-fca0-4f32-993d-7415edcf9a5d', 'name' VALUE 'New Application in AppCompat', 'description' VALUE 'A General detection for a new application in AppCompat. This indicates an application executing for the first time on an endpoint.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['This rule is to explore new applications on an endpoint. False positives depends on the organization.', 'Newly setup system.', 'Legitimate installation of new application.'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '60936b49-fca0-4f32-993d-7415edcf9a5d', 'name' VALUE 'New Application in AppCompat', 'description' VALUE 'A General detection for a new application in AppCompat. This indicates an application executing for the first time on an endpoint.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['This rule is to explore new applications on an endpoint. False positives depends on the organization.', 'Newly setup system.', 'Legitimate installation of new application.'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\appcompatflags\\compatibility\ assistant\\store\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0442defa-b4a2-41c9-ae2c-ea7042fc4701', 'name' VALUE 'Potential Credential Dumping Attempt Using New NetworkProvider - REG', 'description' VALUE 'Detects when an attacker tries to add a new network provider in order to dump clear text credentials, similar to how the NPPSpy tool does it'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legitimate network providers used and not filtred in this rule'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0442defa-b4a2-41c9-ae2c-ea7042fc4701', 'name' VALUE 'Potential Credential Dumping Attempt Using New NetworkProvider - REG', 'description' VALUE 'Detects when an attacker tries to add a new network provider in order to dump clear text credentials, similar to how the NPPSpy tool does it'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legitimate network providers used and not filtred in this rule'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\system\\currentcontrolset\\services\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\networkprovider.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\system\\currentcontrolset\\services\\webclient\\networkprovider.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\system\\currentcontrolset\\services\\lanmanworkstation\\networkprovider.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\system\\currentcontrolset\\services\\rdpnp\\networkprovider.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\poqexec\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3390fbef-c98d-4bdd-a863-d65ed7c610dd', 'name' VALUE 'New ODBC Driver Registered', 'description' VALUE 'Detects the registration of a new ODBC driver.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Likely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3390fbef-c98d-4bdd-a863-d65ed7c610dd', 'name' VALUE 'New ODBC Driver Registered', 'description' VALUE 'Detects the registration of a new ODBC driver.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Likely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\odbc\\odbcinst\.ini\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\driver$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^%windir%\\system32\\sqlsrv32\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\sql\ server\\.*$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\aceodbc\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\progra.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\ access\ .*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\aceodbc\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\progra.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\ excel\ driver.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e4d22291-f3d5-4b78-9a0c-a1fbaf32a6a4', 'name' VALUE 'Potentially Suspicious ODBC Driver Registered', 'description' VALUE 'Detects the registration of a new ODBC driver where the driver is located in a potentially suspicious location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e4d22291-f3d5-4b78-9a0c-a1fbaf32a6a4', 'name' VALUE 'Potentially Suspicious ODBC Driver Registered', 'description' VALUE 'Detects the registration of a new ODBC driver where the driver is located in a potentially suspicious location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\perflogs\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\programdata\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\registration\\crmlog.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\com\\dmp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\fxstmp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\microsoft\\crypto\\rsa\\machinekeys\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\spool\\drivers\\color\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\spool\\printers\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\spool\\servers\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\tasks_migrated\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\tasks\\microsoft\\windows\\synccenter\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\syswow64\\com\\dmp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\syswow64\\fxstmp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\syswow64\\tasks\\microsoft\\windows\\pla\\system\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\syswow64\\tasks\\microsoft\\windows\\synccenter\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\tasks\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\tracing\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\roaming\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\odbc\\odbcinst\.ini\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\driver$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\setup$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1a5c46e9-f32f-42f7-b2bc-6e9084db7fbf', 'name' VALUE 'Trust Access Disable For VBApplications', 'description' VALUE 'Detects registry changes to Microsoft Office "AccessVBOM" to a value of "1" which disables trust access for VBA on the victim machine and lets attackers execute malicious macros without any Microsoft Office warnings.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1a5c46e9-f32f-42f7-b2bc-6e9084db7fbf', 'name' VALUE 'Trust Access Disable For VBApplications', 'description' VALUE 'Detects registry changes to Microsoft Office "AccessVBOM" to a value of "1" which disables trust access for VBA on the victim machine and lets attackers execute malicious macros without any Microsoft Office warnings.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\security\\accessvbom$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a5c7a43f-6009-4a8c-80c5-32abf1c53ecc', 'name' VALUE 'Microsoft Office Protected View Disabled', 'description' VALUE 'Detects changes to Microsoft Office protected view registry keys with which the attacker disables this feature.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a5c7a43f-6009-4a8c-80c5-32abf1c53ecc', 'name' VALUE 'Microsoft Office Protected View Disabled', 'description' VALUE 'Detects changes to Microsoft Office protected view registry keys with which the attacker disables this feature.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\office\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\security\\protectedview\\.*$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000000\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\enabledatabasefileprotectedview$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\enableforeigntextfileprotectedview$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\disableattachementsinpv$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\disableinternetfilesinpv$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\disableintranetcheck$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\disableunsafelocationsinpv$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '63647769-326d-4dde-a419-b925cc0caf42', 'name' VALUE 'Enable Microsoft Dynamic Data Exchange', 'description' VALUE 'Enable Dynamic Data Exchange protocol (DDE) in all supported editions of Microsoft Word or Excel.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1559.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '63647769-326d-4dde-a419-b925cc0caf42', 'name' VALUE 'Enable Microsoft Dynamic Data Exchange', 'description' VALUE 'Enable Dynamic Data Exchange protocol (DDE) in all supported editions of Microsoft Word or Excel.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1559.002']

  )) FROM EdrTable WHERE  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000000\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\excel\\security\\disableddeserverlaunch$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\excel\\security\\disableddeserverlookup$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000002\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\word\\security\\allowdde$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '396ae3eb-4174-4b9b-880e-dc0364d78a19', 'name' VALUE 'Potential Persistence Via Outlook LoadMacroProviderOnBoot Setting', 'description' VALUE 'Detects the modification of Outlook setting "LoadMacroProviderOnBoot" which if enabled allows the automatic loading of any configured VBA project/module'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0011'],
       'techniqueidlist' VALUE ARRAY['T1137', 'T1008', 'T1546']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '396ae3eb-4174-4b9b-880e-dc0364d78a19', 'name' VALUE 'Potential Persistence Via Outlook LoadMacroProviderOnBoot Setting', 'description' VALUE 'Detects the modification of Outlook setting "LoadMacroProviderOnBoot" which if enabled allows the automatic loading of any configured VBA project/module'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0011'],
       'techniqueidlist' VALUE ARRAY['T1137', 'T1008', 'T1546']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*0x00000001.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\outlook\\loadmacroprovideronboot$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e3b50fa5-3c3f-444e-937b-0a99d33731cd', 'name' VALUE 'Outlook Macro Execution Without Warning Setting Enabled', 'description' VALUE 'Detects the modification of Outlook security setting to allow unprompted execution of macros.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0011'],
       'techniqueidlist' VALUE ARRAY['T1137', 'T1008', 'T1546']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e3b50fa5-3c3f-444e-937b-0a99d33731cd', 'name' VALUE 'Outlook Macro Execution Without Warning Setting Enabled', 'description' VALUE 'Detects the modification of Outlook security setting to allow unprompted execution of macros.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0011'],
       'techniqueidlist' VALUE ARRAY['T1137', 'T1008', 'T1546']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*0x00000001.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\outlook\\security\\level$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6763c6c8-bd01-4687-bc8d-4fa52cf8ba08', 'name' VALUE 'Outlook EnableUnsafeClientMailRules Setting Enabled - Registry', 'description' VALUE 'Detects an attacker trying to enable the outlook security setting "EnableUnsafeClientMailRules" which allows outlook to run applications or execute macros'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6763c6c8-bd01-4687-bc8d-4fa52cf8ba08', 'name' VALUE 'Outlook EnableUnsafeClientMailRules Setting Enabled - Registry', 'description' VALUE 'Detects an attacker trying to enable the outlook security setting "EnableUnsafeClientMailRules" which allows outlook to run applications or execute macros'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\outlook\\security\\enableunsafeclientmailrules$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'c3cefdf4-6703-4e1c-bad8-bf422fc5015a', 'name' VALUE 'Outlook Security Settings Updated - Registry', 'description' VALUE 'Detects changes to the registry values related to outlook security settings'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrative activity'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1137']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'c3cefdf4-6703-4e1c-bad8-bf422fc5015a', 'name' VALUE 'Outlook Security Settings Updated - Registry', 'description' VALUE 'Detects changes to the registry values related to outlook security settings'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrative activity'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1137']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\office\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\outlook\\security\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a166f74e-bf44-409d-b9ba-ea4b2dd8b3cd', 'name' VALUE 'Macro Enabled In A Potentially Suspicious Document', 'description' VALUE 'Detects registry changes to Office trust records where the path is located in a potentially suspicious location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a166f74e-bf44-409d-b9ba-ea4b2dd8b3cd', 'name' VALUE 'Macro Enabled In A Potentially Suspicious Document', 'description' VALUE 'Detects registry changes to Office trust records where the path is located in a potentially suspicious location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*/appdata/local/microsoft/windows/inetcache/.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*/appdata/local/temp/.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*/perflogs/.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*c:/users/public/.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*file:///d:/.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*file:///e:/.*$') is not null) ) AND ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\security\\trusted\ documents\\trustrecords.*$') is not null) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f742bde7-9528-42e5-bd82-84f51a8387d2', 'name' VALUE 'Uncommon Microsoft Office Trusted Location Added', 'description' VALUE 'Detects changes to registry keys related to "Trusted Location" of Microsoft Office where the path is set to something uncommon. Attackers might add additional trusted locations to avoid macro security restrictions.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other unknown legitimate or custom paths need to be filtered to avoid false positives'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f742bde7-9528-42e5-bd82-84f51a8387d2', 'name' VALUE 'Uncommon Microsoft Office Trusted Location Added', 'description' VALUE 'Detects changes to registry keys related to "Trusted Location" of Microsoft Office where the path is set to something uncommon. Attackers might add additional trusted locations to avoid macro security restrictions.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other unknown legitimate or custom paths need to be filtered to avoid false positives'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*security\\trusted\ locations\\location.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\path$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\microsoft\ office\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\ \(x86\)\\microsoft\ office\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\common\ files\\microsoft\ shared\\clicktorun\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\officeclicktorun\.exe$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%appdata%\\microsoft\\templates.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%%appdata%%\\microsoft\\templates.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%appdata%\\microsoft\\word\\startup.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%%appdata%%\\microsoft\\word\\startup.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\program\ files\ \(x86\)\\microsoft\ office\\root\\templates\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\program\ files\\microsoft\ office\ \(x86\)\\templates.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\program\ files\\microsoft\ office\\root\\templates\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\program\ files\\microsoft\ office\\templates\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '91239011-fe3c-4b54-9f24-15c86bb65913', 'name' VALUE 'Office Macros Auto-Enabled', 'description' VALUE 'Detects registry changes to Microsoft Office "VBAWarning" to a value of "1" which enables the execution of all macros, whether signed or unsigned.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '91239011-fe3c-4b54-9f24-15c86bb65913', 'name' VALUE 'Office Macros Auto-Enabled', 'description' VALUE 'Detects registry changes to Microsoft Office "VBAWarning" to a value of "1" which enables the execution of all macros, whether signed or unsigned.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\security\\vbawarnings$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '707e097c-e20f-4f67-8807-1f72ff4500d6', 'name' VALUE 'Potential Persistence Via App Paths Default Property', 'description' VALUE 'Detects changes to the "Default" property for keys located in the \Software\Microsoft\Windows\CurrentVersion\App Paths\ registry. Which might be used as a method of persistence
The entries found under App Paths are used primarily for the following purposes.
First, to map an applications executable file name to that files fully qualified path.
Second, to prepend information to the PATH environment variable on a per-application, per-process basis.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate applications registering their binary from on of the suspicious locations mentioned above (tune it)'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.012']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '707e097c-e20f-4f67-8807-1f72ff4500d6', 'name' VALUE 'Potential Persistence Via App Paths Default Property', 'description' VALUE 'Detects changes to the "Default" property for keys located in the \Software\Microsoft\Windows\CurrentVersion\App Paths\ registry. Which might be used as a method of persistence
The entries found under App Paths are used primarily for the following purposes.
First, to map an applications executable file name to that files fully qualified path.
Second, to prepend information to the PATH environment variable on a per-application, per-process basis.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate applications registering their binary from on of the suspicious locations mentioned above (tune it)'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.012']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\users\\public.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\windows\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\desktop\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\downloads\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%temp%.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%tmp%.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*iex.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*invoke\-.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*rundll32.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*regsvr32.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*mshta.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*cscript.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*wscript.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.bat.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.hta.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.dll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.ps1.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\app\ paths.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\(default\)$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*path$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'df4dc653-1029-47ba-8231-3c44238cc0ae', 'name' VALUE 'Potential Persistence Using DebugPath', 'description' VALUE 'Detects potential persistence using Appx DebugPath'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'df4dc653-1029-47ba-8231-3c44238cc0ae', 'name' VALUE 'Potential Persistence Using DebugPath', 'description' VALUE 'Detects potential persistence using Appx DebugPath'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  )) FROM EdrTable WHERE  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*classes\\activatableclasses\\package\\microsoft\..*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\debugpath$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\packagedappxdebug\\microsoft\..*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\\(default\)$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e6fe26ee-d063-4f5b-b007-39e90aaf50e3', 'name' VALUE 'Potential Persistence Via AutodialDLL', 'description' VALUE 'Detects change the the "AutodialDLL" key which could be used as a persistence method to load custom DLL via the "ws2_32" library'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e6fe26ee-d063-4f5b-b007-39e90aaf50e3', 'name' VALUE 'Potential Persistence Via AutodialDLL', 'description' VALUE 'Detects change the the "AutodialDLL" key which could be used as a persistence method to load custom DLL via the "ws2_32" library'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\services\\winsock2\\parameters\\autodialdll.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '976dd1f2-a484-45ec-aa1d-0e87e882262b', 'name' VALUE 'Potential Persistence Via CHM Helper DLL', 'description' VALUE 'Detects when an attacker modifies the registry key "HtmlHelp Author" to achieve persistence'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '976dd1f2-a484-45ec-aa1d-0e87e882262b', 'name' VALUE 'Potential Persistence Via CHM Helper DLL', 'description' VALUE 'Detects when an attacker modifies the registry key "HtmlHelp Author" to achieve persistence'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\htmlhelp\ author\\location.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\wow6432node\\microsoft\\htmlhelp\ author\\location.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3d968d17-ffa4-4bc0-bfdc-f139de76ce77', 'name' VALUE 'Potential Persistence Via COM Hijacking From Suspicious Locations', 'description' VALUE 'Detects potential COM object hijacking where the "Server" (In/Out) is pointing to a suspicious or unsuale location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Probable legitimate applications. If you find these please add them to an exclusion list'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3d968d17-ffa4-4bc0-bfdc-f139de76ce77', 'name' VALUE 'Potential Persistence Via COM Hijacking From Suspicious Locations', 'description' VALUE 'Detects potential COM object hijacking where the "Server" (In/Out) is pointing to a suspicious or unsuale location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Probable legitimate applications. If you find these please add them to an exclusion list'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\desktop\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\downloads\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\microsoft\\windows\\start\ menu\\programs\\startup\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\system32\\spool\\drivers\\color\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\windows\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%appdata%.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%temp%.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%tmp%.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\inprocserver32\\\(default\)$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\localserver32\\\(default\)$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '243380fa-11eb-4141-af92-e14925e77c1b', 'name' VALUE 'Potential PSFactoryBuffer COM Hijacking', 'description' VALUE 'Detects changes to the PSFactory COM InProcServer32 registry. This technique was used by RomCom to create persistence storing a malicious DLL.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '243380fa-11eb-4141-af92-e14925e77c1b', 'name' VALUE 'Potential PSFactoryBuffer COM Hijacking', 'description' VALUE 'Detects changes to the PSFactory COM InProcServer32 registry. This technique was used by RomCom to create persistence storing a malicious DLL.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{c90250f3\-4d7d\-4991\-9b69\-a5c5bc1c2ae6\}\\inprocserver32\\\(default\)$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^%windir%\\system32\\actxprxy\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\windows\\system32\\actxprxy\.dll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fdbf0b9d-0182-4c43-893b-a1eaab92d085', 'name' VALUE 'Potential Persistence Via Custom Protocol Handler', 'description' VALUE 'Detects potential persistence activity via the registering of a new custom protocole handlers. While legitimate applications register protocole handlers often times during installation. And attacker can abuse this by setting a custom handler to be used as a persistence mechanism.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Many legitimate applications can register a new custom protocol handler. Additional filters needs to applied according to your environment.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fdbf0b9d-0182-4c43-893b-a1eaab92d085', 'name' VALUE 'Potential Persistence Via Custom Protocol Handler', 'description' VALUE 'Detects potential persistence activity via the registering of a new custom protocole handlers. While legitimate applications register protocole handlers often times during installation. And attacker can abuse this by setting a custom handler to be used as a persistence mechanism.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Many legitimate applications can register a new custom protocol handler. Additional filters needs to applied according to your environment.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^url:.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hkcr\\.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\).*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^url:ms\-.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a1e11042-a74a-46e6-b07c-c4ce8ecc239b', 'name' VALUE 'Potential Persistence Via Event Viewer Events.asp', 'description' VALUE 'Detects potential registry persistence technique using the Event Viewer "Events.asp" technique'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a1e11042-a74a-46e6-b07c-c4ce8ecc239b', 'name' VALUE 'Potential Persistence Via Event Viewer Events.asp', 'description' VALUE 'Detects potential registry persistence technique using the Event Viewer "Events.asp" technique'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\event\ viewer\\microsoftredirectionprogram.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\event\ viewer\\microsoftredirectionurl.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^\(empty\)$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^%%systemroot%%\\pchealth\\helpctr\\binaries\\helpctr\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*c:\\windows\\system32\\svchost\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\event\ viewer\\microsoftredirectionprogram$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^\-url\ hcp://services/centers/support\?topic=%%s$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*c:\\windows\\system32\\svchost\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\event\ viewer\\microsoftredirectionprogramcommandlineparameters$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^http://go\.microsoft\.com/fwlink/events\.asp$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '36803969-5421-41ec-b92f-8500f79c23b0', 'name' VALUE 'Potential Persistence Via GlobalFlags', 'description' VALUE 'Detects registry persistence technique using the GlobalFlags and SilentProcessExit keys'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0004', 'TA0003', 'TA0005', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1546.012']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '36803969-5421-41ec-b92f-8500f79c23b0', 'name' VALUE 'Potential Persistence Via GlobalFlags', 'description' VALUE 'Detects registry persistence technique using the GlobalFlags and SilentProcessExit keys'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0004', 'TA0003', 'TA0005', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1546.012']

  )) FROM EdrTable WHERE  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\image\ file\ execution\ options\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\globalflag.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\reportingmode.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\monitorprocess.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\silentprocessexit\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd88d0ab2-e696-4d40-a2ed-9790064e66b3', 'name' VALUE 'Modification of IE Registry Settings', 'description' VALUE 'Detects modification of the registry settings used for Internet Explorer and other Windows components that use these settings. An attacker can abuse this registry key to add a domain to the trusted sites Zone or insert javascript for persistence'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd88d0ab2-e696-4d40-a2ed-9790064e66b3', 'name' VALUE 'Modification of IE Registry Settings', 'description' VALUE 'Detects modification of the registry settings used for Internet Explorer and other Windows components that use these settings. An attacker can abuse this registry key to add a domain to the trusted sites Zone or insert javascript for persistence'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\internet\ settings.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\accepted\ documents\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^binary\ data$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^cookie:$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^visited:$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^\(empty\)$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\cache.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\zonemap.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\wpaddecision.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b23818c7-e575-4d13-8012-332075ec0a2b', 'name' VALUE 'Register New IFiltre For Persistence', 'description' VALUE 'Detects when an attacker register a new IFilter for an extension. Microsoft Windows Search uses filters to extract the content of items for inclusion in a full-text index. You can extend Windows Search to index new or proprietary file types by writing filters to extract the content, and property handlers to extract the properties of files'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate registration of IFilters by the OS or software'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b23818c7-e575-4d13-8012-332075ec0a2b', 'name' VALUE 'Register New IFiltre For Persistence', 'description' VALUE 'Detects when an attacker register a new IFilter for an extension. Microsoft Windows Search uses filters to extract the content of items for inclusion in a full-text index. You can extend Windows Search to index new or proprietary file types by writing filters to extract the content, and property handlers to extract the properties of files'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate registration of IFilters by the OS or software'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\persistentaddinsregistered\\\{89bcb740\-6119\-101a\-bcb7\-00dd010655af\}.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hklm\\software\\classes\\clsid.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hkey_local_machine\\software\\classes\\clsid.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\persistenthandler.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hklm\\software\\classes\\\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hkey_local_machine\\software\\classes\\\..*$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{4f46f75f\-199f\-4c63\-8b7d\-86d48fe7970c\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{4887767f\-7adc\-4983\-b576\-88fb643d6f79\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{d3b41fa1\-01e3\-49af\-aa25\-1d0d824275ae\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{72773e1a\-b711\-4d8d\-81fa\-b9a43b0650dd\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{098f2470\-bae0\-11cd\-b579\-08002b30bfeb\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{1aa9bf05\-9a97\-48c1\-ba28\-d9dce795e93c\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{2e2294a9\-50d7\-4fe7\-a09f\-e6492e185884\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{34ceac8d\-cbc0\-4f77\-b7b1\-8a60cb6da0f7\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{3b224b11\-9363\-407e\-850f\-c9e1ffacd8fb\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{3ddeb7a4\-8abf\-4d82\-b9ee\-e1f4552e95be\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{5645c8c1\-e277\-11cf\-8fda\-00aa00a14f93\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{5645c8c4\-e277\-11cf\-8fda\-00aa00a14f93\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{58a9ebf6\-5755\-4554\-a67e\-a2467ad1447b\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{5e941d80\-bf96\-11cd\-b579\-08002b30bfeb\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{698a4ffc\-63a3\-4e70\-8f00\-376ad29363fb\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{7e9d8d44\-6926\-426f\-aa2b\-217a819a5cce\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{8cd34779\-9f10\-4f9b\-adfb\-b3faeabdab5a\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{9694e38a\-e081\-46ac\-99a0\-8743c909acb6\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{98de59a0\-d175\-11cd\-a7bd\-00006b827d94\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{aa10385a\-f5aa\-4eff\-b3df\-71b701e25e18\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{b4132098\-7a03\-423d\-9463\-163cb07c151f\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{d044309b\-5da6\-4633\-b085\-4ed02522e5a5\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{d169c14a\-5148\-4322\-92c8\-754fc9d018d8\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{dd75716e\-b42e\-4978\-bb60\-1497b92e30c4\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{e2f83eed\-62de\-4a9f\-9cd0\-a1d40dcd13b6\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{e772ceb3\-e203\-4828\-adf1\-765713d981b8\}\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{eec97550\-47a9\-11cf\-b952\-00aa0051fe20\}.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\\{fb10bd80\-a331\-4e9e\-9eb7\-00279903ad99\}\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '41f6531d-af6e-4c6e-918f-b946f2b85a36', 'name' VALUE 'Potential Persistence Via LSA Extensions', 'description' VALUE 'Detects when an attacker modifies the "REG_MULTI_SZ" value named "Extensions" to include a custom DLL to achieve persistence via lsass.
The "Extensions" list contains filenames of DLLs being automatically loaded by lsass.exe. Each DLL has its InitializeLsaExtension() method called after loading.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '41f6531d-af6e-4c6e-918f-b946f2b85a36', 'name' VALUE 'Potential Persistence Via LSA Extensions', 'description' VALUE 'Detects when an attacker modifies the "REG_MULTI_SZ" value named "Extensions" to include a custom DLL to achieve persistence via lsass.
The "Extensions" list contains filenames of DLLs being automatically loaded by lsass.exe. Each DLL has its InitializeLsaExtension() method called after loading.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\system\\currentcontrolset\\control\\lsaextensionconfig\\lsasrv\\extensions.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '92772523-d9c1-4c93-9547-b0ca500baba3', 'name' VALUE 'Potential Persistence Via Mpnotify', 'description' VALUE 'Detects when an attacker register a new SIP provider for persistence and defense evasion'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Might trigger if a legitimate new SIP provider is registered. But this is not a common occurrence in an environment and should be investigated either way'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '92772523-d9c1-4c93-9547-b0ca500baba3', 'name' VALUE 'Potential Persistence Via Mpnotify', 'description' VALUE 'Detects when an attacker register a new SIP provider for persistence and defense evasion'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Might trigger if a legitimate new SIP provider is registered. But this is not a common occurrence in an environment and should be investigated either way'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\winlogon\\mpnotify.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8fbe98a8-8f9d-44f8-aa71-8c572e29ef06', 'name' VALUE 'Potential Persistence Via MyComputer Registry Keys', 'description' VALUE 'Detects modification to the "Default" value of the "MyComputer" key and subkeys to point to a custom binary that will be launched whenever the associated action is executed (see reference section for example)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely but if you experience FPs add specific processes and locations you would like to monitor for'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8fbe98a8-8f9d-44f8-aa71-8c572e29ef06', 'name' VALUE 'Potential Persistence Via MyComputer Registry Keys', 'description' VALUE 'Detects modification to the "Default" value of the "MyComputer" key and subkeys to point to a custom binary that will be launched whenever the associated action is executed (see reference section for example)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely but if you experience FPs add specific processes and locations you would like to monitor for'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\explorer\\mycomputer.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\(default\)$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a1b1fd53-9c4a-444c-bae0-34a330fc7aa8', 'name' VALUE 'Potential Persistence Via DLLPathOverride', 'description' VALUE 'Detects when an attacker adds a new "DLLPathOverride" value to the "Natural Language" key in order to achieve persistence which will get invoked by "SearchIndexer.exe" process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a1b1fd53-9c4a-444c-bae0-34a330fc7aa8', 'name' VALUE 'Potential Persistence Via DLLPathOverride', 'description' VALUE 'Detects when an attacker adds a new "DLLPathOverride" value to the "Natural Language" key in order to achieve persistence which will get invoked by "SearchIndexer.exe" process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\system\\currentcontrolset\\control\\contentindex\\language\\.*$') is not null) ) AND ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\stemmerdllpathoverride.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\wbdllpathoverride.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\stemmerclass.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\wbreakerclass.*$') is not null) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9d15044a-7cfe-4d23-8085-6ebc11df7685', 'name' VALUE 'Potential Persistence Via Visual Studio Tools for Office', 'description' VALUE 'Detects persistence via Visual Studio Tools for Office (VSTO) add-ins in Office applications.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate Addin Installation'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1137.006']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9d15044a-7cfe-4d23-8085-6ebc11df7685', 'name' VALUE 'Potential Persistence Via Visual Studio Tools for Office', 'description' VALUE 'Detects persistence via Visual Studio Tools for Office (VSTO) add-ins in Office applications.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate Addin Installation'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1137.006']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\office\\outlook\\addins\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\office\\word\\addins\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\office\\excel\\addins\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\office\\powerpoint\\addins\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\vsto\\security\\inclusion\\.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\avg\\antivirus\\regsvr\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\office\\outlook\\addins\\antivirus\.asoutext\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msiexec\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\regsvr32\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\integrator\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\officeclicktorun\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\visio\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\teams\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('details' VALUE `winlog`.`event_data`.`details`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ddd171b5-2cc6-4975-9e78-f0eccd08cc76', 'name' VALUE 'Potential Persistence Via Outlook Home Page', 'description' VALUE 'Detects potential persistence activity via outlook home pages.'),
       'observables_list' VALUE ARRAY['winlog.event_data.details'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('details' VALUE `winlog`.`event_data`.`details`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ddd171b5-2cc6-4975-9e78-f0eccd08cc76', 'name' VALUE 'Potential Persistence Via Outlook Home Page', 'description' VALUE 'Detects potential persistence activity via outlook home pages.'),
       'observables_list' VALUE ARRAY['winlog.event_data.details'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\office\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\outlook\\webview\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\url$') is not null) ) AND ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\calendar\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\inbox\\.*$') is not null) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('details' VALUE `winlog`.`event_data`.`details`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '487bb375-12ef-41f6-baae-c6a1572b4dd1', 'name' VALUE 'Potential Persistence Via Outlook Today Pages', 'description' VALUE 'Detects potential persistence activity via outlook today pages. An attacker can set a custom page to execute arbitrary code and link to it via the registry key "UserDefinedUrl".'),
       'observables_list' VALUE ARRAY['winlog.event_data.details'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('details' VALUE `winlog`.`event_data`.`details`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '487bb375-12ef-41f6-baae-c6a1572b4dd1', 'name' VALUE 'Potential Persistence Via Outlook Today Pages', 'description' VALUE 'Detects potential persistence activity via outlook today pages. An attacker can set a custom page to execute arbitrary code and link to it via the registry key "UserDefinedUrl".'),
       'observables_list' VALUE ARRAY['winlog.event_data.details'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\office\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\outlook\\today\\.*$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*stamp$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*userdefinedurl$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\officeclicktorun\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\common\ files\\microsoft\ shared\\clicktorun\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\common\ files\\microsoft\ shared\\clicktorun\\updates\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0cf2e1c6-8d10-4273-8059-738778f981ad', 'name' VALUE 'Potential WerFault ReflectDebugger Registry Value Abuse', 'description' VALUE 'Detects potential WerFault "ReflectDebugger" registry value abuse for persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0cf2e1c6-8d10-4273-8059-738778f981ad', 'name' VALUE 'Potential WerFault ReflectDebugger Registry Value Abuse', 'description' VALUE 'Detects potential WerFault "ReflectDebugger" registry value abuse for persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`eventtype` as VARCHAR)), '^setvalue$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\\windows\ error\ reporting\\hangs\\reflectdebugger$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fe20dda1-6f37-4379-bbe0-a98d400cae90', 'name' VALUE 'Potential Persistence Via Scrobj.dll COM Hijacking', 'description' VALUE 'Detect use of scrobj.dll as this DLL looks for the ScriptletURL key to get the location of the script to execute'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of the dll.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fe20dda1-6f37-4379-bbe0-a98d400cae90', 'name' VALUE 'Potential Persistence Via Scrobj.dll COM Hijacking', 'description' VALUE 'Detect use of scrobj.dll as this DLL looks for the ScriptletURL key to get the location of the script to execute'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of the dll.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\windows\\system32\\scrobj\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*inprocserver32\\\(default\)$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a0ff33d8-79e4-4cef-b4f3-9dc4133ccd12', 'name' VALUE 'Potential Persistence Via COM Search Order Hijacking', 'description' VALUE 'Detects potential COM object hijacking leveraging the COM Search Order'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some installed utilities (i.e. OneDrive) may serve new COM objects at user-level'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a0ff33d8-79e4-4cef-b4f3-9dc4133ccd12', 'name' VALUE 'Potential Persistence Via COM Search Order Hijacking', 'description' VALUE 'Detects potential COM object hijacking leveraging the COM Search Order'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some installed utilities (i.e. OneDrive) may serve new COM objects at user-level'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\clsid\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\inprocserver32\\\(default\)$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\dnssdx\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\syswow64\\dnssdx\.dll$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\programdata\\microsoft\\windows\ defender\\platform\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\windows\ defender\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msmpeng\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\roaming\\dropbox\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\dropboxext64\..*\.dll.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\dxdiag\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\microsoftedgeupdatecomregistershell64\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\gamingservicesproxy\.dll.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%%systemroot%%\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%%systemroot%%\\syswow64\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\securityhealthservice\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\poqexec\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\regsvr32\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\inprocserver32\\\(default\)$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\filerepository\\nvmdi\.inf.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\local\\microsoft\\onedrive\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\filecoauthlib64\.dll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\filesyncshell64\.dll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\filesyncapi64\.dll.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\autopilot\.dll.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\poqexec\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\spool\\drivers\\x64\\3\\printconfig\.dll$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\programdata\\microsoft\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\program\ files\ \(x86\)\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\pyshellext\.amd64\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\pyshellext\.dll$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\system32\\securityhealth.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\securityhealthservice\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\local\\microsoft\\teamsmeetingaddin\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\microsoft\.teams\.addinloader\.dll.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*tmopieplg\.dll$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\wuauclt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\svchost\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'dfb5b4e8-91d0-4291-b40a-e3b0d3942c45', 'name' VALUE 'Potential Persistence Via Shim Database Modification', 'description' VALUE 'Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.
The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate custom SHIM installations will also trigger this rule'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.011']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'dfb5b4e8-91d0-4291-b40a-e3b0d3942c45', 'name' VALUE 'Potential Persistence Via Shim Database Modification', 'description' VALUE 'Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.
The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate custom SHIM installations will also trigger this rule'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.011']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\appcompatflags\\installedsdb\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\appcompatflags\\custom\\.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bf344fea-d947-4ef4-9192-34d008315d3a', 'name' VALUE 'Suspicious Shim Database Patching Activity', 'description' VALUE 'Detects installation of new shim databases that try to patch sections of known processes for potential process injection or persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.011']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bf344fea-d947-4ef4-9192-34d008315d3a', 'name' VALUE 'Suspicious Shim Database Patching Activity', 'description' VALUE 'Detects installation of new shim databases that try to patch sections of known processes for potential process injection or persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.011']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\appcompatflags\\custom\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\csrss\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\dllhost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\explorer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\services\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\svchost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\taskhostw\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\winlogon\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6b6976a3-b0e6-4723-ac24-ae38a737af41', 'name' VALUE 'Potential Persistence Via Shim Database In Uncommon Location', 'description' VALUE 'Detects the installation of a new shim database where the file is located in a non-default location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.011']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6b6976a3-b0e6-4723-ac24-ae38a737af41', 'name' VALUE 'Potential Persistence Via Shim Database In Uncommon Location', 'description' VALUE 'Detects the installation of a new shim database where the file is located in a non-default location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.011']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\appcompatflags\\installedsdb\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\databasepath.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*:\\windows\\apppatch\\custom.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '086ae989-9ca6-4fe7-895a-759c5544f247', 'name' VALUE 'Potential Persistence Via TypedPaths', 'description' VALUE 'Detects modification addition to the TypedPaths key in the user or admin registry from a non standard application. Which might indicate persistence attempt'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '086ae989-9ca6-4fe7-895a-759c5544f247', 'name' VALUE 'Potential Persistence Via TypedPaths', 'description' VALUE 'Detects modification addition to the TypedPaths key in the user or admin registry from a non standard application. Which might indicate persistence attempt'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\explorer\\typedpaths\\.*$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\explorer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\explorer\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '961e33d1-4f86-4fcf-80ab-930a708b2f82', 'name' VALUE 'Potential Persistence Via Excel Add-in - Registry', 'description' VALUE 'Detect potential persistence via the creation of an excel add-in (XLL) file to make it run automatically when Excel is started.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1137.006']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '961e33d1-4f86-4fcf-80ab-930a708b2f82', 'name' VALUE 'Potential Persistence Via Excel Add-in - Registry', 'description' VALUE 'Detect potential persistence via the creation of an excel add-in (XLL) file to make it run automatically when Excel is started.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1137.006']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.xll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^/r\ .*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\office\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\excel\\options$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a9b6c011-ab69-4ddb-bc0a-c4f21c80ec47', 'name' VALUE 'Potential Attachment Manager Settings Associations Tamper', 'description' VALUE 'Detects tampering with attachment manager settings policies associations to lower the default file type risks (See reference for more information)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a9b6c011-ab69-4ddb-bc0a-c4f21c80ec47', 'name' VALUE 'Potential Attachment Manager Settings Associations Tamper', 'description' VALUE 'Detects tampering with attachment manager settings policies associations to lower the default file type risks (See reference for more information)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\policies\\associations\\.*$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00006152\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\defaultfiletyperisk$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.zip;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.rar;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.exe;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.bat;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.com;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.cmd;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.reg;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.msi;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.htm;.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.html;.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\lowriskfiletypes$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ee77a5db-b0f3-4be2-bfd4-b58be1c6b15a', 'name' VALUE 'Potential Attachment Manager Settings Attachments Tamper', 'description' VALUE 'Detects tampering with attachment manager settings policies attachments (See reference for more information)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ee77a5db-b0f3-4be2-bfd4-b58be1c6b15a', 'name' VALUE 'Potential Attachment Manager Settings Attachments Tamper', 'description' VALUE 'Detects tampering with attachment manager settings policies attachments (See reference for more information)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\policies\\attachments\\.*$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\hidezoneinfoonproperties$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000002\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\savezoneinformation$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\scanwithantivirus$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4a5f5a5e-ac01-474b-9b4e-d61298c9df1d', 'name' VALUE 'PowerShell as a Service in Registry', 'description' VALUE 'Detects that a powershell code is written to the registry as a service.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1569.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4a5f5a5e-ac01-474b-9b4e-d61298c9df1d', 'name' VALUE 'PowerShell as a Service in Registry', 'description' VALUE 'Detects that a powershell code is written to the registry as a service.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1569.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*powershell.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*pwsh.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\services\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\imagepath$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8218c875-90b9-42e2-b60d-0b0069816d10', 'name' VALUE 'PowerShell Script Execution Policy Enabled', 'description' VALUE 'Detects the enabling of the PowerShell script execution policy. Once enabled, this policy allows scripts to be executed.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Likely'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8218c875-90b9-42e2-b60d-0b0069816d10', 'name' VALUE 'PowerShell Script Execution Policy Enabled', 'description' VALUE 'Detects the enabling of the PowerShell script execution policy. Once enabled, this policy allows scripts to be executed.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Likely'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\policies\\microsoft\\windows\\powershell\\enablescripts$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fad91067-08c5-4d1a-8d8c-d96a21b37814', 'name' VALUE 'Potential PowerShell Execution Policy Tampering', 'description' VALUE 'Detects changes to the PowerShell execution policy in order to bypass signing requirements for script execution'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fad91067-08c5-4d1a-8d8c-d96a21b37814', 'name' VALUE 'Potential PowerShell Execution Policy Tampering', 'description' VALUE 'Detects changes to the PowerShell execution policy in order to bypass signing requirements for script execution'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*bypass.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*remotesigned.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*unrestricted.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\shellids\\microsoft\.powershell\\executionpolicy$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\policies\\microsoft\\windows\\powershell\\executionpolicy$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8d85cf08-bf97-4260-ba49-986a2a65129c', 'name' VALUE 'Suspicious Powershell In Registry Run Keys', 'description' VALUE 'Detects potential PowerShell commands or code within registry run keys'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate admin or third party scripts. Baseline according to your environment'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8d85cf08-bf97-4260-ba49-986a2a65129c', 'name' VALUE 'Suspicious Powershell In Registry Run Keys', 'description' VALUE 'Detects potential PowerShell commands or code within registry run keys'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate admin or third party scripts. Baseline according to your environment'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*powershell.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*pwsh\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*frombase64string.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.downloadfile\(.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.downloadstring\(.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\ \-w\ hidden\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\ \-w\ 1\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\-windowstyle\ hidden.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\-window\ hidden.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\ \-nop\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\ \-encodedcommand\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\-executionpolicy\ bypass.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*invoke\-expression.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*iex\ \(.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*invoke\-command.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*icm\ \-.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*invoke\-webrequest.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*iwr\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\ \-noni\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\ \-noninteractive\ .*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\run.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fecfd1a1-cc78-4313-a1ea-2ee2e8ec27a7', 'name' VALUE 'PowerShell Logging Disabled Via Registry Key Tampering', 'description' VALUE 'Detects changes to the registry for the currently logged-in user. In order to disable PowerShell module logging, script block logging or transcription and script execution logging'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fecfd1a1-cc78-4313-a1ea-2ee2e8ec27a7', 'name' VALUE 'PowerShell Logging Disabled Via Registry Key Tampering', 'description' VALUE 'Detects changes to the registry for the currently logged-in user. In order to disable PowerShell module logging, script block logging or transcription and script execution logging'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000000\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\\powershell\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\powershellcore\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\modulelogging\\enablemodulelogging$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\scriptblocklogging\\enablescriptblocklogging$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\scriptblocklogging\\enablescriptblockinvocationlogging$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\transcription\\enabletranscripting$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\transcription\\enableinvocationheader$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\enablescripts$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7021255e-5db3-4946-a8b9-0ba7a4644a69', 'name' VALUE 'Potential Provisioning Registry Key Abuse For Binary Proxy Execution - REG', 'description' VALUE 'Detects potential abuse of the provisioning registry key for indirect command execution through "Provlaunch.exe".'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7021255e-5db3-4946-a8b9-0ba7a4644a69', 'name' VALUE 'Potential Provisioning Registry Key Abuse For Binary Proxy Execution - REG', 'description' VALUE 'Detects potential abuse of the provisioning registry key for indirect command execution through "Provlaunch.exe".'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\provisioning\\commands\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8023f872-3f1d-4301-a384-801889917ab4', 'name' VALUE 'Usage of Renamed Sysinternals Tools - RegistrySet', 'description' VALUE 'Detects non-sysinternals tools setting the "accepteula" key which normally is set on sysinternals tool execution'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['T1588.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8023f872-3f1d-4301-a384-801889917ab4', 'name' VALUE 'Usage of Renamed Sysinternals Tools - RegistrySet', 'description' VALUE 'Detects non-sysinternals tools setting the "accepteula" key which normally is set on sysinternals tool execution'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['T1588.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\psexec.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\procdump.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\handle.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\livekd.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\process\ explorer.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\psloglist.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\pspasswd.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\active\ directory\ explorer.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\eulaaccepted$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\psexec\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\psexec64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procdump\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procdump64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\handle\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\handle64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\livekd\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\livekd64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\psloglist\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\psloglist64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\pspasswd\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\pspasswd64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\adexplorer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\adexplorer64\.exe$') is not null) ))  and not  ((`process`.`executable` is  null ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '90f342e1-1aaa-4e43-b092-39fda57ed11e', 'name' VALUE 'ETW Logging Disabled For rpcrt4.dll', 'description' VALUE 'Detects changes to the "ExtErrorInformation" key in order to disable ETW logging for rpcrt4.dll'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112', 'T1562']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '90f342e1-1aaa-4e43-b092-39fda57ed11e', 'name' VALUE 'ETW Logging Disabled For rpcrt4.dll', 'description' VALUE 'Detects changes to the "ExtErrorInformation" key in order to disable ETW logging for rpcrt4.dll'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112', 'T1562']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000000\)$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000002\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\rpc\\exterrorinformation$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '40b6e656-4e11-4c0c-8772-c1cc6dae34ce', 'name' VALUE 'ScreenSaver Registry Key Set', 'description' VALUE 'Detects registry key established after masqueraded .scr file execution using Rundll32 through desk.cpl'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of screen saver'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218.011']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '40b6e656-4e11-4c0c-8772-c1cc6dae34ce', 'name' VALUE 'ScreenSaver Registry Key Set', 'description' VALUE 'Detects registry key established after masqueraded .scr file execution using Rundll32 through desk.cpl'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of screen saver'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218.011']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rundll32\.exe$') is not null) )and ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.scr$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\control\ panel\\desktop\\scrnsave\.exe.*$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\windows\\syswow64\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '612e47e9-8a59-43a6-b404-f48683f45bd6', 'name' VALUE 'ServiceDll Hijack', 'description' VALUE 'Detects changes to the "ServiceDLL" value related to a service in the registry. This is often used as a method of persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrative scripts', 'Installation of a service'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1543.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '612e47e9-8a59-43a6-b404-f48683f45bd6', 'name' VALUE 'ServiceDll Hijack', 'description' VALUE 'Detects changes to the "ServiceDLL" value related to a service in the registry. This is often used as a method of persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrative scripts', 'Installation of a service'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1543.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\parameters\\servicedll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hklm\\system\\currentcontrolset\\services\\.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^%%systemroot%%\\system32\\ntdsa\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\lsass\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\currentcontrolset\\services\\ntds\\parameters\\servicedll$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\poqexec\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\windows\\system32\\spool\\drivers\\x64\\3\\printconfig\.dll$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4f281b83-0200-4b34-bf35-d24687ea57c2', 'name' VALUE 'ETW Logging Disabled For SCM', 'description' VALUE 'Detects changes to the "TracingDisabled" key in order to disable ETW logging for services.exe (SCM)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112', 'T1562']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4f281b83-0200-4b34-bf35-d24687ea57c2', 'name' VALUE 'ETW Logging Disabled For SCM', 'description' VALUE 'Detects changes to the "TracingDisabled" key in order to disable ETW logging for services.exe (SCM)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112', 'T1562']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\ nt\\currentversion\\tracing\\scm\\regular\\tracingdisabled$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1c3121ed-041b-4d97-a075-07f54f20fb4a', 'name' VALUE 'Registry Explorer Policy Modification', 'description' VALUE 'Detects registry modifications that disable internal tools or functions in explorer (malware like Agent Tesla uses this technique)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate admin script'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1c3121ed-041b-4d97-a075-07f54f20fb4a', 'name' VALUE 'Registry Explorer Policy Modification', 'description' VALUE 'Detects registry modifications that disable internal tools or functions in explorer (malware like Agent Tesla uses this technique)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate admin script'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\nologoff$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\nodesktop$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\norun$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\nofind$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\nocontrolpanel$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\nofilemenu$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\noclose$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\nosettaskbar$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\nopropertiesmydocuments$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\policies\\explorer\\notraycontextmenu$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5a2b21ee-6aaa-4234-ac9d-59a59edf90a1', 'name' VALUE 'Persistence Via New SIP Provider', 'description' VALUE 'Detects when an attacker register a new SIP provider for persistence and defense evasion'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate SIP being registered by the OS or different software.'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1553.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5a2b21ee-6aaa-4234-ac9d-59a59edf90a1', 'name' VALUE 'Persistence Via New SIP Provider', 'description' VALUE 'Detects when an attacker register a new SIP provider for persistence and defense evasion'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate SIP being registered by the OS or different software.'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1553.003']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\dll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\\$dll.*$') is not null) ) AND ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\cryptography\\providers\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\cryptography\\oid\\encodingtype.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\wow6432node\\microsoft\\cryptography\\providers\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\wow6432node\\microsoft\\cryptography\\oid\\encodingtype.*$') is not null) ) )  and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^wintrust\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^mso\.dll$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\windows\\system32\\psfsip\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\poqexec\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\cryptsipdll.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9f4662ac-17ca-43aa-8f12-5d7b989d0101', 'name' VALUE 'Tamper With Sophos AV Registry Keys', 'description' VALUE 'Detects tamper attempts to sophos av functionality via registry key modification'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some FP may occur when the feature is disabled by the AV itself, you should always investigate if the action was legitimate'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9f4662ac-17ca-43aa-8f12-5d7b989d0101', 'name' VALUE 'Tamper With Sophos AV Registry Keys', 'description' VALUE 'Detects tamper attempts to sophos av functionality via registry key modification'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some FP may occur when the feature is disabled by the AV itself, you should always investigate if the action was legitimate'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000000\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\sophos\ endpoint\ defense\\tamperprotection\\config\\savenabled.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\sophos\ endpoint\ defense\\tamperprotection\\config\\sedenabled.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\sophos\\savservice\\tamperprotection\\enabled.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f8aebc67-a56d-4ec9-9fbe-7b0e8b7b4efd', 'name' VALUE 'Hiding User Account Via SpecialAccounts Registry Key', 'description' VALUE 'Detects modifications to the registry key "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\Userlist" where the value is set to "0" in order to hide user account from being listed on the logon screen.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f8aebc67-a56d-4ec9-9fbe-7b0e8b7b4efd', 'name' VALUE 'Hiding User Account Via SpecialAccounts Registry Key', 'description' VALUE 'Detects modifications to the registry key "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\Userlist" where the value is set to "0" in order to hide user account from being listed on the logon screen.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000000\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`eventtype` as VARCHAR)), '^setvalue$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\winlogon\\specialaccounts\\userlist.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0c93308a-3f1b-40a9-b649-57ea1a1c1d63', 'name' VALUE 'Activate Suppression of Windows Security Center Notifications', 'description' VALUE 'Detect set Notification_Suppress to 1 to disable the Windows security center notification'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0c93308a-3f1b-40a9-b649-57ea1a1c1d63', 'name' VALUE 'Activate Suppression of Windows Security Center Notifications', 'description' VALUE 'Detect set Notification_Suppress to 1 to disable the Windows security center notification'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\policies\\microsoft\\windows\ defender\\ux\ configuration\\notification_suppress$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '34aa0252-6039-40ff-951f-939fd6ce47d8', 'name' VALUE 'Suspicious Keyboard Layout Load', 'description' VALUE 'Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrators or users that actually use the selected keyboard layouts (heavily depends on the organisations user base)'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['T1588.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '34aa0252-6039-40ff-951f-939fd6ce47d8', 'name' VALUE 'Suspicious Keyboard Layout Load', 'description' VALUE 'Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrators or users that actually use the selected keyboard layouts (heavily depends on the organisations user base)'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['T1588.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*00000429.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*00050429.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*0000042a.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\keyboard\ layout\\preload\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\keyboard\ layout\\substitutes\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4eec988f-7bf0-49f1-8675-1e6a510b3a2a', 'name' VALUE 'Potential PendingFileRenameOperations Tamper', 'description' VALUE 'Detect changes to the "PendingFileRenameOperations" registry key from uncommon or suspicious images lcoations to stage currently used files for rename after reboot.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Installers and updaters may set currently in use files for rename after a reboot.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4eec988f-7bf0-49f1-8675-1e6a510b3a2a', 'name' VALUE 'Potential PendingFileRenameOperations Tamper', 'description' VALUE 'Detect changes to the "PendingFileRenameOperations" registry key from uncommon or suspicious images lcoations to stage currently used files for rename after reboot.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Installers and updaters may set currently in use files for rename after a reboot.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`eventtype` as VARCHAR)), '^setvalue$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\currentcontrolset\\control\\session\ manager\\pendingfilerenameoperations.*$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\reg\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\regedit\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\users\\public\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e0813366-0407-449a-9869-a2db1119dc41', 'name' VALUE 'Suspicious Printer Driver Empty Manufacturer', 'description' VALUE 'Detects a suspicious printer driver installation with an empty Manufacturer value'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Alerts on legitimate printer drivers that do not set any more details in the Manufacturer value'] ,
       'tacticidlist' VALUE ARRAY['TA0004', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1574']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e0813366-0407-449a-9869-a2db1119dc41', 'name' VALUE 'Suspicious Printer Driver Empty Manufacturer', 'description' VALUE 'Detects a suspicious printer driver installation with an empty Manufacturer value'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Alerts on legitimate printer drivers that do not set any more details in the Manufacturer value'] ,
       'tacticidlist' VALUE ARRAY['TA0004', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1574']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^\(empty\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\control\\print\\environments\\windows\ x64\\drivers.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\manufacturer.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\cutepdf\ writer\ v4\.0\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\version\-3\\pdf24\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\vnc\ printer\ \(ps\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\vnc\ printer\ \(ud\)\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('process' VALUE JSON_OBJECT ('executable' VALUE `process`.`executable`, 'parent' VALUE  JSON_OBJECT ('executable' VALUE `process`.`parent`.`executable`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b7916c2a-fa2f-4795-9477-32b731f70f11', 'name' VALUE 'Registry Persistence via Explorer Run Key', 'description' VALUE 'Detects a possible persistence mechanism using RUN key for Windows Explorer and pointing to a suspicious folder'),
       'observables_list' VALUE ARRAY['process.executable', 'process.parent.executable'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('process' VALUE JSON_OBJECT ('executable' VALUE `process`.`executable`, 'parent' VALUE  JSON_OBJECT ('executable' VALUE `process`.`parent`.`executable`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b7916c2a-fa2f-4795-9477-32b731f70f11', 'name' VALUE 'Registry Persistence via Explorer Run Key', 'description' VALUE 'Detects a possible persistence mechanism using RUN key for Windows Explorer and pointing to a suspicious folder'),
       'observables_list' VALUE ARRAY['process.executable', 'process.parent.executable'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\\currentversion\\policies\\explorer\\run$') is not null) )and ( ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\windows\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\programdata\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\\$recycle\.bin\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\users\\default\\.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\.*$') is not null)  ) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('process' VALUE JSON_OBJECT ('executable' VALUE `process`.`executable`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '02ee49e2-e294-4d0f-9278-f5b3212fc588', 'name' VALUE 'New RUN Key Pointing to Suspicious Folder', 'description' VALUE 'Detects suspicious new RUN key element pointing to an executable in a suspicious folder'),
       'observables_list' VALUE ARRAY['process.executable'],
       'falsepositives' VALUE ARRAY['Software using weird folders for updates'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('process' VALUE JSON_OBJECT ('executable' VALUE `process`.`executable`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '02ee49e2-e294-4d0f-9278-f5b3212fc588', 'name' VALUE 'New RUN Key Pointing to Suspicious Folder', 'description' VALUE 'Detects suspicious new RUN key element pointing to an executable in a suspicious folder'),
       'observables_list' VALUE ARRAY['process.executable'],
       'falsepositives' VALUE ARRAY['Software using weird folders for updates'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  )) FROM EdrTable WHERE (( ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\windows\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\\$recycle\.bin\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\users\\default\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\users\\desktop\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%temp%\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*%tmp%\\.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^%public%\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^wscript.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^cscript.*$') is not null)  ) ) AND ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\run\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\runonce\\.*$') is not null) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f2485272-a156-4773-82d7-1d178bc4905b', 'name' VALUE 'Suspicious Service Installed', 'description' VALUE 'Detects installation of NalDrv or PROCEXP152 services via registry-keys to non-system32 folders.
Both services are used in the tool Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU (https://github.com/hfiref0x/KDU)
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legimate tools using this service names and drivers. Note - clever attackers may easily bypass this detection by just renaming the services. Therefore just Medium-level and dont rely on it.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f2485272-a156-4773-82d7-1d178bc4905b', 'name' VALUE 'Suspicious Service Installed', 'description' VALUE 'Detects installation of NalDrv or PROCEXP152 services via registry-keys to non-system32 folders.
Both services are used in the tool Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU (https://github.com/hfiref0x/KDU)
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legimate tools using this service names and drivers. Note - clever attackers may easily bypass this detection by just renaming the services. Therefore just Medium-level and dont rely on it.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hklm\\system\\currentcontrolset\\services\\naldrv\\imagepath$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hklm\\system\\currentcontrolset\\services\\procexp152\\imagepath$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\windows\\system32\\drivers\\procexp152\.sys.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procmon64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procmon\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\handle\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\handle64\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9c226817-8dc9-46c2-a58d-66655aafd7dc', 'name' VALUE 'Modify User Shell Folders Startup Value', 'description' VALUE 'Detect modification of the startup key to a path where a payload could be stored to be launched during startup'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9c226817-8dc9-46c2-a58d-66655aafd7dc', 'name' VALUE 'Modify User Shell Folders Startup Value', 'description' VALUE 'Detect modification of the startup key to a path where a payload could be stored to be launched during startup'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\explorer\\user\ shell\ folders.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*startup$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '966315ef-c5e1-4767-ba25-fce9c8de3660', 'name' VALUE 'Suspicious Environment Variable Has Been Registered', 'description' VALUE 'Detects the creation of user-specific or system-wide environment variables via the registry. Which contains suspicious commands and strings'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '966315ef-c5e1-4767-ba25-fce9c8de3660', 'name' VALUE 'Suspicious Environment Variable Has Been Registered', 'description' VALUE 'Detects the creation of user-specific or system-wide environment variables via the registry. Which contains suspicious commands and strings'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE (( ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^powershell$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^pwsh$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*c:\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*tvqqaamaaaaeaaaa.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*tvpqaaiaaaaeaa8a.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*tvqaaaeaaaaeabaa.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*tvoaaaaaaaaaaaaa.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*tvptaqeaaaaeaaaa.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*sw52b2tll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*ludm9rzs.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*jbnzva2ut.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*sqbuahyabwbragualq.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*kabgb2ag8aawblac0a.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*jag4adgbvagsazqata.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^suvy.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^sqbfaf.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^sqbuah.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^cwbha.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^awv4.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^aqbla.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^r2v0.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dmfy.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dgbha.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dxnpbm.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^h4sia.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^y21k.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^cabhah.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^qzpc.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^yzpc.*$') is not null)  ) ) AND ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\environment\\.*$') is not null) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4720b7df-40c3-48fd-bbdf-fd4b3c464f0d', 'name' VALUE 'Scheduled TaskCache Change by Uncommon Program', 'description' VALUE 'Monitor the creation of a new key under TaskCache when a new scheduled task is registered by a process that is not svchost.exe, which is suspicious'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1053', 'T1053.005']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4720b7df-40c3-48fd-bbdf-fd4b3c464f0d', 'name' VALUE 'Scheduled TaskCache Change by Uncommon Program', 'description' VALUE 'Monitor the creation of a new key under TaskCache when a new scheduled task is registered by a process that is not svchost.exe, which is suspicious'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1053', 'T1053.005']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\ nt\\currentversion\\schedule\\taskcache\\.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*microsoft\\windows\\updateorchestrator.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*microsoft\\windows\\softwareprotectionplatform\\svcrestarttask\\index.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*microsoft\\windows\\flighting\\onesettings\\refreshcache\\index.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\dropbox\\update\\dropboxupdate\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\dropbox\\update\\dropboxupdate\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\explorer\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\schedule\\taskcache\\tree\\microsoft\\windows\\pla\\server\ manager\ performance\ monitor\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\msiexec\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\ngen\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\microsoft\.net\\framework.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\schedule\\taskcache\\tasks\\\{b66b135d\-da06\-4fc4\-95f8\-7458e1d10129\}.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\schedule\\taskcache\\tree\\microsoft\\windows\\\.net\ framework\\\.net\ framework\ ngen.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\microsoft\ office\\root\\integration\\integrator\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\ office\\root\\integration\\integrator\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\svchost\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^system$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\tiworker\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '73a883d0-0348-4be4-a8d8-51031c2564f8', 'name' VALUE 'Potential Registry Persistence Attempt Via Windows Telemetry', 'description' VALUE 'Detects potential persistence behavior using the windows telemetry registry key.
Windows telemetry makes use of the binary CompatTelRunner.exe to run a variety of commands and perform the actual telemetry collections.
This binary was created to be easily extensible, and to that end, it relies on the registry to instruct on which commands to run.
The problem is, it will run any arbitrary command without restriction of location or type.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1053.005']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '73a883d0-0348-4be4-a8d8-51031c2564f8', 'name' VALUE 'Potential Registry Persistence Attempt Via Windows Telemetry', 'description' VALUE 'Detects potential persistence behavior using the windows telemetry registry key.
Windows telemetry makes use of the binary CompatTelRunner.exe to run a variety of commands and perform the actual telemetry collections.
This binary was created to be easily extensible, and to that end, it relies on the registry to instruct on which commands to run.
The problem is, it will run any arbitrary command without restriction of location or type.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1053.005']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.bat.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.bin.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.cmd.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.dat.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.dll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.exe.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.hta.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.jar.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.js.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.msi.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.ps.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.sh.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.vb.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\appcompatflags\\telemetrycontroller\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\command$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\system32\\compattelrunner\.exe.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\system32\\devicecensus\.exe.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a2863fbc-d5cb-48d5-83fb-d976d4b1743b', 'name' VALUE 'RDP Sensitive Settings Changed to Zero', 'description' VALUE 'Detects tampering of RDP Terminal Service/Server sensitive settings.
Such as allowing unauthorized users access to a system via the fAllowUnsolicited or enabling RDP via fDenyTSConnections, etc.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some of the keys mentioned here could be modified by an administrator while setting group policy (it should be investigated either way)'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a2863fbc-d5cb-48d5-83fb-d976d4b1743b', 'name' VALUE 'RDP Sensitive Settings Changed to Zero', 'description' VALUE 'Detects tampering of RDP Terminal Service/Server sensitive settings.
Such as allowing unauthorized users access to a system via the fAllowUnsolicited or enabling RDP via fDenyTSConnections, etc.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some of the keys mentioned here could be modified by an administrator while setting group policy (it should be investigated either way)'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000000\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\fdenytsconnections$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\fsinglesessionperuser$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\userauthentication$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3f6b7b62-61aa-45db-96bd-9c31b36b653c', 'name' VALUE 'RDP Sensitive Settings Changed', 'description' VALUE 'Detects tampering of RDP Terminal Service/Server sensitive settings.
Such as allowing unauthorized users access to a system via the fAllowUnsolicited or enabling RDP via fDenyTSConnections...etc
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some of the keys mentioned here could be modified by an administrator while setting group policy (it should be investigated either way)'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3f6b7b62-61aa-45db-96bd-9c31b36b653c', 'name' VALUE 'RDP Sensitive Settings Changed', 'description' VALUE 'Detects tampering of RDP Terminal Service/Server sensitive settings.
Such as allowing unauthorized users access to a system via the fAllowUnsolicited or enabling RDP via fDenyTSConnections...etc
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some of the keys mentioned here could be modified by an administrator while setting group policy (it should be investigated either way)'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000002\)$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000003\)$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000004\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\policies\\microsoft\\windows\ nt\\terminal\ services\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\control\\terminal\ server\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\shadow$') is not null) )or (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\control\\terminal\ server\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\policies\\microsoft\\windows\ nt\\terminal\ services\\.*$') is not null) )and ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\fallowunsolicited$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\fallowunsolicitedfullcontrol$') is not null) ))  or ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\services\\termservice\\parameters\\servicedll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\control\\terminal\ server\\winstations\\rdp\-tcp\\initialprogram.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\control\\terminal\ server\\initialprogram.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\policies\\microsoft\\windows\ nt\\terminal\ services\\initialprogram.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e88a6ddc-74f7-463b-9b26-f69fc0d2ce85', 'name' VALUE 'Set TimeProviders DllName', 'description' VALUE 'Detects processes setting a new DLL in DllName in under HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\TimeProvider.
Adversaries may abuse time providers to execute DLLs when the system boots.
The Windows Time service (W32Time) enables time synchronization across and within domains.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1547.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e88a6ddc-74f7-463b-9b26-f69fc0d2ce85', 'name' VALUE 'Set TimeProviders DllName', 'description' VALUE 'Detects processes setting a new DLL in DllName in under HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\TimeProvider.
Adversaries may abuse time providers to execute DLLs when the system boots.
The Windows Time service (W32Time) enables time synchronization across and within domains.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1547.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*dllname$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^hklm\\system\\currentcontrolset\\services\\w32time\\timeproviders.*$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\windows\\system32\\w32time\.dll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '439957a7-ad86-4a8f-9705-a28131c6821b', 'name' VALUE 'Old TLS1.0/TLS1.1 Protocol Version Enabled', 'description' VALUE 'Detects applications or users re-enabling old TLS versions by setting the "Enabled" value to "1" for the "Protocols" registry key.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate enabling of the old tls versions due to incompatibility'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '439957a7-ad86-4a8f-9705-a28131c6821b', 'name' VALUE 'Old TLS1.0/TLS1.1 Protocol Version Enabled', 'description' VALUE 'Detects applications or users re-enabling old TLS versions by setting the "Enabled" value to "1" for the "Protocols" registry key.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate enabling of the old tls versions due to incompatibility'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\control\\securityproviders\\schannel\\protocols\\tls\ 1\.0\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\control\\securityproviders\\schannel\\protocols\\tls\ 1\.1\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\enabled$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'dc5c24af-6995-49b2-86eb-a9ff62199e82', 'name' VALUE 'COM Hijacking via TreatAs', 'description' VALUE 'Detect modification of TreatAs key to enable "rundll32.exe -sta" command'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'dc5c24af-6995-49b2-86eb-a9ff62199e82', 'name' VALUE 'COM Hijacking via TreatAs', 'description' VALUE 'Detect modification of TreatAs key to enable "rundll32.exe -sta" command'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.015']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*treatas\\\(default\)$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\msiexec\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\msiexec\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\officeclicktorun\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\common\ files\\microsoft\ shared\\clicktorun\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\ office\\root\\integration\\integrator\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\svchost\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b110ebaf-697f-4da1-afd5-b536fa27a2c1', 'name' VALUE 'Potential Signing Bypass Via Windows Developer Features - Registry', 'description' VALUE 'Detects when the enablement of developer features such as "Developer Mode" or "Application Sideloading". Which allows the user to install untrusted packages.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b110ebaf-697f-4da1-afd5-b536fa27a2c1', 'name' VALUE 'Potential Signing Bypass Via Windows Developer Features - Registry', 'description' VALUE 'Detects when the enablement of developer features such as "Developer Mode" or "Application Sideloading". Which allows the user to install untrusted packages.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\\currentversion\\appmodelunlock.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\policies\\microsoft\\windows\\appx\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\allowalltrustedapps$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\allowdevelopmentwithoutdevlicense$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7c81fec3-1c1d-43b0-996a-46753041b1b6', 'name' VALUE 'UAC Bypass via Event Viewer', 'description' VALUE 'Detects UAC bypass method using Windows event viewer'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7c81fec3-1c1d-43b0-996a-46753041b1b6', 'name' VALUE 'UAC Bypass via Event Viewer', 'description' VALUE 'Detects UAC bypass method using Windows event viewer'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\mscfile\\shell\\open\\command$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5b872a46-3b90-45c1-8419-f675db8053aa', 'name' VALUE 'UAC Bypass via Sdclt', 'description' VALUE 'Detects the pattern of UAC Bypass using registry key manipulation of sdclt.exe (e.g. UACMe 53)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5b872a46-3b90-45c1-8419-f675db8053aa', 'name' VALUE 'UAC Bypass via Sdclt', 'description' VALUE 'Detects the pattern of UAC Bypass using registry key manipulation of sdclt.exe (e.g. UACMe 53)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\classes\\exefile\\shell\\runas\\command\\isolatedcommand$') is not null) ) OR (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '-1[0-9]{3}\\software\\classes\\') is not null AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\classes\\folder\\shell\\open\\command\\symboliclinkvalue$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6597be7b-ac61-4ac8-bef4-d3ec88174853', 'name' VALUE 'UAC Bypass Abusing Winsat Path Parsing - Registry', 'description' VALUE 'Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6597be7b-ac61-4ac8-bef4-d3ec88174853', 'name' VALUE 'UAC Bypass Abusing Winsat Path Parsing - Registry', 'description' VALUE 'Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\appdata\\local\\temp\\system32\\winsat\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^c:\\users\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\root\\inventoryapplicationfile\\winsat\.exe\|.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\lowercaselongpath$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5f9db380-ea57-4d1e-beab-8a2d33397e93', 'name' VALUE 'UAC Bypass Using Windows Media Player - Registry', 'description' VALUE 'Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5f9db380-ea57-4d1e-beab-8a2d33397e93', 'name' VALUE 'UAC Bypass Using Windows Media Player - Registry', 'description' VALUE 'Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^binary\ data$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\appcompatflags\\compatibility\ assistant\\store\\c:\\program\ files\\windows\ media\ player\\osk\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '46490193-1b22-4c29-bdd6-5bf63907216f', 'name' VALUE 'VBScript Payload Stored in Registry', 'description' VALUE 'Detects VBScript content stored into registry keys as seen being used by UNC2452 group'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '46490193-1b22-4c29-bdd6-5bf63907216f', 'name' VALUE 'VBScript Payload Stored in Registry', 'description' VALUE 'Detects VBScript content stored into registry keys as seen being used by UNC2452 group'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*vbscript:.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*jscript:.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*mshtml,.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*runhtmlapplication.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*execute\(.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*createobject.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*window\.close.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*software\\microsoft\\windows\\currentversion\\run.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\\microsoft\.net\\primary\ interop\ assemblies\\microsoft\.mshtml\.dll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*<\\microsoft\.mshtml,fileversion=.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*_mshtml_dll_.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*<\\microsoft\.mshtml,culture=.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msiexec\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\\currentversion\\installer\\userdata\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fc014922-5def-4da9-a0fc-28c973f41bfb', 'name' VALUE 'Execution DLL of Choice Using WAB.EXE', 'description' VALUE 'This rule detects that the path to the DLL written in the registry is different from the default one. Launched WAB.exe tries to load the DLL from Registry.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fc014922-5def-4da9-a0fc-28c973f41bfb', 'name' VALUE 'Execution DLL of Choice Using WAB.EXE', 'description' VALUE 'This rule detects that the path to the DLL written in the registry is different from the default one. Launched WAB.exe tries to load the DLL from Registry.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\wab\\dllpath$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^%commonprogramfiles%\\system\\wab32\.dll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd6a9b252-c666-4de6-8806-5561bbbd3bdc', 'name' VALUE 'Wdigest Enable UseLogonCredential', 'description' VALUE 'Detects potential malicious modification of the property value of UseLogonCredential from HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest to enable clear-text credentials'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd6a9b252-c666-4de6-8806-5561bbbd3bdc', 'name' VALUE 'Wdigest Enable UseLogonCredential', 'description' VALUE 'Detects potential malicious modification of the property value of UseLogonCredential from HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest to enable clear-text credentials'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*wdigest\\uselogoncredential$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0eb46774-f1ab-4a74-8238-1155855f2263', 'name' VALUE 'Disable Windows Defender Functionalities Via Registry Keys', 'description' VALUE 'Detects when attackers or tools disable Windows Defender functionalities via the Windows registry'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator actions via the Windows Defender interface'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0eb46774-f1ab-4a74-8238-1155855f2263', 'name' VALUE 'Disable Windows Defender Functionalities Via Registry Keys', 'description' VALUE 'Detects when attackers or tools disable Windows Defender functionalities via the Windows registry'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator actions via the Windows Defender interface'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ defender\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\policies\\microsoft\\windows\ defender\ security\ center\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\policies\\microsoft\\windows\ defender\\.*$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000000\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\app\ and\ browser\ protection\\disallowexploitprotectionoverride$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\features\\tamperprotection$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\mpengine\\mpenablepus$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\puaprotection$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\signature\ update\\forceupdatefrommu$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\spynet\\spynetreporting$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\spynet\\submitsamplesconsent$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\windows\ defender\ exploit\ guard\\controlled\ folder\ access\\enablecontrolledfolderaccess$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\disableantispyware$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\disableantivirus$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\real\-time\ protection\\disablebehaviormonitoring$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\real\-time\ protection\\disableintrusionpreventionsystem$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\real\-time\ protection\\disableioavprotection$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\real\-time\ protection\\disableonaccessprotection$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\real\-time\ protection\\disablerealtimemonitoring$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\real\-time\ protection\\disablescanonrealtimeenable$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\real\-time\ protection\\disablescriptscanning$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\reporting\\disableenhancednotifications$') is not null OR REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\spynet\\disableblockatfirstseen$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6db5eaf9-88f7-4ed9-af7d-9ef2ad12f236', 'name' VALUE 'Winget Admin Settings Modification', 'description' VALUE 'Detects changes to the AppInstaller (winget) admin settings. Such as enabling local manifest installations or disabling installer hash checks'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['The event doesnt contain information about the type of change. False positives are expected with legitimate changes'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6db5eaf9-88f7-4ed9-af7d-9ef2ad12f236', 'name' VALUE 'Winget Admin Settings Modification', 'description' VALUE 'Detects changes to the AppInstaller (winget) admin settings. Such as enabling local manifest installations or disabling installer hash checks'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['The event doesnt contain information about the type of change. False positives are expected with legitimate changes'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winget\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\localstate\\admin_settings$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^\\registry\\a\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fa277e82-9b78-42dd-b05c-05555c7b6015', 'name' VALUE 'Enable Local Manifest Installation With Winget', 'description' VALUE 'Detects changes to the AppInstaller (winget) policy. Specifically the activation of the local manifest installation, which allows a user to install new packages via custom manifests.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrators or developers might enable this for testing purposes or to install custom private packages'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fa277e82-9b78-42dd-b05c-05555c7b6015', 'name' VALUE 'Enable Local Manifest Installation With Winget', 'description' VALUE 'Detects changes to the AppInstaller (winget) policy. Specifically the activation of the local manifest installation, which allows a user to install new packages via custom manifests.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrators or developers might enable this for testing purposes or to install custom private packages'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\appinstaller\\enablelocalmanifestfiles$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f7997770-92c3-4ec9-b112-774c4ef96f96', 'name' VALUE 'Winlogon AllowMultipleTSSessions Enable', 'description' VALUE 'Detects when the AllowMultipleTSSessions value is enabled.
Which allows for multiple Remote Desktop connection sessions to be opened at once.
This is often used by attacker as a way to connect to an RDP session without disconnecting the other users
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of the multi session functionality'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f7997770-92c3-4ec9-b112-774c4ef96f96', 'name' VALUE 'Winlogon AllowMultipleTSSessions Enable', 'description' VALUE 'Detects when the AllowMultipleTSSessions value is enabled.
Which allows for multiple Remote Desktop connection sessions to be opened at once.
This is often used by attacker as a way to connect to an RDP session without disconnecting the other users
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of the multi session functionality'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1112']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*dword\ \(0x00000001\)$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\microsoft\\windows\ nt\\currentversion\\winlogon\\allowmultipletssessions$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bbf59793-6efb-4fa1-95ca-a7d288e52c88', 'name' VALUE 'Winlogon Notify Key Logon Persistence', 'description' VALUE 'Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.
Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.004']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bbf59793-6efb-4fa1-95ca-a7d288e52c88', 'name' VALUE 'Winlogon Notify Key Logon Persistence', 'description' VALUE 'Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.
Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.004']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`details` as VARCHAR)), '^.*\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`registry`.`path` as VARCHAR)), '^.*\\software\\microsoft\\windows\ nt\\currentversion\\winlogon\\notify\\logon$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8ac03a65-6c84-4116-acad-dc1558ff7a77', 'name' VALUE 'Sysmon Configuration Change', 'description' VALUE 'Detects a Sysmon configuration change, which could be the result of a legitimate reconfiguration or someone trying manipulate the configuration'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate administrative action'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8ac03a65-6c84-4116-acad-dc1558ff7a77', 'name' VALUE 'Sysmon Configuration Change', 'description' VALUE 'Detects a Sysmon configuration change, which could be the result of a legitimate reconfiguration or someone trying manipulate the configuration'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate administrative action'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^16$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '815cd91b-7dbc-4247-841a-d7dd1392b0a8', 'name' VALUE 'Sysmon Configuration Error', 'description' VALUE 'Detects when an adversary is trying to hide its action from Sysmon logging based on error messages'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate administrative action'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '815cd91b-7dbc-4247-841a-d7dd1392b0a8', 'name' VALUE 'Sysmon Configuration Error', 'description' VALUE 'Detects when an adversary is trying to hide its action from Sysmon logging based on error messages'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate administrative action'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`description` as VARCHAR)), '^.*failed\ to\ open\ service\ configuration\ with\ error.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`description` as VARCHAR)), '^.*failed\ to\ connect\ to\ the\ driver\ to\ update\ configuration.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`description` as VARCHAR)), '^.*failed\ to\ open\ service\ configuration\ with\ error\ 19.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`description` as VARCHAR)), '^.*failed\ to\ open\ service\ configuration\ with\ error\ 93.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`description` as VARCHAR)), '^.*failed\ to\ open\ service\ configuration\ with\ error.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`description` as VARCHAR)), '^.*last\ error:\ the\ media\ is\ write\ protected\..*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '23b71bc5-953e-4971-be4c-c896cda73fc2', 'name' VALUE 'Sysmon Blocked Executable', 'description' VALUE 'Triggers on any Sysmon "FileBlockExecutable" event, which indicates a violation of the configured block policy'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '23b71bc5-953e-4971-be4c-c896cda73fc2', 'name' VALUE 'Sysmon Blocked Executable', 'description' VALUE 'Triggers on any Sysmon "FileBlockExecutable" event, which indicates a violation of the configured block policy'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^27$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'c3e5c1b1-45e9-4632-b242-27939c170239', 'name' VALUE 'Sysmon Blocked File Shredding', 'description' VALUE 'Triggers on any Sysmon "FileBlockShredding" event, which indicates a violation of the configured shredding policy.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'c3e5c1b1-45e9-4632-b242-27939c170239', 'name' VALUE 'Sysmon Blocked File Shredding', 'description' VALUE 'Triggers on any Sysmon "FileBlockShredding" event, which indicates a violation of the configured shredding policy.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^28$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '693a44e9-7f26-4cb6-b787-214867672d3a', 'name' VALUE 'Sysmon File Executable Creation Detected', 'description' VALUE 'Triggers on any Sysmon "FileExecutableDetected" event, which triggers every time a PE that is monitored by the config is created.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '693a44e9-7f26-4cb6-b787-214867672d3a', 'name' VALUE 'Sysmon File Executable Creation Detected', 'description' VALUE 'Triggers on any Sysmon "FileExecutableDetected" event, which triggers every time a PE that is monitored by the config is created.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^29$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a0a278fe-2c0e-4de2-ac3c-c68b08a9ba98', 'name' VALUE 'LSASS Access Detected via Attack Surface Reduction', 'description' VALUE 'Detects Access to LSASS Process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Google Chrome GoogleUpdate.exe', 'Some Taskmgr.exe related activity'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a0a278fe-2c0e-4de2-ac3c-c68b08a9ba98', 'name' VALUE 'LSASS Access Detected via Attack Surface Reduction', 'description' VALUE 'Detects Access to LSASS Process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Google Chrome GoogleUpdate.exe', 'Some Taskmgr.exe related activity'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1121$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`path` as VARCHAR)), '^.*\\lsass\.exe$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\system32\\driverstore\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\installer\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\system32\\atiesrxx\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\system32\\compattelrunner\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\system32\\msiexec\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\system32\\nvwmi64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\system32\\svchost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\system32\\taskmgr\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\system32\\wbem\\wmiprvse\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\syswow64\\msiexec\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^.*\\thor64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^.*\\thor\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^c:\\windows\\temp\\asgard2\-agent\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ea9bf0fa-edec-4fb8-8b78-b119f2528186', 'name' VALUE 'Windows Defender AMSI Trigger Detected', 'description' VALUE 'Detects triggering of AMSI by Windows Defender.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ea9bf0fa-edec-4fb8-8b78-b119f2528186', 'name' VALUE 'Windows Defender AMSI Trigger Detected', 'description' VALUE 'Detects triggering of AMSI by Windows Defender.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1116$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`source_name` as VARCHAR)), '^amsi$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fe34868f-6e0e-4882-81f6-c43aa8f15b62', 'name' VALUE 'Windows Defender Threat Detection Disabled', 'description' VALUE 'Detects disabling Windows Defender threat protection'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator actions (should be investigated)', 'Seen being triggered occasionally during Windows 8 Defender Updates'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fe34868f-6e0e-4882-81f6-c43aa8f15b62', 'name' VALUE 'Windows Defender Threat Detection Disabled', 'description' VALUE 'Detects disabling Windows Defender threat protection'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator actions (should be investigated)', 'Seen being triggered occasionally during Windows 8 Defender Updates'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5001$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5010$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5012$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5101$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1321dc4e-a1fe-481d-a016-52c45f0c8b4f', 'name' VALUE 'Windows Defender Exclusions Added', 'description' VALUE 'Detects the Setting of Windows Defender Exclusions'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator actions'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1321dc4e-a1fe-481d-a016-52c45f0c8b4f', 'name' VALUE 'Windows Defender Exclusions Added', 'description' VALUE 'Detects the Setting of Windows Defender Exclusions'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator actions'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5007$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\microsoft\\windows\ defender\\exclusions.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a3ab73f1-bd46-4319-8f06-4b20d0617886', 'name' VALUE 'Windows Defender Exploit Guard Tamper', 'description' VALUE 'Detects when someone is adding or removing applications or folder from exploit guard "ProtectedFolders" and "AllowedApplications"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a3ab73f1-bd46-4319-8f06-4b20d0617886', 'name' VALUE 'Windows Defender Exploit Guard Tamper', 'description' VALUE 'Detects when someone is adding or removing applications or folder from exploit guard "ProtectedFolders" and "AllowedApplications"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5007$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\windows\ defender\\windows\ defender\ exploit\ guard\\controlled\ folder\ access\\allowedapplications\\.*$') is not null) ) AND ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\desktop\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\perflogs\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\windows\\temp\\.*$') is not null) ) )  or ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5007$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`old_value` as VARCHAR)), '^.*\\windows\ defender\\windows\ defender\ exploit\ guard\\controlled\ folder\ access\\protectedfolders\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`),'winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('eventtype' VALUE `winlog`.`event_data`.`eventtype`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '2afe6582-e149-11ea-87d0-0242ac130003', 'name' VALUE 'Windows Defender Malware Detection History Deletion', 'description' VALUE 'Windows Defender logs when the history of detected infections is deleted. Log file will contain the message "Windows Defender Antivirus has removed history of malware and other potentially unwanted software".'),
       'observables_list' VALUE ARRAY['event.code', 'winlog.event_data.eventtype'],
       'falsepositives' VALUE ARRAY['Deletion of Defender malware detections history for legitimate reasons'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`),'winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('eventtype' VALUE `winlog`.`event_data`.`eventtype`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '2afe6582-e149-11ea-87d0-0242ac130003', 'name' VALUE 'Windows Defender Malware Detection History Deletion', 'description' VALUE 'Windows Defender logs when the history of detected infections is deleted. Log file will contain the message "Windows Defender Antivirus has removed history of malware and other potentially unwanted software".'),
       'observables_list' VALUE ARRAY['event.code', 'winlog.event_data.eventtype'],
       'falsepositives' VALUE ARRAY['Deletion of Defender malware detections history for legitimate reasons'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1013$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '97b9ce1e-c5ab-11ea-87d0-0242ac130003', 'name' VALUE 'PSExec and WMI Process Creations Block', 'description' VALUE 'Detects blocking of process creations originating from PSExec and WMI commands'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0008'],
       'techniqueidlist' VALUE ARRAY['T1047', 'T1569.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '97b9ce1e-c5ab-11ea-87d0-0242ac130003', 'name' VALUE 'PSExec and WMI Process Creations Block', 'description' VALUE 'Detects blocking of process creations originating from PSExec and WMI commands'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0008'],
       'techniqueidlist' VALUE ARRAY['T1047', 'T1569.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1121$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^.*\\wmiprvse\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`process_name` as VARCHAR)), '^.*\\psexesvc\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'dd80db93-6ec2-4f4c-a017-ad40da6ffe81', 'name' VALUE 'Windows Defender Real-Time Protection Failure/Restart', 'description' VALUE 'Detects issues with Windows Defender Real-Time Protection features'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some crashes can occur sometimes and the event doesnt provide enough information to tune out these cases. Manual exception is required'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'dd80db93-6ec2-4f4c-a017-ad40da6ffe81', 'name' VALUE 'Windows Defender Real-Time Protection Failure/Restart', 'description' VALUE 'Detects issues with Windows Defender Real-Time Protection features'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some crashes can occur sometimes and the event doesnt provide enough information to tune out these cases. Manual exception is required'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^3002$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^3007$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`feature_name` as VARCHAR)), '^%%886$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`reason` as VARCHAR)), '^%%892$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`reason` as VARCHAR)), '^%%858$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bc92ca75-cd42-4d61-9a37-9d5aa259c88b', 'name' VALUE 'Win Defender Restored Quarantine File', 'description' VALUE 'Detects the restoration of files from the defender quarantine'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate administrator activity restoring a file'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bc92ca75-cd42-4d61-9a37-9d5aa259c88b', 'name' VALUE 'Win Defender Restored Quarantine File', 'description' VALUE 'Detects the restoration of files from the defender quarantine'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate administrator activity restoring a file'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1009$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '801bd44f-ceed-4eb6-887c-11544633c0aa', 'name' VALUE 'Windows Defender Suspicious Configuration Changes', 'description' VALUE 'Detects suspicious changes to the Windows Defender configuration'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator activity (must be investigated)'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '801bd44f-ceed-4eb6-887c-11544633c0aa', 'name' VALUE 'Windows Defender Suspicious Configuration Changes', 'description' VALUE 'Detects suspicious changes to the Windows Defender configuration'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator activity (must be investigated)'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5007$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\windows\ defender\\disableantispyware\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\windows\ defender\\scan\\disableremovabledrivescanning\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\windows\ defender\\scan\\disablescanningmappednetworkdrivesforfullscan\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\windows\ defender\\spynet\\disableblockatfirstseen\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\real\-time\ protection\\spynetreporting\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`new_value` as VARCHAR)), '^.*\\real\-time\ protection\\submitsamplesconsent\ .*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '49e5bc24-8b86-49f1-b743-535f332c2856', 'name' VALUE 'Microsoft Defender Tamper Protection Trigger', 'description' VALUE 'Detects blocked attempts to change any of Defenders settings such as "Real Time Monitoring" and "Behavior Monitoring"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator might try to disable defender features during testing (must be investigated)'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '49e5bc24-8b86-49f1-b743-535f332c2856', 'name' VALUE 'Microsoft Defender Tamper Protection Trigger', 'description' VALUE 'Detects blocked attempts to change any of Defenders settings such as "Real Time Monitoring" and "Behavior Monitoring"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrator might try to disable defender features during testing (must be investigated)'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^5013$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`value` as VARCHAR)), '^.*\\windows\ defender\\disableantispyware$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`value` as VARCHAR)), '^.*\\windows\ defender\\disableantivirus$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`value` as VARCHAR)), '^.*\\windows\ defender\\scan\\disablearchivescanning$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`value` as VARCHAR)), '^.*\\windows\ defender\\scan\\disablescanningnetworkfiles$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`value` as VARCHAR)), '^.*\\real\-time\ protection\\disablerealtimemonitoring$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`value` as VARCHAR)), '^.*\\real\-time\ protection\\disablebehaviormonitoring$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`value` as VARCHAR)), '^.*\\real\-time\ protection\\disableioavprotection$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`value` as VARCHAR)), '^.*\\real\-time\ protection\\disablescriptscanning$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '57b649ef-ff42-4fb0-8bf6-62da243a1708', 'name' VALUE 'Windows Defender Threat Detected', 'description' VALUE 'Detects all actions taken by Windows Defender malware detection engines'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '57b649ef-ff42-4fb0-8bf6-62da243a1708', 'name' VALUE 'Windows Defender Threat Detected', 'description' VALUE 'Detects all actions taken by Windows Defender malware detection engines'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1006$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1116$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1015$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^1117$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0f06a3a5-6a09-413f-8743-e6cf35561297', 'name' VALUE 'WMI Event Subscription', 'description' VALUE 'Detects creation of WMI event subscription persistence method'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Exclude legitimate (vetted) use of WMI event subscription in your network'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0f06a3a5-6a09-413f-8743-e6cf35561297', 'name' VALUE 'WMI Event Subscription', 'description' VALUE 'Detects creation of WMI event subscription persistence method'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Exclude legitimate (vetted) use of WMI event subscription in your network'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^19$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^20$') is not null OR REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^21$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('user' VALUE `winlog`.`event_data`.`user`, 'operation' VALUE `winlog`.`event_data`.`operation`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fe21810c-2a8c-478f-8dd3-5a287fb2a0e0', 'name' VALUE 'Suspicious Scripting in a WMI Consumer', 'description' VALUE 'Detects suspicious commands that are related to scripting/powershell in WMI Event Consumers'),
       'observables_list' VALUE ARRAY['winlog.event_data.user', 'winlog.event_data.operation'],
       'falsepositives' VALUE ARRAY['Legitimate administrative scripts'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.005']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('user' VALUE `winlog`.`event_data`.`user`, 'operation' VALUE `winlog`.`event_data`.`operation`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fe21810c-2a8c-478f-8dd3-5a287fb2a0e0', 'name' VALUE 'Suspicious Scripting in a WMI Consumer', 'description' VALUE 'Detects suspicious commands that are related to scripting/powershell in WMI Event Consumers'),
       'observables_list' VALUE ARRAY['winlog.event_data.user', 'winlog.event_data.operation'],
       'falsepositives' VALUE ARRAY['Legitimate administrative scripts'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.005']

  )) FROM EdrTable WHERE ( ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*new\-object.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*net\.webclient.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\.downloadstring.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*new\-object.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*net\.webclient.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\.downloadfile.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\ iex\(.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\ \-nop\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\ \-noprofile\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\ \-decode\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\ \-enc\ .*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*wscript\.shell.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*system\.security\.cryptography\.frombase64transform.*$') is not null)  ) );
END;

