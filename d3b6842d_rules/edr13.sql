SET 'execution.checkpointing.interval' = '1min';
SET pipeline.name=EdrJob13;
SET yarn.application.queue=root;
DROP TABLE IF EXISTS EdrTable;
CREATE Temporary TABLE EdrTable (
		`uuid`  varchar,
		`service` row(`name` varchar),
        `source_data` string,
		`organization` row(`id` varchar),
        `agent` row(`type` varchar),
        `error` row(`code` varchar,
                    `message` varchar),
        `log` row(`level` varchar,
                  `type` varchar),
        `sysmon` row(`dns` row(`status_code` varchar),
                     `file` row(`archived` varchar,
                                `is_executable` varchar)),
        `related` row(`hash` array<varchar>,
                      `hosts` array<varchar>,
                      `ip` array<varchar>,
                      `user` array<varchar>),
		`observer` row(`product`  varchar,
                `ip` varchar,
                `name` varchar,
				`vendor`  varchar,
				`type` varchar),
		`event` row(`created` varchar,
                    `channel` varchar,
                    `category` array<varchar>,
                    `code` int,
                    `host` varchar,
                    `ingested` varchar,
                    `message` varchar,
                    `dataset`  varchar,
                    `original` string,
                    `module` varchar,
                    `provider` varchar,
                    `kind` varchar,
                    `outcome` varchar,
                    `type` array<varchar>,
                    `action` varchar,
                    `id` varchar,
                    `severity` varchar,
                    `reason` varchar),
		`rule` row(`name` varchar),
		`sensor` row(`id` varchar),
		`host` row(`name` varchar,
                   `mac` varchar,
                   `os` row(`name` varchar,
                            `platform` varchar,
                            `version` varchar),
                   `architecture` varchar),
		`network` row(`community_id` varchar,
		              `transport` varchar,
                      `type` varchar,
                      `protocol` varchar,
				      `direction` varchar),
		`process` row(`name` varchar,
		            `args` varchar,
                    `args_count` varchar,
                    `working_directory` varchar,
                    `title` varchar,
                    `executable` varchar,
                    `command_line` varchar,
			        `pid` varchar,
				`thread` row(`id` varchar),
                                `entity_id` varchar,
                                `hash` row(`sha1` varchar,
				                           `imphash` varchar,
                                        `sha256` varchar,
	                                      `md5` varchar),
				`parent` row(`executable` varchar,
				                `args` varchar,
						        `pid` varchar,
					         `name` varchar,
						     `command_line` varchar,
						     `entity_id` varchar),
				 `pe` row( `company` varchar,
		                              `sha256` varchar,
									 `description` varchar,
									 `file_version` varchar,
									 `imphash` varchar,
									 `original_file_name` varchar,
									 `product` varchar)
									),
		`source` row(`ip` varchar,
					`port` int,
                    `address` varchar,
					`locality` varchar,
					`domain` varchar,
					`user` row(`name` varchar, `domain` varchar),
					`as` row(`organization` row(`name` varchar),
						`number` varchar,
						`locality` varchar),
					`geo` row(`city_name` varchar,
						`country_code` varchar,
						`country_name` varchar,
						`region_name` varchar ,
						`continent_code` varchar,
						`location` row(`lat` double,`lon` double),
						`address` varchar,
						`domain` varchar,
						`ip` varchar,
						`port` int)),
		`destination` row(`ip` varchar,
					`port` int,
					`locality` varchar,
					`domain` varchar,
					`as` row(`organization` row(`name` varchar),
						`number` varchar,
						`locality` varchar),
					`geo` row(`city_name` varchar,
						`country_code` varchar,
						`country_name` varchar,
						`region_name` varchar ,
						`continent_code` varchar,
						`location` row(`lat` double,`lon` double),
						`address` varchar,
						`domain` varchar,
						`ip` varchar,
						`port` int)),
		`user` row(`name` varchar,
					`domain` varchar,
					`id`    varchar,
					`type`  varchar),
		`threatintel` row(`entity` varchar,
					`days` int,
                    `event_data` varchar,
                    `malware` row(`malware` varchar,
                                  `timestamp` timestamp),
					`severity` varchar,
                    `tags` varchar,
                    `white_list` varchar,
					`lookup` varchar),
		`registry` row(`path` varchar,
                    `hive` varchar,
                    `key` varchar,
                    `data` row(`strings` varchar,
                               `type` varchar),
					`value`  varchar),
		`hash` row(`imphash` varchar,
		            `sha256` varchar,
					`sha1` varchar,
					`md5`  varchar),
		`dns` row(`answers` array<varchar>,
                  `resolved_ip` array<varchar>,
                  `question` row(`domain` varchar,
					             `name`  varchar)),
		`file` row(`name` varchar,
				`path`  varchar,
                `size` int,
                `directory` varchar,
                `extension` varchar,
				`code_signature` row(`signed` varchar,
				                        `subject_name` varchar,
                                        `valid` varchar,
				                        `status` varchar),
				`pe` row(`imphash` varchar,
				            `description` varchar,
					    `product` varchar,
					    `company` varchar,
					    `file_version` varchar,
						`original_file_name` varchar),
				`hash` row( `md5` varchar,
				               `imphash` varchar,
						`sha1` varchar,
						`sha256` varchar)),
                `winlog`  row (`activity_id` varchar,
                                `channel` varchar,
                                `computer_name` varchar,
                                `event_id` int,
                                `name` varchar,
                                `logon` row(`failure` row(`status` varchar,
                                                        `sub_status` varchar),
                                        `id` varchar,
                                        `type` varchar),
                                `opcode` varchar,
                                `process` row(`pid` varchar,
                                        `thread` row(`id` varchar)),
                                `provider_guid` varchar,
                                `provider_name` varchar,
                                `record_id` varchar,
                                `task` varchar,
                                `user` row(`domain` varchar,
                                        `identifier` varchar,
                                        `name` varchar,
                                        `type` varchar),
                                `version` varchar,
                                `event_data` row(`channel` varchar,
                                                `accesses` varchar,
                                                `accessgranted` varchar,
                                                `accesslist` varchar,
                                                `accessmask` varchar,
                                                `accessmaskdescription` varchar,
                                                `accessreason` varchar,
                                                `accessremoved` varchar,
                                                `accesslistdescription` varchar,
                                                `accountexpires` varchar,
                                                `action` varchar,
                                                `action_id` varchar,
                                                `action_name` varchar,
                                                `additional_actions_id` varchar,
                                                `additional_actions_` varchar,
                                                `additionalinfo` varchar,
                                                `additionalinfo2` varchar,
                                                `address` varchar,
                                                `allowedtodelegateto` varchar,
                                                `appcorrelationid` varchar,
                                                `appid` varchar,
                                                `appname` varchar,
                                                `application` varchar,
                                                `applicationpath` varchar,
                                                `assemblypath` varchar,
                                                `attributeldapdisplayname` varchar,
                                                `attributesyntaxoid` varchar,
                                                `attributevalue` varchar,
                                                `auditpolicychanges` varchar,
                                                `auditsourcename` varchar,
                                                `auditpolicychangesdescription` varchar,
                                                `authenticationalgorithm` varchar,
                                                `authenticationpackagename` varchar,
                                                `binary` varchar,
                                                `bssid` varchar,
                                                `bsstype` varchar,
                                                `callerprocessid` varchar,
                                                `callerprocessname` varchar,
                                                `callingprocessname` varchar,
                                                `callstack` varchar,
                                                `calltrace` varchar,
                                                `caption` varchar,
                                                `category_id` varchar,
                                                `category_name` varchar,
                                                `categoryid` varchar,
                                                `certissuername` varchar,
                                                `certserialnumber` varchar,
                                                `certthumbprint` varchar,
                                                `cipheralgorithm` varchar,
                                                `classid` varchar,
                                                `classname` varchar,
                                                `clientinfo` varchar,
                                                `clientprocessid` varchar,
                                                `clientprocessstartkey` varchar,
                                                `commandline` varchar,
                                                `company` varchar,
                                                `computeraccountchange` varchar,
                                                `configuration` varchar,
                                                `configurationfilehash` varchar,
                                                `connectionid` varchar,
                                                `connectionmode` varchar,
                                                `consumer` varchar,
                                                `contents` varchar,
                                                `contextinfo` varchar,
                                                `crashonauditfailvalue` varchar,
                                                `creationutctime` varchar,
                                                `ddtype` varchar,
                                                `description` varchar,
                                                `details` varchar,
                                                `detection_id` varchar,
                                                `detection_time` varchar,
                                                `detection_user` varchar,
                                                `devicedescription` varchar,
                                                `devicename` varchar,
                                                `direction` varchar,
                                                `directiondescription` varchar,
                                                `displayname` varchar,
                                                `dnshostname` varchar,
                                                `domainbehaviorversion` varchar,
                                                `domainname` varchar,
                                                `domainpolicychanged` varchar,
                                                `domainsid` varchar,
                                                `drivename` varchar,
                                                `dsname` varchar,
                                                `dummy` varchar,
                                                `elevatedtoken` varchar,
                                                `engine_version` varchar,
                                                `engineversion` varchar,
                                                `error_code` varchar,
                                                `error_description` varchar,
                                                `errorcode` varchar,
                                                `event` row(`destinationisipv6` varchar),
                                                `eventnamespace` varchar,
                                                `eventsourceid` varchar,
                                                `eventtype` varchar,
                                                `exceptioncode` varchar,
                                                `execution_id` varchar,
                                                `execution_name` varchar,
                                                `failurecode` varchar,
                                                `failurereason` varchar,
                                                `failurereasondescription` varchar,
                                                `feature` varchar,
                                                `feature_name` varchar,
                                                `filehash` varchar,
                                                `filename` varchar,
                                                `filenamebuffer` varchar,
                                                `fileversion` varchar,
                                                `filter` varchar,
                                                `filterorigin` varchar,
                                                `filterrtid` varchar,
                                                `forcelogoff` varchar,
                                                `fqdn` varchar,
                                                `fwlink` varchar,
                                                `grantedaccess` varchar,
                                                `grouptypechange` varchar,
                                                `handleid` varchar,
                                                `hash` varchar,
                                                `hashes` varchar,
                                                `headerflags` varchar,
                                                `hivename` varchar,
                                                `homedirectory` varchar,
                                                `homepath` varchar,
                                                `hostversion` varchar,
                                                `imagename` varchar,
                                                `imagepath` varchar,
                                                `impersonationlevel` varchar,
                                                `initiated` varchar,
                                                `integritylevel` varchar,
                                                `interfacedescription` varchar,
                                                `interfaceguid` varchar,
                                                `keylength` varchar,
                                                `keywords` varchar,
                                                `layername` varchar,
                                                `layerrtid` varchar,
                                                `layernamedescription` varchar,
                                                `ldapdisplayname` varchar,
                                                `level` varchar,
                                                `lmpackagename` varchar,
                                                `localname` varchar,
                                                `lockoutduration` varchar,
                                                `lockoutobservationwindow` varchar,
                                                `lockoutthreshold` varchar,
                                                `logonguid` varchar,
                                                `logonhours` varchar,
                                                `logonid` varchar,
                                                `logon` row(`id` varchar),
                                                `logonprocessname` varchar,
                                                `logontype` varchar,
                                                `machineaccountquota` varchar,
                                                `mandatorylabel` varchar,
                                                `masterkeyid` varchar,
                                                `maxpasswordage` varchar,
                                                `membername` varchar,
                                                `membersid` varchar,
                                                `message` varchar,
                                                `minpasswordage` varchar,
                                                `minpasswordlength` varchar,
                                                `mixeddomainmode` varchar,
                                                `modifyingapplication` varchar,
                                                `name` varchar,
                                                `new_value` varchar,
                                                `newname` varchar,
                                                `newsd` varchar,
                                                `newtargetusername` varchar,
                                                `newtemplatecontent` varchar,
                                                `newthreadid` varchar,
                                                `newtime` varchar,
                                                `newuacvalue` varchar,
                                                `newvalue` varchar,
                                                `newvaluetype` varchar,
                                                `objectclass` varchar,
                                                `objectdn` varchar,
                                                `objectguid` varchar,
                                                `objectname` varchar,
                                                `objectserver` varchar,
                                                `objecttype` varchar,
                                                `objectvaluename` varchar,
                                                `oeminformation` varchar,
                                                `old_value` varchar,
                                                `oldsd` varchar,
                                                `oldtargetusername` varchar,
                                                `olduacvalue` varchar,
                                                `oldvalue` varchar,
                                                `oldvaluetype` varchar,
                                                `onexenabled` varchar,
                                                `opcorrelationid` varchar,
                                                `operation` varchar,
                                                `operationtype` varchar,
                                                `origin` varchar,
                                                `origin_id` varchar,
                                                `origin_name` varchar,
                                                `originalfilename` varchar,
                                                `outcome` varchar,
                                                `packagefullname` varchar,
                                                `packagename` varchar,
                                                `packagepath` varchar,
                                                `param1` varchar,
                                                `param2` varchar,
                                                `param3` varchar,
                                                `parentuser` varchar,
                                                `parentcommandline` varchar,
                                                `parentimage` varchar,
                                                `parentprocessid` varchar,
                                                `passwordhistorylength` varchar,
                                                `passwordlastset` varchar,
                                                `passwordproperties` varchar,
                                                `path` varchar,
                                                `payload` varchar,
                                                `phytype` varchar,
                                                `pipename` varchar,
                                                `policyname` varchar,
                                                `possiblecause` varchar,
                                                `post_clean_status` varchar,
                                                `pre_execution_status` varchar,
                                                `preauthtype` varchar,
                                                `previouscreationutctime` varchar,
                                                `previoustime` varchar,
                                                `primarygroupid` varchar,
                                                `privilegelist` varchar,
                                                `process_name` varchar,
                                                `processcommandline` varchar,
                                                `processname` varchar,
                                                `processnamebuffer` varchar,
                                                `processpath` varchar,
                                                `processid` varchar,
                                                `product` varchar,
                                                `product_name` varchar,
                                                `product_version` varchar,
                                                `profilename` varchar,
                                                `profilepath` varchar,
                                                `properties` varchar,
                                                `protocol` varchar,
                                                `provider` varchar,
                                                `providername` varchar,
                                                `provider_name` varchar,
                                                `puacount` varchar,
                                                `puapolicyid` varchar,
                                                `query` varchar,
                                                `queryname` varchar,
                                                `qname` varchar,
                                                `queryresults` varchar,
                                                `reason` varchar,
                                                `recoverykeyid` varchar,
                                                `recoveryserver` varchar,
                                                `relativetargetname` varchar,
                                                `remediation_user` varchar,
                                                `remotemachineid` varchar,
                                                `remotename` varchar,
                                                `remoteuserid` varchar,
                                                `requestedpolicy` varchar,
                                                `resourceattributes` varchar,
                                                `restrictedadminmode` varchar,
                                                `restrictedsidcount` varchar,
                                                `rpccallclientlocality` varchar,
                                                `ruleid` varchar,
                                                `rulename` varchar,
                                                `samaccountname` varchar,
                                                `sampledata` varchar,
                                                `samplelength` varchar,
                                                `schemaversion` varchar,
                                                `scriptpath` varchar,
                                                `scriptblockid` varchar,
                                                `scriptblocktext` varchar,
                                                `searchfilter` varchar,
                                                `security_intelligence_version` varchar,
                                                `securityid` varchar,
                                                `servername` varchar,
                                                `service` varchar,
                                                `serviceaccount` varchar,
                                                `servicefilename` varchar,
                                                `servicename` varchar,
                                                `serviceprincipalnames` varchar,
                                                `servicesid` varchar,
                                                `servicestarttype` varchar,
                                                `servicetype` varchar,
                                                `session` varchar,
                                                `sessionid` varchar,
                                                `sessionname` varchar,
                                                `severity` varchar,
                                                `severity_id` varchar,
                                                `severity_name` varchar,
                                                `sharelocalpath` varchar,
                                                `sharename` varchar,
                                                `sidhistory` varchar,
                                                `sidlist` varchar,
                                                `signed` varchar,
                                                `signature` varchar,
                                                `signaturestatus` varchar,
                                                `source` varchar,
                                                `sourceparentimage` varchar,
                                                `sourceaddress` varchar,
                                                `source_id` varchar,
                                                `source_name` varchar,
                                                `sourcename` varchar,
                                                `sourcecommandline` varchar,
                                                `sourcefile` varchar,
                                                `sourcefilename` varchar,
                                                `sourcehostname` varchar,
                                                `sourceimage` varchar,
                                                `sourceip` varchar,
                                                `sourceline` varchar,
                                                `sourceport` varchar,
                                                `sourceportname` varchar,
                                                `sourcetag` varchar,
                                                `sourceuser` varchar,
                                                `ssid` varchar,
                                                `startaddress` varchar,
                                                `startfunction` varchar,
                                                `startmodule` varchar,
                                                `starttype` varchar,
                                                `state` varchar,
                                                `status` varchar,
                                                `status_code` varchar,
                                                `statusdescription` varchar,
                                                `status_description` varchar,
                                                `subcategoryguid` varchar,
                                                `subcategoryid` varchar,
                                                `subjectdomainname` varchar,
                                                `subjectlogonid` varchar,
                                                `subjectname` varchar,
                                                `subjectusername` varchar,
                                                `subjectusersid` varchar,
                                                `substatus` varchar,
                                                `targetimage` varchar,
                                                `targetlinkedlogonid` varchar,
                                                `targetlogonid` varchar,
                                                `targetname` varchar,
                                                `targetfilename` varchar,
                                                `targetdomainname` varchar,
                                                `targetparentimage` varchar,
                                                `targetparentprocessid` varchar,
                                                `targetoutbounddomainname` varchar,
                                                `targetoutboundusername` varchar,
                                                `targetprocessaddress` varchar,
                                                `targetprocessguid` varchar,
                                                `targetprocessid` varchar,
                                                `targetservername` varchar,
                                                `targetsid` varchar,
                                                `targetuser` varchar,
                                                `targetusername` varchar,
                                                `targetusersid` varchar,
                                                `taskcontent` varchar,
                                                `taskcontentnew` varchar,
                                                `taskname` varchar,
                                                `templatecontent` varchar,
                                                `terminalsessionid` varchar,
                                                `threat_id` varchar,
                                                `threat_name` varchar,
                                                `ticketencryptiontype` varchar,
                                                `ticketencryptiontypedescription` varchar,
                                                `ticketoptions` varchar,
                                                `ticketoptionsdescription` varchar,
                                                `tokenelevationtype` varchar,
                                                `transactionid` varchar,
                                                `transmittedservices` varchar,
                                                `type` varchar,
                                                `type_id` varchar,
                                                `type_name` varchar,
                                                `user` varchar,
                                                `useraccountcontrol` varchar,
                                                `username` varchar,
                                                `userparameters` varchar,
                                                `userprincipalname` varchar,
                                                `userworkstations` varchar,
                                                `value` varchar,
                                                `verb` varchar,
                                                `version` varchar,
                                                `virtualaccount` varchar,
                                                `wmi_name` varchar,
                                                `wmi_namespace` varchar,
                                                `wmi_filter_path` varchar,
                                                `wmi_operation` varchar,
                                                `workstation` varchar,
                                                `workstationname` varchar,
                                                `process`  varchar)),
                                 `ts` TIMESTAMP(3) METADATA FROM 'timestamp')
WITH (
  'connector' = 'kafka',
  'topic' = 'edr',
  'properties.bootstrap.servers' = '10.0.10.105:9092,10.0.22.60:9092,10.0.43.247:9092',
  'properties.group.id' = 'flink-edr13',
  'scan.startup.mode' = 'latest-offset',
  'format' = 'json',
 'json.fail-on-missing-field' = 'false',
 'json.ignore-parse-errors' = 'true'
);

 CREATE TABLE default_catalog.default_database.FlinkOut (
  `message` STRING
) WITH (
  'connector' = 'kafka',
  'topic' = 'ams_alert_in',
  'properties.bootstrap.servers' = '10.0.10.105:9092,10.0.22.60:9092,10.0.43.247:9092',
  'properties.group.id' = 'flink',
  'scan.startup.mode' = 'earliest-offset',
  'format' = 'raw'
);


ADD jar 'flink/flink-1.18.0/bin/jars/flink-sql-connector-kafka-3.0.2-1.18.jar';

EXECUTE STATEMENT SET
BEGIN

 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a10a2c40-2c4d-49f8-b557-1a946bc55d9d', 'name' VALUE 'Uncommon File Created In Office Startup Folder', 'description' VALUE 'Detects the creation of a file with an uncommon extension in an Office application startup folder'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legitimate extensions used by either excel or word'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['T1587.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a10a2c40-2c4d-49f8-b557-1a946bc55d9d', 'name' VALUE 'Uncommon File Created In Office Startup Folder', 'description' VALUE 'Detects the creation of a file with an uncommon extension in an Office application startup folder'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legitimate extensions used by either excel or word'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['T1587.001']

  )) FROM EdrTable WHERE ((((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and ( ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\\word\\startup.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\office.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\program\ files.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\startup.*$') is not null)  ) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.docb$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.docm$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.docx$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dotm$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.pdf$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.wll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.wwl$') is not null) ))  or (((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and ( ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\\excel\\xlstart.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\office.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\program\ files.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\xlstart.*$') is not null)  ) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xls$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xlsm$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xlsx$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xlt$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xltm$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xlw$') is not null) ))  )  and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\microsoft\ office\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\ office\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\officeclicktorun\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\common\ files\\microsoft\ shared\\clicktorun\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6e90ae7a-7cd3-473f-a035-4ebb72d961da', 'name' VALUE 'PCRE.NET Package Temp Files', 'description' VALUE 'Detects processes creating temp files related to PCRE.NET package'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6e90ae7a-7cd3-473f-a035-4ebb72d961da', 'name' VALUE 'PCRE.NET Package Temp Files', 'description' VALUE 'Detects processes creating temp files related to PCRE.NET package'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\ba9ea7344a4a5f591d6e5dc32a13494b\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bbb7e38c-0b41-4a11-b306-d2a457b7ac2b', 'name' VALUE 'Suspicious File Created In PerfLogs', 'description' VALUE 'Detects suspicious file based on their extension being created in "C:\PerfLogs\". Note that this directory mostly contains ".etl" files'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bbb7e38c-0b41-4a11-b306-d2a457b7ac2b', 'name' VALUE 'Suspicious File Created In PerfLogs', 'description' VALUE 'Detects suspicious file based on their extension being created in "C:\PerfLogs\". Note that this directory mostly contains ".etl" files'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.7z$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bat$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bin$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.chm$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.hta$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.lnk$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.psm1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.py$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.scr$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.sys$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbs$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.zip$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\perflogs\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7047d730-036f-4f40-b9d8-1c63e36d5e62', 'name' VALUE 'Potential Binary Or Script Dropper Via PowerShell', 'description' VALUE 'Detects PowerShell creating a binary executable or a script file.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives will differ depending on the environment and scripts used. Apply additional filters accordingly.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7047d730-036f-4f40-b9d8-1c63e36d5e62', 'name' VALUE 'Potential Binary Or Script Dropper Via PowerShell', 'description' VALUE 'Detects PowerShell creating a binary executable or a script file.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives will differ depending on the environment and scripts used. Apply additional filters accordingly.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\pwsh\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bat$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.chm$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.cmd$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.com$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.hta$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.jar$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.js$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ocx$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.scr$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.sys$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbs$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.wsf$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\temp\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '576426ad-0131-4001-ae01-be175da0c108', 'name' VALUE 'PowerShell Script Dropped Via PowerShell.EXE', 'description' VALUE 'Detects PowerShell creating a PowerShell file (.ps1). While often times this behavior is benign, sometimes it can be a sign of a dropper script trying to achieve persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives will differ depending on the environment and scripts used. Apply additional filters accordingly.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '576426ad-0131-4001-ae01-be175da0c108', 'name' VALUE 'PowerShell Script Dropped Via PowerShell.EXE', 'description' VALUE 'Detects PowerShell creating a PowerShell file (.ps1). While often times this behavior is benign, sometimes it can be a sign of a dropper script trying to achieve persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives will differ depending on the environment and scripts used. Apply additional filters accordingly.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\pwsh\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ps1$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*__psscriptpolicytest_.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\temp\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f331aa1f-8c53-4fc3-b083-cc159bc971cb', 'name' VALUE 'Malicious PowerShell Scripts - FileCreation', 'description' VALUE 'Detects the creation of known offensive powershell scripts used for exploitation'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f331aa1f-8c53-4fc3-b083-cc159bc971cb', 'name' VALUE 'Malicious PowerShell Scripts - FileCreation', 'description' VALUE 'Detects the creation of known offensive powershell scripts used for exploitation'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\add\-constraineddelegationbackdoor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\add\-exfiltration\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\add\-persistence\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\add\-regbackdoor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\add\-remoteregbackdoor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\add\-scrnsavebackdoor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\adrecon\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\azureadrecon\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\check\-vm\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\convertto\-rot13\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\copy\-vss\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\create\-multiplesessions\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dns_txt_pwnage\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\do\-exfiltration\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\domainpasswordspray\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\download_execute\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\download\-execute\-ps\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\enable\-duplicatetoken\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\enabled\-duplicatetoken\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\execute\-command\-mssql\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\execute\-dnstxt\-code\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\execute\-ontime\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\exetotext\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\exploit\-jboss\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\find\-avsignature\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\find\-fruit\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\find\-gpolocation\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\find\-trusteddocuments\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\firebuster\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\firelistener\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-applicationhost\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-chromedump\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-clipboardcontents\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-computerdetail\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-foxdump\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-gppautologon\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-gpppassword\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-indexeditem\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-keystrokes\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-lsasecret\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-microphoneaudio\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-passhashes\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-passhints\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-regalwaysinstallelevated\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-regautologon\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-rickastley\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-screenshot\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-securitypackages\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-servicefilepermission\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-servicepermission\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-serviceunquoted\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-sitelistpassword\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-system\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-timedscreenshot\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-unattendedinstallfile\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-unconstrained\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-usbkeystrokes\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-vaultcredential\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-vulnautorun\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-vulnschtask\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-webconfig\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-webcredentials\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\get\-wlan\-keys\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\gupt\-backdoor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\http\-backdoor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\http\-login\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\install\-servicebinary\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\install\-ssp\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-aclscanner\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-adsbackdoor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-amsibypass\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-arpscan\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-backdoorlnk\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-badpotato\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-bettersafetykatz\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-bruteforce\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-bypassuac\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-carbuncle\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-certify\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-conptyshell\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-credentialinjection\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-credentialsphish\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-daft\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-dcsync\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-decode\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-dinvokekatz\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-dllinjection\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-dnsupdate\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-downgradeaccount\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-egresscheck\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-encode\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-eventviewer\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-eyewitness\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-fakelogonscreen\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-farmer\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-get\-rbcd\-threaded\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-gopher\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-grouper2\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-grouper3\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-handlekatz\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-interceptor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-internalmonologue\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-inveigh\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-inveighrelay\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-jsratregsvr\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-jsratrundll\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-krbrelay\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-krbrelayup\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-ldapsigncheck\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-lockless\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-malsccm\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-mimikatz\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-mimikatzwdigestdowngrade\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-mimikittenz\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-mitm6\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-nanodump\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-netripper\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-networkrelay\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-ninjacopy\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-oxidresolver\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-p0wnedshell\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-p0wnedshellx86\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-paranoia\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-portscan\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-poshrathttp\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-poshrathttps\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-postexfil\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powerdump\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powershellicmp\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powershelltcp\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powershelltcponeline\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powershelltcponelinebind\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powershelludp\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powershelludponeline\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powershellwmi\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-powerthief\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-ppldump\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-prasadhak\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-psexec\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-psgcat\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-psgcatagent\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-psinject\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-psuacme\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-reflectivepeinjection\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-reversednslookup\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-rubeus\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-runas\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-safetykatz\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-sauroneye\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-scshell\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-seatbelt\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-serviceabuse\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-sessiongopher\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-shellcode\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-smbscanner\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-snaffler\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-spoolsample\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-sshcommand\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-ssidexfil\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-standin\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-stickynotesextract\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-tater\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-thunderfox\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-thunderstruck\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-tokenmanipulation\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-tokenvator\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-totalexec\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-urbanbishop\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-userhunter\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-voicetroll\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-whisker\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-winenum\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-winpeas\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-wiretap\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-wmicommand\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-wscriptbypassuac\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\invoke\-zerologon\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\keylogger\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\mailraider\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\new\-honeyhash\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\officememscraper\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\offline_winpwn\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-chm\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-dnstxt\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-excel\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-hta\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-java\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-js\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-minidump\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-rundllcommand\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-scf\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-sct\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-shortcut\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-webquery\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\out\-word\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\parse_keys\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\port\-scan\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powerbreach\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powercat\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powermad\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powerrunassystem\.psm1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powersharppack\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powerup\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powerupsql\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powerview\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\psasyncshell\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\remotehashretrieval\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\remove\-persistence\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\remove\-poshrat\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\remove\-update\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\run\-exeonremote\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\schtasks\-backdoor\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\set\-dcshadowpermissions\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\set\-macattribute\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\set\-remotepsremoting\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\set\-remotewmi\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\set\-wallpaper\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\show\-targetscreen\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\speak\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\start\-captureserver\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\start\-webcamrecorder\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\stringtobase64\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\texttoexe\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\volumeshadowcopytools\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\winpwn\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wsuspendu\.ps1$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*invoke\-sharp.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ps1$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e36941d0-c0f0-443f-bc6f-cb2952eb69ea', 'name' VALUE 'PowerShell Module File Created', 'description' VALUE 'Detects the creation of a new PowerShell module ".psm1", ".psd1", ".dll", ".ps1", etc.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Likely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e36941d0-c0f0-443f-bc6f-cb2952eb69ea', 'name' VALUE 'PowerShell Module File Created', 'description' VALUE 'Detects the creation of a new PowerShell module ".psm1", ".psd1", ".dll", ".ps1", etc.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Likely'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\pwsh\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windowspowershell\\modules\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powershell\\7\\modules\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e8a52bbd-bced-459f-bd93-64db45ce7657', 'name' VALUE 'Potential Suspicious PowerShell Module File Created', 'description' VALUE 'Detects the creation of a new PowerShell module in the first folder of the module directory structure "\WindowsPowerShell\Modules\malware\malware.psm1". This is somewhat an uncommon practice as legitimate modules often includes a version folder.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positive rate will vary depending on the environments. Additional filters might be required to make this logic usable in production.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e8a52bbd-bced-459f-bd93-64db45ce7657', 'name' VALUE 'Potential Suspicious PowerShell Module File Created', 'description' VALUE 'Detects the creation of a new PowerShell module in the first folder of the module directory structure "\WindowsPowerShell\Modules\malware\malware.psm1". This is somewhat an uncommon practice as legitimate modules often includes a version folder.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positive rate will vary depending on the environments. Additional filters might be required to make this logic usable in production.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windowspowershell\\modules\\.*\\\.ps$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windowspowershell\\modules\\.*\\\.dll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e3845023-ca9a-4024-b2b2-5422156d5527', 'name' VALUE 'PowerShell Module File Created By Non-PowerShell Process', 'description' VALUE 'Detects the creation of a new PowerShell module ".psm1", ".psd1", ".dll", ".ps1", etc. by a non-PowerShell process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e3845023-ca9a-4024-b2b2-5422156d5527', 'name' VALUE 'PowerShell Module File Created By Non-PowerShell Process', 'description' VALUE 'Detects the creation of a new PowerShell module ".psm1", ".psd1", ".dll", ".ps1", etc. by a non-PowerShell process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windowspowershell\\modules\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powershell\\7\\modules\\.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\powershell\\7\-preview\\pwsh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\powershell\\7\\pwsh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\poqexec\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\windowspowershell\\v1\.0\\powershell_ise\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\windowspowershell\\v1\.0\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\poqexec\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\windowspowershell\\v1\.0\\powershell_ise\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\windowspowershell\\v1\.0\\powershell\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '92fa78e7-4d39-45f1-91a3-8b23f3f1088d', 'name' VALUE 'Potential Startup Shortcut Persistence Via PowerShell.EXE', 'description' VALUE 'Detects PowerShell writing startup shortcuts.
This procedure was highlighted in Red Canary Intel Insights Oct. 2021, "We frequently observe adversaries using PowerShell to write malicious .lnk files into the startup directory to establish persistence.
Accordingly, this detection opportunity is likely to identify persistence mechanisms in multiple threats.
In the context of Yellow Cockatoo, this persistence mechanism eventually launches the command-line script that leads to the installation of a malicious DLL"
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Depending on your environment accepted applications may leverage this at times. It is recommended to search for anomalies inidicative of malware.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '92fa78e7-4d39-45f1-91a3-8b23f3f1088d', 'name' VALUE 'Potential Startup Shortcut Persistence Via PowerShell.EXE', 'description' VALUE 'Detects PowerShell writing startup shortcuts.
This procedure was highlighted in Red Canary Intel Insights Oct. 2021, "We frequently observe adversaries using PowerShell to write malicious .lnk files into the startup directory to establish persistence.
Accordingly, this detection opportunity is likely to identify persistence mechanisms in multiple threats.
In the context of Yellow Cockatoo, this persistence mechanism eventually launches the command-line script that leads to the installation of a malicious DLL"
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Depending on your environment accepted applications may leverage this at times. It is recommended to search for anomalies inidicative of malware.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\pwsh\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\start\ menu\\programs\\startup\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.lnk$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1027d292-dd87-4a1a-8701-2abe04d7783c', 'name' VALUE 'PSScriptPolicyTest Creation By Uncommon Process', 'description' VALUE 'Detects the creation of the "PSScriptPolicyTest" PowerShell script by an uncommon process. This file is usually generated by Microsoft Powershell to test against Applocker.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1027d292-dd87-4a1a-8701-2abe04d7783c', 'name' VALUE 'PSScriptPolicyTest Creation By Uncommon Process', 'description' VALUE 'Detects the creation of the "PSScriptPolicyTest" PowerShell script by an uncommon process. This file is usually generated by Microsoft Powershell to test against Applocker.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*__psscriptpolicytest_.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\powershell\\7\-preview\\pwsh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\powershell\\7\\pwsh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\dsac\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\servermanager\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\windowspowershell\\v1\.0\\powershell_ise\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\windowspowershell\\v1\.0\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\wsmprovhost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\windowspowershell\\v1\.0\\powershell_ise\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\windowspowershell\\v1\.0\\powershell\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '34986307-b7f4-49be-92f3-e7a4d01ac5db', 'name' VALUE 'Rclone Config File Creation', 'description' VALUE 'Detects Rclone config files being created'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate Rclone usage'] ,
       'tacticidlist' VALUE ARRAY['TA0010'],
       'techniqueidlist' VALUE ARRAY['T1567.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '34986307-b7f4-49be-92f3-e7a4d01ac5db', 'name' VALUE 'Rclone Config File Creation', 'description' VALUE 'Detects Rclone config files being created'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate Rclone usage'] ,
       'tacticidlist' VALUE ARRAY['TA0010'],
       'techniqueidlist' VALUE ARRAY['T1567.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\users\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\\.config\\rclone\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fccfb43e-09a7-4bd2-8b37-a5a7df33386d', 'name' VALUE 'RDP File Creation From Suspicious Application', 'description' VALUE 'Detects Rclone config file being created'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fccfb43e-09a7-4bd2-8b37-a5a7df33386d', 'name' VALUE 'RDP File Creation From Suspicious Application', 'description' VALUE 'Detects Rclone config file being created'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\brave\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\ccleaner\ browser\\application\\ccleanerbrowser\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\chromium\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\firefox\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\google\\chrome\\application\\chrome\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\iexplore\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\microsoftedge\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msedge\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\opera\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\vivaldi\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\whale\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\runtimebroker\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\thunderbird\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\discord\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\keybase\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msteams\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\slack\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\teams\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.rdp.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '130c9e58-28ac-4f83-8574-0a4cc913b97e', 'name' VALUE 'Potential Winnti Dropper Activity', 'description' VALUE 'Detects files dropped by Winnti as described in RedMimicry Winnti playbook'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1027']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '130c9e58-28ac-4f83-8574-0a4cc913b97e', 'name' VALUE 'Potential Winnti Dropper Activity', 'description' VALUE 'Detects files dropped by Winnti as described in RedMimicry Winnti playbook'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1027']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\gthread\-3\.6\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sigcmm\-2\.4\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windows\\temp\\tmp\.bat$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7eff1a7f-dd45-4c20-877a-f21e342a7611', 'name' VALUE 'RemCom Service File Creation', 'description' VALUE 'Detects default RemCom service filename which indicates RemCom service installation and execution'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1569.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7eff1a7f-dd45-4c20-877a-f21e342a7611', 'name' VALUE 'RemCom Service File Creation', 'description' VALUE 'Detects default RemCom service filename which indicates RemCom service installation and execution'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1569.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\remcomsvc\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fec96f39-988b-4586-b746-b93d59fd1922', 'name' VALUE 'ScreenConnect Temporary Installation Artefact', 'description' VALUE 'An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1219']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fec96f39-988b-4586-b746-b93d59fd1922', 'name' VALUE 'ScreenConnect Temporary Installation Artefact', 'description' VALUE 'An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.
These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.
Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1219']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\bin\\screenconnect\..*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0afecb6e-6223-4a82-99fb-bf5b981e92a5', 'name' VALUE 'Remote Access Tool - ScreenConnect Temporary File', 'description' VALUE 'Detects the creation of files in a specific location by ScreenConnect RMM.
ScreenConnect has feature to remotely execute binaries on a target machine. These binaries will be dropped to ":\Users\<username>\Documents\ConnectWiseControl\Temp\" before execution.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of ScreenConnect'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0afecb6e-6223-4a82-99fb-bf5b981e92a5', 'name' VALUE 'Remote Access Tool - ScreenConnect Temporary File', 'description' VALUE 'Detects the creation of files in a specific location by ScreenConnect RMM.
ScreenConnect has feature to remotely execute binaries on a target machine. These binaries will be dropped to ":\Users\<username>\Documents\ConnectWiseControl\Temp\" before execution.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of ScreenConnect'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\screenconnect\.windowsclient\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\documents\\connectwisecontrol\\temp\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a6976974-ea6f-4e97-818e-ea08625c52cb', 'name' VALUE 'Potential RipZip Attack on Startup Folder', 'description' VALUE 'Detects a phishing attack which expands a ZIP file containing a malicious shortcut.
If the victim expands the ZIP file via the explorer process, then the explorer process expands the malicious ZIP file and drops a malicious shortcut redirected to a backdoor into the Startup folder.
Additionally, the file name of the malicious shortcut in Startup folder contains {0AFACED1-E828-11D1-9187-B532F1E9575D} meaning the folder shortcut operation.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a6976974-ea6f-4e97-818e-ea08625c52cb', 'name' VALUE 'Potential RipZip Attack on Startup Folder', 'description' VALUE 'Detects a phishing attack which expands a ZIP file containing a malicious shortcut.
If the victim expands the ZIP file via the explorer process, then the explorer process expands the malicious ZIP file and drops a malicious shortcut redirected to a backdoor into the Startup folder.
Additionally, the file name of the malicious shortcut in Startup folder contains {0AFACED1-E828-11D1-9187-B532F1E9575D} meaning the folder shortcut operation.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\explorer\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\\windows\\start\ menu\\programs\\startup.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.lnk\.\{0afaced1\-e828\-11d1\-9187\-b532f1e9575d\}.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4e87b8e2-2ee9-4b2a-a715-4727d297ece0', 'name' VALUE 'Potential SAM Database Dump', 'description' VALUE 'Detects the creation of files that look like exports of the local SAM (Security Account Manager)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Rare cases of administrative activity'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4e87b8e2-2ee9-4b2a-a715-4727d297ece0', 'name' VALUE 'Potential SAM Database Dump', 'description' VALUE 'Detects the creation of files that look like exports of the local SAM (Security Account Manager)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Rare cases of administrative activity'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.002']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) ) AND ( ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\temp\\sam$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sam\.sav$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\intel\\sam$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sam\.hive$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\perflogs\\sam$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\programdata\\sam$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\users\\public\\sam$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\sam$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\roaming\\sam$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*_shadowsteal\.zip$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\documents\\sam\.export$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\sam$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\hive_sam_.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sam\.save.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sam\.export.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\\~reg_sam\.save.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sam_backup.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sam\.bck.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sam\.backup.*$') is not null)  ) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a762e74f-4dce-477c-b023-4ed81df600f9', 'name' VALUE 'Scheduled Task Created - FileCreation', 'description' VALUE 'Detects the creation of a scheduled task via file creation.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Normal behaviour on Windows'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0003', 'TA0004', 'NA', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1053.005']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a762e74f-4dce-477c-b023-4ed81df600f9', 'name' VALUE 'Scheduled Task Created - FileCreation', 'description' VALUE 'Detects the creation of a scheduled task via file creation.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Normal behaviour on Windows'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0003', 'TA0004', 'NA', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1053.005']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\windows\\system32\\tasks\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\windows\\syswow64\\tasks\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\windows\\tasks\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1277f594-a7d1-4f28-a2d3-73af5cbeab43', 'name' VALUE 'Windows Shell/Scripting Application File Write to Suspicious Folder', 'description' VALUE 'Detects Windows shells and scripting applications that write files to suspicious folders'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1277f594-a7d1-4f28-a2d3-73af5cbeab43', 'name' VALUE 'Windows Shell/Scripting Application File Write to Suspicious Folder', 'description' VALUE 'Detects Windows shells and scripting applications that write files to suspicious folders'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\bash\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\cmd\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\cscript\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msbuild\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\pwsh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\sh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wscript\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\perflogs\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\public\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certutil\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\forfiles\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mshta\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\schtasks\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\scriptrunner\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wmic\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*c:\\perflogs\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*c:\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*c:\\windows\\temp\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b8fd0e93-ff58-4cbd-8f48-1c114e342e62', 'name' VALUE 'Windows Binaries Write Suspicious Extensions', 'description' VALUE 'Detects Windows executables that writes files with suspicious extensions'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b8fd0e93-ff58-4cbd-8f48-1c114e342e62', 'name' VALUE 'Windows Binaries Write Suspicious Extensions', 'description' VALUE 'Detects Windows executables that writes files with suspicious extensions'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\smss\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\runtimebroker\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\sihost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\lsass\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\csrss\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winlogon\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wininit\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bat$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.txt$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbs$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.hta$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.iso$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rundll32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\svchost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\dllhost\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bat$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbs$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.hta$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.iso$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '2aa0a6b4-a865-495b-ab51-c28249537b75', 'name' VALUE 'Startup Folder File Write', 'description' VALUE 'A General detection for files being created in the Windows startup directory. This could be an indicator of persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['FP could be caused by legitimate application writing shortcuts for example. This folder should always be inspected to make sure that all the files in there are legitimate'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '2aa0a6b4-a865-495b-ab51-c28249537b75', 'name' VALUE 'Startup Folder File Write', 'description' VALUE 'A General detection for files being created in the Windows startup directory. This could be an indicator of persistence.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['FP could be caused by legitimate application writing shortcuts for example. This folder should always be inspected to make sure that all the files in there are legitimate'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\\windows\\start\ menu\\programs\\startup.*$') is not null) )and not ( ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\wuauclt\.exe$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\\$windows\.\~bt\\newos\\.*$') is not null)  ) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e15b518d-b4ce-4410-a9cd-501f23ce4a18', 'name' VALUE 'Suspicious Creation with Colorcpl', 'description' VALUE 'Once executed, colorcpl.exe will copy the arbitrary file to c:\windows\system32\spool\drivers\color\'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e15b518d-b4ce-4410-a9cd-501f23ce4a18', 'name' VALUE 'Suspicious Creation with Colorcpl', 'description' VALUE 'Once executed, colorcpl.exe will copy the arbitrary file to c:\windows\system32\spool\drivers\color\'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\colorcpl\.exe$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.icm$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.gmmp$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.cdmp$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.camp$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '409f8a98-4496-4aaa-818a-c931c0a8b832', 'name' VALUE 'Created Files by Microsoft Sync Center', 'description' VALUE 'This rule detects suspicious files created by Microsoft Sync Center (mobsync)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1055', 'T1218']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '409f8a98-4496-4aaa-818a-c931c0a8b832', 'name' VALUE 'Created Files by Microsoft Sync Center', 'description' VALUE 'This rule detects suspicious files created by Microsoft Sync Center (mobsync)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1055', 'T1218']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mobsync\.exe$') is not null) )and ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5f87308a-0a5b-4623-ae15-d8fa1809bc60', 'name' VALUE 'Suspicious Files in Default GPO Folder', 'description' VALUE 'Detects the creation of copy of suspicious files (EXE/DLL) to the default GPO storage folder'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.005']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5f87308a-0a5b-4623-ae15-d8fa1809bc60', 'name' VALUE 'Suspicious Files in Default GPO Folder', 'description' VALUE 'Detects the creation of copy of suspicious files (EXE/DLL) to the default GPO storage folder'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.005']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\policies\\\{31b2f340\-016d\-11d2\-945f\-00c04fb984f9\}\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '81315b50-6b60-4d8f-9928-3466e1022515', 'name' VALUE 'Suspicious desktop.ini Action', 'description' VALUE 'Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folders content (i.e. renaming files) without changing them on disk.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Operations performed through Windows SCCM or equivalent', 'Read only access list authority'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.009']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '81315b50-6b60-4d8f-9928-3466e1022515', 'name' VALUE 'Suspicious desktop.ini Action', 'description' VALUE 'Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folders content (i.e. renaming files) without changing them on disk.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Operations performed through Windows SCCM or equivalent', 'Read only access list authority'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.009']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\desktop\.ini$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\appdata\\local\\jetbrains\\toolbox\\bin\\7z\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\jetbrains\\apps\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\\$windows\.\~bt\\newos\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'caf02a0a-1e1c-4552-9b48-5e070bd88d11', 'name' VALUE 'Suspicious Creation TXT File in User Desktop', 'description' VALUE 'Ransomware create txt file in the user Desktop'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0040'],
       'techniqueidlist' VALUE ARRAY['T1486']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'caf02a0a-1e1c-4552-9b48-5e070bd88d11', 'name' VALUE 'Suspicious Creation TXT File in User Desktop', 'description' VALUE 'Ransomware create txt file in the user Desktop'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0040'],
       'techniqueidlist' VALUE ARRAY['T1486']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\cmd\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\users\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\desktop\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.txt$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('commandline' VALUE `winlog`.`event_data`.`commandline`)),'process' VALUE JSON_OBJECT ('parent' VALUE  JSON_OBJECT ('command_line' VALUE `process`.`parent`.`command_line`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fc4f4817-0c53-4683-a4ee-b17a64bc1039', 'name' VALUE 'Suspicious Desktopimgdownldr Target File', 'description' VALUE 'Detects a suspicious Microsoft desktopimgdownldr file creation that stores a file to a suspicious location or contains a file with a suspicious extension'),
       'observables_list' VALUE ARRAY['winlog.event_data.commandline', 'process.parent.command_line'],
       'falsepositives' VALUE ARRAY['False positives depend on scripts and administrative tools used in the monitored environment'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1105']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('winlog' VALUE JSON_OBJECT ('event_data' VALUE  JSON_OBJECT ('commandline' VALUE `winlog`.`event_data`.`commandline`)),'process' VALUE JSON_OBJECT ('parent' VALUE  JSON_OBJECT ('command_line' VALUE `process`.`parent`.`command_line`))),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'fc4f4817-0c53-4683-a4ee-b17a64bc1039', 'name' VALUE 'Suspicious Desktopimgdownldr Target File', 'description' VALUE 'Detects a suspicious Microsoft desktopimgdownldr file creation that stores a file to a suspicious location or contains a file with a suspicious extension'),
       'observables_list' VALUE ARRAY['winlog.event_data.commandline', 'process.parent.command_line'],
       'falsepositives' VALUE ARRAY['False positives depend on scripts and administrative tools used in the monitored environment'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1105']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\svchost\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\personalization\\lockscreenimage\\.*$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*c:\\windows\\.*$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.jpg.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.jpeg.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.png.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3d0ed417-3d94-4963-a562-4a92c940656a', 'name' VALUE 'Creation of a Diagcab', 'description' VALUE 'Detects the creation of diagcab file, which could be caused by some legitimate installer or is a sign of exploitation (review the filename and its location)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate microsoft diagcab'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3d0ed417-3d94-4963-a562-4a92c940656a', 'name' VALUE 'Creation of a Diagcab', 'description' VALUE 'Detects the creation of diagcab file, which could be caused by some legitimate installer or is a sign of exploitation (review the filename and its location)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate microsoft diagcab'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.diagcab$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b4926b47-a9d7-434c-b3a0-adc3fa0bd13e', 'name' VALUE 'Suspicious Double Extension Files', 'description' VALUE 'Detects dropped files with double extensions, which is often used by malware as a method to abuse the fact that Windows hide default extensions by default.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.007']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b4926b47-a9d7-434c-b3a0-adc3fa0bd13e', 'name' VALUE 'Suspicious Double Extension Files', 'description' VALUE 'Detects dropped files with double extensions, which is often used by malware as a method to abuse the fact that Windows hide default extensions by default.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.007']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.rar\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.zip\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.doc\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.docx\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.jpg\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.pdf\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ppt\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.pptx\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xls\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xlsx\..*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.iso$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.rar$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.zip$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7280c9f3-a5af-45d0-916a-bc01cb4151c9', 'name' VALUE 'Suspicious MSExchangeMailboxReplication ASPX Write', 'description' VALUE 'Detects suspicious activity in which the MSExchangeMailboxReplication process writes .asp and .apsx files to disk, which could be a sign of ProxyShell exploitation'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0001', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1190', 'T1505.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7280c9f3-a5af-45d0-916a-bc01cb4151c9', 'name' VALUE 'Suspicious MSExchangeMailboxReplication ASPX Write', 'description' VALUE 'Detects suspicious activity in which the MSExchangeMailboxReplication process writes .asp and .apsx files to disk, which could be a sign of ProxyShell exploitation'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0001', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1190', 'T1505.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msexchangemailboxreplication\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.aspx$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.asp$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '74babdd6-a758-4549-9632-26535279e654', 'name' VALUE 'Suspicious Executable File Creation', 'description' VALUE 'Detect creation of suspicious executable file name. Some strings look for suspicious file extensions, others look for filenames that exploit unquoted service paths.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '74babdd6-a758-4549-9632-26535279e654', 'name' VALUE 'Suspicious Executable File Creation', 'description' VALUE 'Detect creation of suspicious executable file name. Some strings look for suspicious file extensions, others look for filenames that exploit unquoted service paths.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bat\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.sys\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\\$recycle\.bin\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\documents\ and\ settings\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\msocache\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\recovery\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\perflogs\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0c3fac91-5627-46e8-a6a8-a0d7b9b8ae1b', 'name' VALUE 'Suspicious Get-Variable.exe Creation', 'description' VALUE 'Get-Variable is a valid PowerShell cmdlet
WindowsApps is by default in the path where PowerShell is executed.
So when the Get-Variable command is issued on PowerShell execution, the system first looks for the Get-Variable executable in the path and executes the malicious binary instead of looking for the PowerShell cmdlet.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1546', 'T1027']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0c3fac91-5627-46e8-a6a8-a0d7b9b8ae1b', 'name' VALUE 'Suspicious Get-Variable.exe Creation', 'description' VALUE 'Get-Variable is a valid PowerShell cmdlet
WindowsApps is by default in the path where PowerShell is executed.
So when the Get-Variable command is issued on PowerShell execution, the system first looks for the Get-Variable executable in the path and executes the malicious binary instead of looking for the PowerShell cmdlet.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1546', 'T1027']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*local\\microsoft\\windowsapps\\get\-variable\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a8f866e1-bdd4-425e-a27a-37619238d9c7', 'name' VALUE 'Potential Hidden Directory Creation Via NTFS INDEX_ALLOCATION Stream', 'description' VALUE 'Detects the creation of hidden file/folder with the "::$index_allocation" stream. Which can be used as a technique to prevent access to folder and files from tooling such as "explorer.exe" and "powershell.exe"
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564.004']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a8f866e1-bdd4-425e-a27a-37619238d9c7', 'name' VALUE 'Potential Hidden Directory Creation Via NTFS INDEX_ALLOCATION Stream', 'description' VALUE 'Detects the creation of hidden file/folder with the "::$index_allocation" stream. Which can be used as a technique to prevent access to folder and files from tooling such as "explorer.exe" and "powershell.exe"
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1564.004']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*::\$index_allocation.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4f1707b1-b50b-45b4-b5a2-3978b5a5d0d6', 'name' VALUE 'Potential Homoglyph Attack Using Lookalike Characters in Filename', 'description' VALUE 'Detects the presence of unicode characters which are homoglyphs, or identical in appearance, to ASCII letter characters.
This is used as an obfuscation and masquerading techniques. Only "perfect" homoglyphs are included; these are characters that
are indistinguishable from ASCII characters and thus may make excellent candidates for homoglyph attack characters.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['File names with legitimate Cyrillic text. Will likely require tuning (or not be usable) in countries where these alphabets are in use.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036', 'T1036.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4f1707b1-b50b-45b4-b5a2-3978b5a5d0d6', 'name' VALUE 'Potential Homoglyph Attack Using Lookalike Characters in Filename', 'description' VALUE 'Detects the presence of unicode characters which are homoglyphs, or identical in appearance, to ASCII letter characters.
This is used as an obfuscation and masquerading techniques. Only "perfect" homoglyphs are included; these are characters that
are indistinguishable from ASCII characters and thus may make excellent candidates for homoglyph attack characters.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['File names with legitimate Cyrillic text. Will likely require tuning (or not be usable) in countries where these alphabets are in use.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036', 'T1036.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*а.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*е.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*о.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*р.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*с.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*х.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ѕ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*і.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ӏ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ј.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*һ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ԁ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ԛ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ԝ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ο.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*а.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*в.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*е.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*к.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*м.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*н.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*о.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*р.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*с.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*т.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*х.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ѕ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*і.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ј.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ү.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ӏ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ԍ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ԛ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ԝ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*α.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*β.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ε.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ζ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*η.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ι.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*κ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*μ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ν.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ο.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*ρ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*τ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*υ.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*χ.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '654fcc6d-840d-4844-9b07-2c3300e54a26', 'name' VALUE 'Legitimate Application Dropped Archive', 'description' VALUE 'Detects programs on a Windows system that should not write an archive to disk'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '654fcc6d-840d-4844-9b07-2c3300e54a26', 'name' VALUE 'Legitimate Application Dropped Archive', 'description' VALUE 'Detects programs on a Windows system that should not write an archive to disk'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msaccess\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mspub\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\eqnedt32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\visio\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wordpad\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wordview\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certutil\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certoc\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certreq\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\desktopimgdownldr\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\esentutl\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\finger\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\notepad\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\acrord32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rdrcef\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mshta\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\hh\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.zip$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.rar$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.7z$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.diagcab$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.appx$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f0540f7e-2db3-4432-b9e0-3965486744bc', 'name' VALUE 'Legitimate Application Dropped Executable', 'description' VALUE 'Detects programs on a Windows system that should not write executables to disk'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f0540f7e-2db3-4432-b9e0-3965486744bc', 'name' VALUE 'Legitimate Application Dropped Executable', 'description' VALUE 'Detects programs on a Windows system that should not write executables to disk'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\eqnedt32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wordpad\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wordview\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certutil\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certoc\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certreq\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\desktopimgdownldr\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\esentutl\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mshta\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\acrord32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rdrcef\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\hh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\finger\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ocx$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7d604714-e071-49ff-8726-edeb95a70679', 'name' VALUE 'Legitimate Application Dropped Script', 'description' VALUE 'Detects programs on a Windows system that should not write scripts to disk'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7d604714-e071-49ff-8726-edeb95a70679', 'name' VALUE 'Legitimate Application Dropped Script', 'description' VALUE 'Detects programs on a Windows system that should not write scripts to disk'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\eqnedt32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wordpad\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wordview\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certutil\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certoc\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\certreq\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\desktopimgdownldr\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\esentutl\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mshta\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\acrord32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rdrcef\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\hh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\finger\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bat$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbs$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.scf$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.wsf$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.wsh$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3215aa19-f060-4332-86d5-5602511f3ca8', 'name' VALUE 'Suspicious LNK Double Extension File Created', 'description' VALUE 'Detects the creation of files with an "LNK" as a second extension. This is sometimes used by malware as a method to abuse the fact that Windows hides the "LNK" extension by default.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some tuning is required for other general purpose directories of third party apps'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.007']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3215aa19-f060-4332-86d5-5602511f3ca8', 'name' VALUE 'Suspicious LNK Double Extension File Created', 'description' VALUE 'Detects the creation of files with an "LNK" as a second extension. This is sometimes used by malware as a method to abuse the fact that Windows hides the "LNK" extension by default.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some tuning is required for other general purpose directories of third party apps'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.007']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.doc\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.docx\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.jpg\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.pdf\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ppt\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.pptx\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xls\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xlsx\..*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.lnk$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\roaming\\microsoft\\windows\\recent\\.*$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\roaming\\microsoft\\excel.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\roaming\\microsoft\\powerpoint.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\roaming\\microsoft\\office\\recent\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\roaming\\microsoft\\word.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'dca1b3e8-e043-4ec8-85d7-867f334b5724', 'name' VALUE 'Suspicious PFX File Creation', 'description' VALUE 'A general detection for processes creating PFX files. This could be an indicator of an adversary exporting a local certificate to a PFX file.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['System administrators managing certififcates.'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1552.004']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'dca1b3e8-e043-4ec8-85d7-867f334b5724', 'name' VALUE 'Suspicious PFX File Creation', 'description' VALUE 'A general detection for processes creating PFX files. This could be an indicator of an adversary exporting a local certificate to a PFX file.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['System administrators managing certififcates.'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1552.004']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.pfx$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\templates\\windows\\windows_temporarykey\.pfx.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\cmake\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b5b78988-486d-4a80-b991-930eff3ff8bf', 'name' VALUE 'PowerShell Profile Modification', 'description' VALUE 'Detects the creation or modification of a powershell profile which could indicate suspicious activity as the profile can be used as a mean of persistence'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['System administrator creating Powershell profile manually'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1546.013']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b5b78988-486d-4a80-b991-930eff3ff8bf', 'name' VALUE 'PowerShell Profile Modification', 'description' VALUE 'Detects the creation or modification of a powershell profile which could indicate suspicious activity as the profile can be used as a mean of persistence'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['System administrator creating Powershell profile manually'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1546.013']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\.powershell_profile\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\powershell\\profile\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\program\ files\\powershell\\7\-preview\\profile\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\program\ files\\powershell\\7\\profile\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windows\\system32\\windowspowershell\\v1\.0\\profile\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windowspowershell\\profile\.ps1$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3da70954-0f2c-4103-adff-b7440368f50e', 'name' VALUE 'Suspicious PROCEXP152.sys File Created In TMP', 'description' VALUE 'Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder.
This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legimate tools using this driver and filename (like Sysinternals). Note - Clever attackers may easily bypass this detection by just renaming the driver filename. Therefore just Medium-level and dont rely on it.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3da70954-0f2c-4103-adff-b7440368f50e', 'name' VALUE 'Suspicious PROCEXP152.sys File Created In TMP', 'description' VALUE 'Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder.
This driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legimate tools using this driver and filename (like Sysinternals). Note - Clever attackers may easily bypass this detection by just renaming the driver filename. Therefore just Medium-level and dont rely on it.'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*procexp152\.sys$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp64\.exe.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp\.exe.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procmon64\.exe.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procmon\.exe.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'cd8b36ac-8e4a-4c2f-a402-a29b8fbd5bca', 'name' VALUE 'Suspicious File Creation Activity From Fake Recycle.Bin Folder', 'description' VALUE 'Detects file write event from/to a fake recycle bin folder that is often used as a staging directory for malware'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'cd8b36ac-8e4a-4c2f-a402-a29b8fbd5bca', 'name' VALUE 'Suspicious File Creation Activity From Fake Recycle.Bin Folder', 'description' VALUE 'Detects file write event from/to a fake recycle bin folder that is often used as a staging directory for malware'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) ) AND ( ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*recyclers\.bin\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*recycler\.bin\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*recycle\.bin\\.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*recyclers\.bin\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*recycler\.bin\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*recycle\.bin\\.*$') is not null)  ) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ce7066a6-508a-42d3-995b-2952c65dc2ce', 'name' VALUE 'Drop Binaries Into Spool Drivers Color Folder', 'description' VALUE 'Detects the creation of suspcious binary files inside the "\windows\system32\spool\drivers\color\" as seen in the blog referenced below'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ce7066a6-508a-42d3-995b-2952c65dc2ce', 'name' VALUE 'Drop Binaries Into Spool Drivers Color Folder', 'description' VALUE 'Detects the creation of suspcious binary files inside the "\windows\system32\spool\drivers\color\" as seen in the blog referenced below'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.sys$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\spool\\drivers\\color\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '28208707-fe31-437f-9a7f-4b1108b94d2e', 'name' VALUE 'Suspicious Startup Folder Persistence', 'description' VALUE 'Detects when a file with a suspicious extension is created in the startup folder'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Rare legitimate usage of some of the extensions mentioned in the rule'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '28208707-fe31-437f-9a7f-4b1108b94d2e', 'name' VALUE 'Suspicious Startup Folder Persistence', 'description' VALUE 'Detects when a file with a suspicious extension is created in the startup folder'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Rare legitimate usage of some of the extensions mentioned in the rule'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windows\\start\ menu\\programs\\startup\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbs$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vbe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bat$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ps1$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.hta$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.jar$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.msi$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.scr$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.cmd$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5b40a734-99b6-4b98-a1d0-1cea51a08ab2', 'name' VALUE 'Suspicious Interactive PowerShell as SYSTEM', 'description' VALUE 'Detects the creation of files that indicator an interactive use of PowerShell in the SYSTEM user context'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrative activity', 'PowerShell scripts running as SYSTEM user'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '5b40a734-99b6-4b98-a1d0-1cea51a08ab2', 'name' VALUE 'Suspicious Interactive PowerShell as SYSTEM', 'description' VALUE 'Detects the creation of files that indicator an interactive use of PowerShell in the SYSTEM user context'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrative activity', 'PowerShell scripts running as SYSTEM user'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\config\\systemprofile\\appdata\\roaming\\microsoft\\windows\\powershell\\psreadline\\consolehost_history\.txt$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\config\\systemprofile\\appdata\\local\\microsoft\\windows\\powershell\\startupprofiledata\-interactive$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '80e1f67a-4596-4351-98f5-a9c3efabac95', 'name' VALUE 'Suspicious Scheduled Task Write to System32 Tasks', 'description' VALUE 'Detects the creation of tasks from processes executed from suspicious locations'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0002'],
       'techniqueidlist' VALUE ARRAY['T1053']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '80e1f67a-4596-4351-98f5-a9c3efabac95', 'name' VALUE 'Suspicious Scheduled Task Write to System32 Tasks', 'description' VALUE 'Detects the creation of tasks from processes executed from suspicious locations'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0002'],
       'techniqueidlist' VALUE ARRAY['T1053']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\appdata\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*c:\\perflogs.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\windows\\system32\\config\\systemprofile.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windows\\system32\\tasks.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '162ab1e4-6874-4564-853c-53ec3ab8be01', 'name' VALUE 'TeamViewer Remote Session', 'description' VALUE 'Detects the creation of log files during a TeamViewer remote session'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate uses of TeamViewer in an organisation'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1219']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '162ab1e4-6874-4564-853c-53ec3ab8be01', 'name' VALUE 'TeamViewer Remote Session', 'description' VALUE 'Detects the creation of log files during a TeamViewer remote session'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate uses of TeamViewer in an organisation'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1219']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\teamviewer\\remoteprinting\\tvprint\.db$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\teamviewer\\tvnetwork\.log$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\teamviewer.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*_logfile\.log.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3a9fa2ec-30bc-4ebd-b49e-7c9cff225502', 'name' VALUE 'VsCode Powershell Profile Modification', 'description' VALUE 'Detects the creation or modification of a vscode related powershell profile which could indicate suspicious activity as the profile can be used as a mean of persistence'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of the profile by developers or administrators'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1546.013']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3a9fa2ec-30bc-4ebd-b49e-7c9cff225502', 'name' VALUE 'VsCode Powershell Profile Modification', 'description' VALUE 'Detects the creation or modification of a vscode related powershell profile which could indicate suspicious activity as the profile can be used as a mean of persistence'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate use of the profile by developers or administrators'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1546.013']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\.vscode_profile\.ps1$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9b64de98-9db3-4033-bd7a-f51430105f00', 'name' VALUE 'Windows Terminal Profile Settings Modification By Uncommon Process', 'description' VALUE 'Detects the creation or modification of the Windows Terminal Profile settings file "settings.json" by an uncommon process.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some false positives may occur with admin scripts that set WT settings.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.015']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9b64de98-9db3-4033-bd7a-f51430105f00', 'name' VALUE 'Windows Terminal Profile Settings Modification By Uncommon Process', 'description' VALUE 'Detects the creation or modification of the Windows Terminal Profile settings file "settings.json" by an uncommon process.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some false positives may occur with admin scripts that set WT settings.'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1547.015']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\cmd\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\cscript\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mshta\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\pwsh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wscript\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\packages\\microsoft\.windowsterminal_8wekyb3d8bbwe\\localstate\\settings\.json$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '34746e8c-5fb8-415a-b135-0abc167e912a', 'name' VALUE 'WinSxS Executable File Creation By Non-System Process', 'description' VALUE 'Detects the creation of binaries in the WinSxS folder by non-system processes'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '34746e8c-5fb8-415a-b135-0abc167e912a', 'name' VALUE 'WinSxS Executable File Creation By Non-System Process', 'description' VALUE 'Detects the creation of binaries in the WinSxS folder by non-system processes'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\systems32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '814ddeca-3d31-4265-8e07-8cc54fb44903', 'name' VALUE 'LiveKD Kernel Memory Dump File Created', 'description' VALUE 'Detects the creation of a file that has the same name as the default LiveKD kernel memory dump.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['In rare occasions administrators might leverage LiveKD to perform live kernel debugging. This should not be allowed on production systems. Investigate and apply additional filters where necessary.'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '814ddeca-3d31-4265-8e07-8cc54fb44903', 'name' VALUE 'LiveKD Kernel Memory Dump File Created', 'description' VALUE 'Detects the creation of a file that has the same name as the default LiveKD kernel memory dump.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['In rare occasions administrators might leverage LiveKD to perform live kernel debugging. This should not be allowed on production systems. Investigate and apply additional filters where necessary.'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\livekd\.dmp$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '16fe46bb-4f64-46aa-817d-ff7bec4a2352', 'name' VALUE 'LiveKD Driver Creation', 'description' VALUE 'Detects the creation of the LiveKD driver, which is used for live kernel debugging'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate usage of LiveKD for debugging purposes will also trigger this'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '16fe46bb-4f64-46aa-817d-ff7bec4a2352', 'name' VALUE 'LiveKD Driver Creation', 'description' VALUE 'Detects the creation of the LiveKD driver, which is used for live kernel debugging'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate usage of LiveKD for debugging purposes will also trigger this'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\livekd\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\livek64\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\drivers\\livekdd\.sys$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '059c5af9-5131-4d8d-92b2-de4ad6146712', 'name' VALUE 'LiveKD Driver Creation By Uncommon Process', 'description' VALUE 'Detects the creation of the LiveKD driver by a process image other than "livekd.exe".'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrators might rename LiveKD before its usage which could trigger this. Add additional names you use to the filter'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '059c5af9-5131-4d8d-92b2-de4ad6146712', 'name' VALUE 'LiveKD Driver Creation By Uncommon Process', 'description' VALUE 'Detects the creation of the LiveKD driver by a process image other than "livekd.exe".'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Administrators might rename LiveKD before its usage which could trigger this. Add additional names you use to the filter'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\drivers\\livekdd\.sys$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\livekd\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\livek64\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'de46c52b-0bf8-4936-a327-aace94f94ac6', 'name' VALUE 'Process Explorer Driver Creation By Non-Sysinternals Binary', 'description' VALUE 'Detects creation of the Process Explorer drivers by processes other than Process Explorer (procexp) itself.
Hack tools or malware may use the Process Explorer driver to elevate privileges, drops it to disk for a few moments, runs a service using that driver and removes it afterwards.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some false positives may occur with legitimate renamed process explorer binaries'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1068']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'de46c52b-0bf8-4936-a327-aace94f94ac6', 'name' VALUE 'Process Explorer Driver Creation By Non-Sysinternals Binary', 'description' VALUE 'Detects creation of the Process Explorer drivers by processes other than Process Explorer (procexp) itself.
Hack tools or malware may use the Process Explorer driver to elevate privileges, drops it to disk for a few moments, runs a service using that driver and removes it afterwards.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some false positives may occur with legitimate renamed process explorer binaries'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1068']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\procexp.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.sys$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp64\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a05baa88-e922-4001-bc4d-8738135f27de', 'name' VALUE 'Process Monitor Driver Creation By Non-Sysinternals Binary', 'description' VALUE 'Detects creation of the Process Monitor driver by processes other than Process Monitor (procmon) itself.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some false positives may occur with legitimate renamed process monitor binaries'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1068']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a05baa88-e922-4001-bc4d-8738135f27de', 'name' VALUE 'Process Monitor Driver Creation By Non-Sysinternals Binary', 'description' VALUE 'Detects creation of the Process Monitor driver by processes other than Process Monitor (procmon) itself.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some false positives may occur with legitimate renamed process monitor binaries'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1068']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\procmon.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.sys$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procmon\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procmon64\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '259e5a6a-b8d2-4c38-86e2-26c5e651361d', 'name' VALUE 'PsExec Service File Creation', 'description' VALUE 'Detects default PsExec service filename which indicates PsExec service installation and execution'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1569.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '259e5a6a-b8d2-4c38-86e2-26c5e651361d', 'name' VALUE 'PsExec Service File Creation', 'description' VALUE 'Detects default PsExec service filename which indicates PsExec service installation and execution'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1569.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\psexesvc\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '304afd73-55a5-4bb9-8c21-0b1fc84ea9e4', 'name' VALUE 'PSEXEC Remote Execution File Artefact', 'description' VALUE 'Detects creation of the PSEXEC key file. Which is created anytime a PsExec command is executed. It gets written to the file system and will be recorded in the USN Journal on the target system'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0008', 'TA0004', 'TA0002', 'TA0003', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1136.002', 'T1543.003', 'T1570']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '304afd73-55a5-4bb9-8c21-0b1fc84ea9e4', 'name' VALUE 'PSEXEC Remote Execution File Artefact', 'description' VALUE 'Detects creation of the PSEXEC key file. Which is created anytime a PsExec command is executed. It gets written to the file system and will be recorded in the USN Journal on the target system'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0008', 'TA0004', 'TA0002', 'TA0003', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1136.002', 'T1543.003', 'T1570']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.key$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\psexec\-.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '07a99744-56ac-40d2-97b7-2095967b0e03', 'name' VALUE 'Potential Privilege Escalation Attempt Via .Exe.Local Technique', 'description' VALUE 'Detects potential privilege escalation attempt via the creation of the "*.Exe.Local" folder inside the "System32" directory in order to sideload "comctl32.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '07a99744-56ac-40d2-97b7-2095967b0e03', 'name' VALUE 'Potential Privilege Escalation Attempt Via .Exe.Local Technique', 'description' VALUE 'Detects potential privilege escalation attempt via the creation of the "*.Exe.Local" folder inside the "System32" directory in order to sideload "comctl32.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\comctl32\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\logonui\.exe\.local.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\werfault\.exe\.local.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\consent\.exe\.local.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\narrator\.exe\.local.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\wermgr\.exe\.local.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '69ca12af-119d-44ed-b50f-a47af0ebc364', 'name' VALUE 'LSASS Process Memory Dump Creation Via Taskmgr.EXE', 'description' VALUE 'Detects the creation of an "lsass.dmp" file by the taskmgr process. This indicates a manual dumping of the LSASS.exe process memory using Windows Task Manager.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Rare case of troubleshooting by an administrator or support that has to be investigated regardless'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '69ca12af-119d-44ed-b50f-a47af0ebc364', 'name' VALUE 'LSASS Process Memory Dump Creation Via Taskmgr.EXE', 'description' VALUE 'Detects the creation of an "lsass.dmp" file by the taskmgr process. This indicates a manual dumping of the LSASS.exe process memory using Windows Task Manager.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Rare case of troubleshooting by an administrator or support that has to be investigated regardless'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\taskmgr\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\taskmgr\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\lsass.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dmp.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '52753ea4-b3a0-4365-910d-36cff487b789', 'name' VALUE 'Hijack Legit RDP Session to Move Laterally', 'description' VALUE 'Detects the usage of tsclient share to place a backdoor on the RDP source machines startup folder'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1219']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '52753ea4-b3a0-4365-910d-36cff487b789', 'name' VALUE 'Hijack Legit RDP Session to Move Laterally', 'description' VALUE 'Detects the usage of tsclient share to place a backdoor on the RDP source machines startup folder'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1219']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mstsc\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\\windows\\start\ menu\\programs\\startup\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '62ed5b55-f991-406a-85d9-e8e8fdf18789', 'name' VALUE 'UAC Bypass Using Consent and Comctl32 - File', 'description' VALUE 'Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '62ed5b55-f991-406a-85d9-e8e8fdf18789', 'name' VALUE 'UAC Bypass Using Consent and Comctl32 - File', 'description' VALUE 'Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\comctl32\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\consent\.exe\.@.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '93a19907-d4f9-4deb-9f91-aac4692776a6', 'name' VALUE 'UAC Bypass Using .NET Code Profiler on MMC', 'description' VALUE 'Detects the pattern of UAC Bypass using .NET Code Profiler and mmc.exe DLL hijacking (UACMe 39)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '93a19907-d4f9-4deb-9f91-aac4692776a6', 'name' VALUE 'UAC Bypass Using .NET Code Profiler on MMC', 'description' VALUE 'Detects the pattern of UAC Bypass using .NET Code Profiler and mmc.exe DLL hijacking (UACMe 39)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\pe386\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '63e4f530-65dc-49cc-8f80-ccfa95c69d43', 'name' VALUE 'UAC Bypass Using EventVwr', 'description' VALUE 'Detects the pattern of a UAC bypass using Windows Event Viewer'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '63e4f530-65dc-49cc-8f80-ccfa95c69d43', 'name' VALUE 'UAC Bypass Using EventVwr', 'description' VALUE 'Detects the pattern of a UAC bypass using Windows Event Viewer'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\\event\ viewer\\recentviews$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\microsoft\\eventv\~1\\recentviews$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '48ea844d-19b1-4642-944e-fe39c2cc1fec', 'name' VALUE 'UAC Bypass Using IDiagnostic Profile - File', 'description' VALUE 'Detects the creation of a file by "dllhost.exe" in System32 directory part of "IDiagnosticProfileUAC" UAC bypass technique'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '48ea844d-19b1-4642-944e-fe39c2cc1fec', 'name' VALUE 'UAC Bypass Using IDiagnostic Profile - File', 'description' VALUE 'Detects the creation of a file by "dllhost.exe" in System32 directory part of "IDiagnosticProfileUAC" UAC bypass technique'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\dllhost\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bdd8157d-8e85-4397-bb82-f06cc9c71dbb', 'name' VALUE 'UAC Bypass Using IEInstal - File', 'description' VALUE 'Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bdd8157d-8e85-4397-bb82-f06cc9c71dbb', 'name' VALUE 'UAC Bypass Using IEInstal - File', 'description' VALUE 'Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\internet\ explorer\\ieinstal\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*consent\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '41bb431f-56d8-4691-bb56-ed34e390906f', 'name' VALUE 'UAC Bypass Using MSConfig Token Modification - File', 'description' VALUE 'Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '41bb431f-56d8-4691-bb56-ed34e390906f', 'name' VALUE 'UAC Bypass Using MSConfig Token Modification - File', 'description' VALUE 'Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\pkgmgr\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7fff6773-2baa-46de-a24a-b6eec1aba2d1', 'name' VALUE 'UAC Bypass Using NTFS Reparse Point - File', 'description' VALUE 'Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7fff6773-2baa-46de-a24a-b6eec1aba2d1', 'name' VALUE 'UAC Bypass Using NTFS Reparse Point - File', 'description' VALUE 'Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\api\-ms\-win\-core\-kernel32\-legacy\-l1\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '155dbf56-e0a4-4dd0-8905-8a98705045e8', 'name' VALUE 'UAC Bypass Abusing Winsat Path Parsing - File', 'description' VALUE 'Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '155dbf56-e0a4-4dd0-8905-8a98705045e8', 'name' VALUE 'UAC Bypass Abusing Winsat Path Parsing - File', 'description' VALUE 'Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\system32\\winsat\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\system32\\winmm\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '68578b43-65df-4f81-9a9b-92f32711a951', 'name' VALUE 'UAC Bypass Using Windows Media Player - File', 'description' VALUE 'Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '68578b43-65df-4f81-9a9b-92f32711a951', 'name' VALUE 'UAC Bypass Using Windows Media Player - File', 'description' VALUE 'Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1548.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\osksupport\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\users\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\dllhost\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\windows\ media\ player\\osk\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8468111a-ef07-4654-903b-b863a80bbc95', 'name' VALUE 'VHD Image Download Via Browser', 'description' VALUE 'Detects creation of ".vhd"/".vhdx" files by browser processes.
Malware can use mountable Virtual Hard Disk ".vhd" files to encapsulate payloads and evade security controls.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate downloads of ".vhd" files would also trigger this'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['T1587.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8468111a-ef07-4654-903b-b863a80bbc95', 'name' VALUE 'VHD Image Download Via Browser', 'description' VALUE 'Detects creation of ".vhd"/".vhdx" files by browser processes.
Malware can use mountable Virtual Hard Disk ".vhd" files to encapsulate payloads and evade security controls.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate downloads of ".vhd" files would also trigger this'] ,
       'tacticidlist' VALUE ARRAY['TA0042'],
       'techniqueidlist' VALUE ARRAY['T1587.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\brave\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\chrome\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\firefox\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\iexplore\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\maxthon\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\microsoftedge\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msedge\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msedgewebview2\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\opera\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\safari\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\seamonkey\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\vivaldi\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\whale\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.vhd.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '56e05d41-ce99-4ecd-912d-93f019ee0b71', 'name' VALUE 'Visual Studio Code Tunnel Remote File Creation', 'description' VALUE 'Detects the creation of file by the "node.exe" process in the ".vscode-server" directory. Could be a sign of remote file creation via VsCode tunnel feature
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '56e05d41-ce99-4ecd-912d-93f019ee0b71', 'name' VALUE 'Visual Studio Code Tunnel Remote File Creation', 'description' VALUE 'Detects the creation of file by the "node.exe" process in the ".vscode-server" directory. Could be a sign of remote file creation via VsCode tunnel feature
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\servers\\stable\-.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\server\\node\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\\.vscode\-server\\data\\user\\history\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd102b8f5-61dc-4e68-bd83-9a3187c67377', 'name' VALUE 'Renamed VsCode Code Tunnel Execution - File Indicator', 'description' VALUE 'Detects the creation of a file with the name "code_tunnel.json" which indicate execution and usage of VsCode tunneling utility by an "Image" or "Process" other than VsCode.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd102b8f5-61dc-4e68-bd83-9a3187c67377', 'name' VALUE 'Renamed VsCode Code Tunnel Execution - File Indicator', 'description' VALUE 'Detects the creation of a file with the name "code_tunnel.json" which indicate execution and usage of VsCode tunneling utility by an "Image" or "Process" other than VsCode.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\code_tunnel\.json$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\code\-tunnel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\code\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '39f1f9f2-9636-45de-98f6-a4046aa8e4b9', 'name' VALUE 'Potential Webshell Creation On Static Website', 'description' VALUE 'Detects the creation of files with certain extensions on a static web site. This can be indicative of potential uploads of a web shell.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate administrator or developer creating legitimate executable files in a web application folder'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1505.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '39f1f9f2-9636-45de-98f6-a4046aa8e4b9', 'name' VALUE 'Potential Webshell Creation On Static Website', 'description' VALUE 'Detects the creation of files with certain extensions on a static web site. This can be indicative of potential uploads of a web shell.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate administrator or developer creating legitimate executable files in a web application folder'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1505.003']

  )) FROM EdrTable WHERE ((((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ashx.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.asp.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ph.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.soap.*$') is not null) ) AND ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\inetpub\\wwwroot\\.*$') is not null) ) )  or (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ph.*$') is not null) ) AND ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\www\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\htdocs\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\html\\.*$') is not null) ) )  )  and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\xampp.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^system$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windows\\temp\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '28a452f3-786c-4fd8-b8f2-bddbe9d616d1', 'name' VALUE 'Creation of an WerFault.exe in Unusual Folder', 'description' VALUE 'Detects WerFault copoed to a suspicious folder, which could be a sign of WerFault DLL hijacking'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1574.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '28a452f3-786c-4fd8-b8f2-bddbe9d616d1', 'name' VALUE 'Creation of an WerFault.exe in Unusual Folder', 'description' VALUE 'Detects WerFault copoed to a suspicious folder, which could be a sign of WerFault DLL hijacking'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1574.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\werfault\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wer\.dll$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\winsxs\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd353dac0-1b41-46c2-820c-d7d2561fc6ed', 'name' VALUE 'AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - File', 'description' VALUE 'Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1216']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd353dac0-1b41-46c2-820c-d7d2561fc6ed', 'name' VALUE 'AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - File', 'description' VALUE 'Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1216']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*wsmpty\.xsl$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*wsmtxt\.xsl$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '33f41cdd-35ac-4ba8-814b-c6a4244a1ad4', 'name' VALUE 'WMI Persistence - Script Event Consumer File Write', 'description' VALUE 'Detects file writes of WMI script event consumer'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Dell Power Manager (C:\\Program Files\\Dell\\PowerManager\\DpmPowerPlanSetup.exe)'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '33f41cdd-35ac-4ba8-814b-c6a4244a1ad4', 'name' VALUE 'WMI Persistence - Script Event Consumer File Write', 'description' VALUE 'Detects file writes of WMI script event consumer'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Dell Power Manager (C:\\Program Files\\Dell\\PowerManager\\DpmPowerPlanSetup.exe)'] ,
       'tacticidlist' VALUE ARRAY['TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\wbem\\scrcons\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'critical'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8d5aca11-22b3-4f22-b7ba-90e60533e1fb', 'name' VALUE 'Wmiexec Default Output File', 'description' VALUE 'Detects the creation of the default output filename used by the wmiexec tool'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0008'],
       'techniqueidlist' VALUE ARRAY['T1047']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'critical'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8d5aca11-22b3-4f22-b7ba-90e60533e1fb', 'name' VALUE 'Wmiexec Default Output File', 'description' VALUE 'Detects the creation of the default output filename used by the wmiexec tool'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0008'],
       'techniqueidlist' VALUE ARRAY['T1047']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) ) AND ( ( REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '\\windows\\__1\d{9}\.\d{1,7}$') is not null  )  OR  ( REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), 'c:\\__1\d{9}\.\d{1,7}$') is not null  )  OR  ( REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), 'd:\\__1\d{9}\.\d{1,7}$') is not null  ) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'critical'),
       'rule' VALUE JSON_OBJECT('id' VALUE '614a7e17-5643-4d89-b6fe-f9df1a79641c', 'name' VALUE 'Wmiprvse Wbemcomn DLL Hijack - File', 'description' VALUE 'Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network and loading it for a WMI DLL Hijack scenario.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0008'],
       'techniqueidlist' VALUE ARRAY['T1047', 'T1021.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'critical'),
       'rule' VALUE JSON_OBJECT('id' VALUE '614a7e17-5643-4d89-b6fe-f9df1a79641c', 'name' VALUE 'Wmiprvse Wbemcomn DLL Hijack - File', 'description' VALUE 'Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\Windows\System32\wbem\` directory over the network and loading it for a WMI DLL Hijack scenario.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002', 'TA0008'],
       'techniqueidlist' VALUE ARRAY['T1047', 'T1021.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^system$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wbem\\wbemcomn\.dll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e94b9ddc-eec5-4bb8-8a58-b9dc5f4e185f', 'name' VALUE 'UEFI Persistence Via Wpbbin - FileCreation', 'description' VALUE 'Detects creation of a file named "wpbbin" in the "%systemroot%\system32\" directory. Which could be indicative of UEFI based persistence method'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate usage of the file by hardware manufacturer such as lenovo (Thanks @0gtweet for the tip)'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1542.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e94b9ddc-eec5-4bb8-8a58-b9dc5f4e185f', 'name' VALUE 'UEFI Persistence Via Wpbbin - FileCreation', 'description' VALUE 'Detects creation of a file named "wpbbin" in the "%systemroot%\system32\" directory. Which could be indicative of UEFI based persistence method'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate usage of the file by hardware manufacturer such as lenovo (Thanks @0gtweet for the tip)'] ,
       'tacticidlist' VALUE ARRAY['TA0003', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1542.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\wpbbin\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4aafb0fa-bff5-4b9d-b99e-8093e659c65f', 'name' VALUE 'Writing Local Admin Share', 'description' VALUE 'Aversaries may use to interact with a remote network share using Server Message Block (SMB).
This technique is used by post-exploitation frameworks.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0008'],
       'techniqueidlist' VALUE ARRAY['T1546.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4aafb0fa-bff5-4b9d-b99e-8093e659c65f', 'name' VALUE 'Writing Local Admin Share', 'description' VALUE 'Aversaries may use to interact with a remote network share using Server Message Block (SMB).
This technique is used by post-exploitation frameworks.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0008'],
       'techniqueidlist' VALUE ARRAY['T1546.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^11$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\\\127\.0\.0.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\admin\$\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bbfd974c-248e-4435-8de6-1e938c79c5c1', 'name' VALUE 'Rename Common File to DLL File', 'description' VALUE 'Detects cases in which a file gets renamed to .dll, which often happens to bypass perimeter protection'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Application installation'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.008']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bbfd974c-248e-4435-8de6-1e938c79c5c1', 'name' VALUE 'Rename Common File to DLL File', 'description' VALUE 'Detects cases in which a file gets renamed to .dll, which often happens to bypass perimeter protection'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Application installation'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1036.008']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^$') is not null) ) OR ( ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.tmp$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.dll\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\\squirreltemp\\temp.*$') is not null)  ) ) OR (`winlog`.`event_data`.`sourcefilename` is  null ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\tiworker\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) ) OR ( ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\wuauclt\.exe$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\\$windows\.\~bt\\sources\\.*$') is not null)  ) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e3f673b3-65d1-4d80-9146-466f8b63fa99', 'name' VALUE 'Suspicious Appended Extension', 'description' VALUE 'Detects file renames where the target filename uses an uncommon double extension. Could indicate potential ransomware activity renaming files and adding a custom extension to the encrypted files, such as ".jpg.crypted", ".docx.locky", etc.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Backup software'] ,
       'tacticidlist' VALUE ARRAY['TA0040'],
       'techniqueidlist' VALUE ARRAY['T1486']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e3f673b3-65d1-4d80-9146-466f8b63fa99', 'name' VALUE 'Suspicious Appended Extension', 'description' VALUE 'Detects file renames where the target filename uses an uncommon double extension. Could indicate potential ransomware activity renaming files and adding a custom extension to the encrypted files, such as ".jpg.crypted", ".docx.locky", etc.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Backup software'] ,
       'tacticidlist' VALUE ARRAY['TA0040'],
       'techniqueidlist' VALUE ARRAY['T1486']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.lnk$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.rtf$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.pst$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.docx$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.xlsx$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.jpg$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.jpeg$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.png$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`sourcefilename` as VARCHAR)), '^.*\.pdf$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.lnk\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.rtf\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.pst\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.docx\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xlsx\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.jpg\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.jpeg\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.png\..*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.pdf\..*$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.tmp$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.bak$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.old$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.orig$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.backup$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.temp$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.c\~$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\programdata\\anaconda3\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '75e508f7-932d-4ebc-af77-269237a84ce1', 'name' VALUE 'DLL Loaded From Suspicious Location Via Cmspt.EXE', 'description' VALUE 'Detects cmstp loading "dll" or "ocx" files from suspicious locations'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '75e508f7-932d-4ebc-af77-269237a84ce1', 'name' VALUE 'DLL Loaded From Suspicious Location Via Cmspt.EXE', 'description' VALUE 'Detects cmstp loading "dll" or "ocx" files from suspicious locations'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\perflogs\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\programdata\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\users\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windows\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*c:\\temp\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.ocx$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\cmstp\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6ec86d9e-912e-4726-91a2-209359b999b9', 'name' VALUE 'Amsi.DLL Loaded Via LOLBIN Process', 'description' VALUE 'Detects loading of "Amsi.dll" by a living of the land process. This could be an indication of a "PowerShell without PowerShell" attack'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6ec86d9e-912e-4726-91a2-209359b999b9', 'name' VALUE 'Amsi.DLL Loaded Via LOLBIN Process', 'description' VALUE 'Detects loading of "Amsi.dll" by a living of the land process. This could be an indication of a "PowerShell without PowerShell" attack'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\amsi\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\extexport\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\odbcconf\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\regsvr32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rundll32\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'facd1549-e416-48e0-b8c4-41d7215eedc8', 'name' VALUE 'Amsi.DLL Load By Uncommon Process', 'description' VALUE 'Detects loading of Amsi.dll by uncommon processes'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate third party apps installed in "ProgramData" and "AppData" might generate some false positives. Apply additional filters accordingly'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0040'],
       'techniqueidlist' VALUE ARRAY['T1490']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'facd1549-e416-48e0-b8c4-41d7215eedc8', 'name' VALUE 'Amsi.DLL Load By Uncommon Process', 'description' VALUE 'Detects loading of Amsi.dll by uncommon processes'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate third party apps installed in "ProgramData" and "AppData" might generate some false positives. Apply additional filters accordingly'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0040'],
       'techniqueidlist' VALUE ARRAY['T1490']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\amsi\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\ngentask\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\microsoft\.net\\framework\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\microsoft\.net\\framework64\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\explorer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\sysmon64\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) ) OR (`process`.`executable` is  null ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msmpeng\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\programdata\\microsoft\\windows\ defender\\platform\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '50f852e6-af22-4c78-9ede-42ef36aa3453', 'name' VALUE 'Potential Azure Browser SSO Abuse', 'description' VALUE 'Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser.
An attacker can use this to authenticate to Azure AD in a browser as that user.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives are expected since this rules is only looking for the DLL load event. This rule is better used in correlation with related activity'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '50f852e6-af22-4c78-9ede-42ef36aa3453', 'name' VALUE 'Potential Azure Browser SSO Abuse', 'description' VALUE 'Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser.
An attacker can use this to authenticate to Azure AD in a browser as that user.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives are expected since this rules is only looking for the DLL load event. This rule is better used in correlation with related activity'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\microsoftaccounttokenprovider\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\backgroundtaskhost\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\ide\\devenv\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\microsoft\ visual\ studio\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\ visual\ studio\\.*$') is not null) ) OR ( ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\\edgewebview\\application\\.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\windowsapps\\microsoftedge\.exe$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\\edge\\application\\msedge\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\microsoft\\edge\\application\\msedge\.exe$') is not null)  ) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msedge\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msedgewebview2\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\\edgecore\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\microsoft\\edgecore\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\internet\ explorer\\iexplore\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\internet\ explorer\\iexplore\.exe$') is not null) ) OR (`process`.`executable` is  null ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\appdata\\local\\microsoft\\onedrive\\onedrive\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8cde342c-ba48-4b74-b615-172c330f2e93', 'name' VALUE 'Suspicious Renamed Comsvcs DLL Loaded By Rundll32', 'description' VALUE 'Detects rundll32 loading a renamed comsvcs.dll to dump process memory'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0006', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '8cde342c-ba48-4b74-b615-172c330f2e93', 'name' VALUE 'Suspicious Renamed Comsvcs DLL Loaded By Rundll32', 'description' VALUE 'Detects rundll32 loading a renamed comsvcs.dll to dump process memory'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0006', 'TA0005'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`hashes` as VARCHAR)), '^.*imphash=eed93054cb555f3de70eaa9787f32ebb.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`hashes` as VARCHAR)), '^.*imphash=5e0dbdec1fce52daae251a110b4f309d.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`hashes` as VARCHAR)), '^.*imphash=eadbccbb324829acb5f2bbe87e5549a8.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`hashes` as VARCHAR)), '^.*imphash=407ca0f7b523319d758a40d7c0193699.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`hashes` as VARCHAR)), '^.*imphash=281d618f4e6271e527e6386ea6f748de.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rundll32\.exe$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\comsvcs\.dll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9ae01559-cf7e-4f8e-8e14-4c290a1b4784', 'name' VALUE 'CredUI.DLL Loaded By Uncommon Process', 'description' VALUE 'Detects loading of "credui.dll" and related DLLs by an uncommon process. Attackers might leverage this DLL for potential use of "CredUIPromptForCredentials" or "CredUnPackAuthenticationBufferW".'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legitimate processes loading those DLLs in your environment.'] ,
       'tacticidlist' VALUE ARRAY['TA0006', 'TA0009'],
       'techniqueidlist' VALUE ARRAY['T1056.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9ae01559-cf7e-4f8e-8e14-4c290a1b4784', 'name' VALUE 'CredUI.DLL Loaded By Uncommon Process', 'description' VALUE 'Detects loading of "credui.dll" and related DLLs by an uncommon process. Attackers might leverage this DLL for potential use of "CredUIPromptForCredentials" or "CredUnPackAuthenticationBufferW".'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other legitimate processes loading those DLLs in your environment.'] ,
       'tacticidlist' VALUE ARRAY['TA0006', 'TA0009'],
       'techniqueidlist' VALUE ARRAY['T1056.002']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) ) AND ( ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\credui\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wincredui\.dll$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`pe`.`original_file_name` as VARCHAR)), '^credui\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`pe`.`original_file_name` as VARCHAR)), '^wincredui\.dll$') is not null)  ) ) )  and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\explorer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\immersivecontrolpanel\\systemsettings\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\regedit\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\appdata\\local\\microsoft\\onedrive\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\users\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\opera_autoupdate\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\procexp\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\appdata\\local\\microsoft\\teams\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\teams\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\users\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0e277796-5f23-4e49-a490-483131d4f6e1', 'name' VALUE 'Load Of Dbghelp/Dbgcore DLL From Suspicious Process', 'description' VALUE 'Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes.
Tools like ProcessHacker and some attacker tradecraft use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll.
As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attackers machine.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0e277796-5f23-4e49-a490-483131d4f6e1', 'name' VALUE 'Load Of Dbghelp/Dbgcore DLL From Suspicious Process', 'description' VALUE 'Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes.
Tools like ProcessHacker and some attacker tradecraft use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll.
As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attackers machine.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dbghelp\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dbgcore\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msbuild\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\cmd\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rundll32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\monitoringhost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wmic\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\bash\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wscript\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\cscript\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mshta\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\dnx\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\regsvcs\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\sc\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\scriptrunner\.exe$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`commandline` as VARCHAR)), '^.*\\tiworker\.exe\ \-embedding$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`commandline` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bdc64095-d59a-42a2-8588-71fd9c9d9abc', 'name' VALUE 'Suspicious Unsigned Dbghelp/Dbgcore DLL Loaded', 'description' VALUE 'Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes.
Tools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll.
As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attackers machine.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bdc64095-d59a-42a2-8588-71fd9c9d9abc', 'name' VALUE 'Suspicious Unsigned Dbghelp/Dbgcore DLL Loaded', 'description' VALUE 'Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes.
Tools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll.
As an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attackers machine.
'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dbghelp\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dbgcore\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`code_signature`.`signed` as VARCHAR)), '^false$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '84b0a8f3-680b-4096-a45b-e9a89221727c', 'name' VALUE 'PCRE.NET Package Image Load', 'description' VALUE 'Detects processes loading modules related to PCRE.NET package'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '84b0a8f3-680b-4096-a45b-e9a89221727c', 'name' VALUE 'PCRE.NET Package Image Load', 'description' VALUE 'Detects processes loading modules related to PCRE.NET package'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\temp\\ba9ea7344a4a5f591d6e5dc32a13494b\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ec8c4047-fad9-416a-8c81-0f479353d7f6', 'name' VALUE 'Diagnostic Library Sdiageng.DLL Loaded By Msdt.EXE', 'description' VALUE 'Detects both of CVE-2022-30190 (Follina) and DogWalk vulnerabilities exploiting msdt.exe binary to load the "sdiageng.dll" library'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1202']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ec8c4047-fad9-416a-8c81-0f479353d7f6', 'name' VALUE 'Diagnostic Library Sdiageng.DLL Loaded By Msdt.EXE', 'description' VALUE 'Detects both of CVE-2022-30190 (Follina) and DogWalk vulnerabilities exploiting msdt.exe binary to load the "sdiageng.dll" library'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'NA'],
       'techniqueidlist' VALUE ARRAY['T1202']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sdiageng\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msdt\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '666ecfc7-229d-42b8-821e-1a8f8cb7057c', 'name' VALUE 'System Drawing DLL Load', 'description' VALUE 'Detects processes loading "System.Drawing.ni.dll". This could be an indicator of potential Screen Capture.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives are very common from system and third party applications, activity needs to be investigated. This rule is best correlated with other events to increase the level of suspiciousness'] ,
       'tacticidlist' VALUE ARRAY['TA0009'],
       'techniqueidlist' VALUE ARRAY['T1113']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '666ecfc7-229d-42b8-821e-1a8f8cb7057c', 'name' VALUE 'System Drawing DLL Load', 'description' VALUE 'Detects processes loading "System.Drawing.ni.dll". This could be an indicator of potential Screen Capture.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives are very common from system and third party applications, activity needs to be investigated. This rule is best correlated with other events to increase the level of suspiciousness'] ,
       'tacticidlist' VALUE ARRAY['TA0009'],
       'techniqueidlist' VALUE ARRAY['T1113']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\system\.drawing\.ni\.dll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '092bc4b9-3d1d-43b4-a6b4-8c8acd83522f', 'name' VALUE 'PowerShell Core DLL Loaded By Non PowerShell Process', 'description' VALUE 'Detects loading of essential DLLs used by PowerShell, but not by the process powershell.exe. Detects behaviour similar to meterpreters "load powershell" extension.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Used by some .NET binaries, minimal on user workstation.', 'Used by Microsoft SQL Server Management Studio'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '092bc4b9-3d1d-43b4-a6b4-8c8acd83522f', 'name' VALUE 'PowerShell Core DLL Loaded By Non PowerShell Process', 'description' VALUE 'Detects loading of essential DLLs used by PowerShell, but not by the process powershell.exe. Detects behaviour similar to meterpreters "load powershell" extension.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Used by some .NET binaries, minimal on user workstation.', 'Used by Microsoft SQL Server Management Studio'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059.001']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) ) AND ( ( (REGEXP_EXTRACT(LOWER(cast(`file`.`pe`.`description` as VARCHAR)), '^system\.management\.automation$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`pe`.`original_file_name` as VARCHAR)), '^system\.management\.automation\.dll$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\system\.management\.automation\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\system\.management\.automation\.ni\.dll$') is not null)  ) ) )  and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\microsoft\.net\\framework\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\microsoft\.net\\framework64\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mscorsvw\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\powershell\\7\\pwsh\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\dsac\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\remotefxvgpudisablement\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\runscripthelper\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\sdiagnhost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\servermanager\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\syncappvpublishingserver\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\windowspowershell\\v1\.0\\powershell_ise\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\windowspowershell\\v1\.0\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\winrshost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\system32\\wsmprovhost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\windowspowershell\\v1\.0\\powershell_ise\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\windowspowershell\\v1\.0\\powershell\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\winrshost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\windows\\syswow64\\wsmprovhost\.exe$') is not null) ))  and not  ((`process`.`executable` is  null ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\citrix\\configsync\\configsyncrun\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\thor64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\thor\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\temp\\asgard2\-agent\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\ \(x86\)\\microsoft\ sql\ server\ management\ studio.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\microsoft\ sql\ server\ management\ studio.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\ide\\ssms\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\ \(x86\)\\microsoft\ sql\ server\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*:\\program\ files\\microsoft\ sql\ server\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\tools\\binn\\sqlps\.exe$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\ visual\ studio\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\microsoft\ visual\ studio\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e76c8240-d68f-4773-8880-5c6f63595aaf', 'name' VALUE 'Time Travel Debugging Utility Usage - Image', 'description' VALUE 'Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate usage by software developers/testers'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0006'],
       'techniqueidlist' VALUE ARRAY['T1218', 'T1003.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e76c8240-d68f-4773-8880-5c6f63595aaf', 'name' VALUE 'Time Travel Debugging Utility Usage - Image', 'description' VALUE 'Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate usage by software developers/testers'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0006'],
       'techniqueidlist' VALUE ARRAY['T1218', 'T1003.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\ttdrecord\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\ttdwriter\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\ttdloader\.dll$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '333cdbe8-27bb-4246-bf82-b41a0dca4b70', 'name' VALUE 'Suspicious Volume Shadow Copy VSS_PS.dll Load', 'description' VALUE 'Detects the image load of vss_ps.dll by uncommon executables'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0040'],
       'techniqueidlist' VALUE ARRAY['T1490']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '333cdbe8-27bb-4246-bf82-b41a0dca4b70', 'name' VALUE 'Suspicious Volume Shadow Copy VSS_PS.dll Load', 'description' VALUE 'Detects the image load of vss_ps.dll by uncommon executables'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0040'],
       'techniqueidlist' VALUE ARRAY['T1490']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vss_ps\.dll$') is not null) )and not  ((`process`.`executable` is  null ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\clussvc\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\dismhost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\dllhost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\inetsrv\\appcmd\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\inetsrv\\iissetup\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\msiexec\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rundll32\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\searchindexer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\srtasks\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\svchost\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\taskhostw\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\thor\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\thor64\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\tiworker\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\vssvc\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\wmiprvse\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\system32\\systempropertiesadvanced\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`commandline` as VARCHAR)), '^.*\\dismhost\.exe\ \{.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`commandline` as VARCHAR)), '^c:\\\$winreagent\\scratch\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '37774c23-25a1-4adb-bb6d-8bb9fd59c0f8', 'name' VALUE 'Suspicious Volume Shadow Copy Vssapi.dll Load', 'description' VALUE 'Detects the image load of VSS DLL by uncommon executables'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0040'],
       'techniqueidlist' VALUE ARRAY['T1490']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '37774c23-25a1-4adb-bb6d-8bb9fd59c0f8', 'name' VALUE 'Suspicious Volume Shadow Copy Vssapi.dll Load', 'description' VALUE 'Detects the image load of VSS DLL by uncommon executables'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0040'],
       'techniqueidlist' VALUE ARRAY['T1490']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vssapi\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\programdata\\package\ cache\\.*$') is not null) ) OR ( ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\explorer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\immersivecontrolpanel\\systemsettings\.exe$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\temp\\\{.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null)  ) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '48bfd177-7cf2-412b-ad77-baf923489e82', 'name' VALUE 'Suspicious Volume Shadow Copy Vsstrace.dll Load', 'description' VALUE 'Detects the image load of VSS DLL by uncommon executables'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0040'],
       'techniqueidlist' VALUE ARRAY['T1490']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '48bfd177-7cf2-412b-ad77-baf923489e82', 'name' VALUE 'Suspicious Volume Shadow Copy Vsstrace.dll Load', 'description' VALUE 'Detects the image load of VSS DLL by uncommon executables'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0040'],
       'techniqueidlist' VALUE ARRAY['T1490']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vsstrace\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null) ) OR ( ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\explorer\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\immersivecontrolpanel\\systemsettings\.exe$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\temp\\\{.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null)  ) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '49329257-089d-46e6-af37-4afce4290685', 'name' VALUE 'HackTool - SharpEvtMute DLL Load', 'description' VALUE 'Detects the load of EvtMuteHook.dll, a key component of SharpEvtHook, a tool that tampers with the Windows event logs'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other DLLs with the same Imphash'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '49329257-089d-46e6-af37-4afce4290685', 'name' VALUE 'HackTool - SharpEvtMute DLL Load', 'description' VALUE 'Detects the load of EvtMuteHook.dll, a key component of SharpEvtHook, a tool that tampers with the Windows event logs'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Other DLLs with the same Imphash'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1562.002']

  )) FROM EdrTable WHERE (((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) ) AND ( ( (REGEXP_EXTRACT(LOWER(cast(`winlog`.`event_data`.`hashes` as VARCHAR)), '^.*imphash=330768a4f172e10acb6287b87289d83b.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`hash`.`imphash` as VARCHAR)), '^330768a4f172e10acb6287b87289d83b$') is not null)  ) ) )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '75c505b1-711d-4f68-a357-8c3fe37dbf2d', 'name' VALUE 'HackTool - SILENTTRINITY Stager DLL Load', 'description' VALUE 'Detects SILENTTRINITY stager dll loading activity'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1071']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '75c505b1-711d-4f68-a357-8c3fe37dbf2d', 'name' VALUE 'HackTool - SILENTTRINITY Stager DLL Load', 'description' VALUE 'Detects SILENTTRINITY stager dll loading activity'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0011'],
       'techniqueidlist' VALUE ARRAY['T1071']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(LOWER(cast(`file`.`pe`.`description` as VARCHAR)), '^.*st2stager.*$') is not null) AND (REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'critical'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f354eba5-623b-450f-b073-0b5b2773b6aa', 'name' VALUE 'Potential DCOM InternetExplorer.Application DLL Hijack - Image Load', 'description' VALUE 'Detects potential DLL hijack of "iertutil.dll" found in the DCOM InternetExplorer.Application Class'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0008'],
       'techniqueidlist' VALUE ARRAY['T1021.002', 'T1021.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'critical'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f354eba5-623b-450f-b073-0b5b2773b6aa', 'name' VALUE 'Potential DCOM InternetExplorer.Application DLL Hijack - Image Load', 'description' VALUE 'Detects potential DLL hijack of "iertutil.dll" found in the DCOM InternetExplorer.Application Class'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0008'],
       'techniqueidlist' VALUE ARRAY['T1021.002', 'T1021.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\internet\ explorer\\iertutil\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\internet\ explorer\\iexplore\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '857c8db3-c89b-42fb-882b-f681c7cf4da2', 'name' VALUE 'Unsigned Image Loaded Into LSASS Process', 'description' VALUE 'Loading unsigned image (DLL, EXE) into LSASS process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Valid user connecting using RDP'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '857c8db3-c89b-42fb-882b-f681c7cf4da2', 'name' VALUE 'Unsigned Image Loaded Into LSASS Process', 'description' VALUE 'Loading unsigned image (DLL, EXE) into LSASS process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Valid user connecting using RDP'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1003.001']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\lsass\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`code_signature`.`signed` as VARCHAR)), '^false$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ff0f2b05-09db-4095-b96d-1b75ca24894a', 'name' VALUE 'DotNET Assembly DLL Loaded Via Office Application', 'description' VALUE 'Detects any assembly DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ff0f2b05-09db-4095-b96d-1b75ca24894a', 'name' VALUE 'DotNET Assembly DLL Loaded Via Office Application', 'description' VALUE 'Detects any assembly DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\assembly\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mspub\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenote\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenoteim\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd13c43f0-f66b-4279-8b2c-5912077c1780', 'name' VALUE 'CLR DLL Loaded Via Office Applications', 'description' VALUE 'Detects CLR DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'd13c43f0-f66b-4279-8b2c-5912077c1780', 'name' VALUE 'CLR DLL Loaded Via Office Applications', 'description' VALUE 'Detects CLR DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\clr\.dll.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mspub\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenote\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenoteim\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '90217a70-13fc-48e4-b3db-0d836c5824ac', 'name' VALUE 'GAC DLL Loaded Via Office Applications', 'description' VALUE 'Detects any GAC DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate macro usage. Add the appropriate filter according to your environment'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '90217a70-13fc-48e4-b3db-0d836c5824ac', 'name' VALUE 'GAC DLL Loaded Via Office Applications', 'description' VALUE 'Detects any GAC DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate macro usage. Add the appropriate filter according to your environment'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\microsoft\.net\\assembly\\gac_msil.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mspub\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenote\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenoteim\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a2a3b925-7bb0-433b-b508-db9003263cc4', 'name' VALUE 'Active Directory Parsing DLL Loaded Via Office Application', 'description' VALUE 'Detects DSParse DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'a2a3b925-7bb0-433b-b508-db9003263cc4', 'name' VALUE 'Active Directory Parsing DLL Loaded Via Office Application', 'description' VALUE 'Detects DSParse DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dsparse\.dll.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mspub\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenote\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenoteim\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'af4c4609-5755-42fe-8075-4effb49f5d44', 'name' VALUE 'Microsoft Excel Add-In Loaded From Uncommon Location', 'description' VALUE 'Detects Microsoft Excel loading an Add-In (.xll) file from an uncommon location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some tuning might be required to allow or remove certain locations used by the rule if you consider them as safe locations'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'af4c4609-5755-42fe-8075-4effb49f5d44', 'name' VALUE 'Microsoft Excel Add-In Loaded From Uncommon Location', 'description' VALUE 'Detects Microsoft Excel loading an Add-In (.xll) file from an uncommon location'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Some tuning might be required to allow or remove certain locations used by the rule if you consider them as safe locations'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\desktop\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\downloads\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\perflogs\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\temp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windows\\tasks\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\.xll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7417e29e-c2e7-4cf6-a2e8-767228c64837', 'name' VALUE 'Active Directory Kerberos DLL Loaded Via Office Application', 'description' VALUE 'Detects Kerberos DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '7417e29e-c2e7-4cf6-a2e8-767228c64837', 'name' VALUE 'Active Directory Kerberos DLL Loaded Via Office Application', 'description' VALUE 'Detects Kerberos DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\kerberos\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mspub\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenote\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenoteim\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9a0b8719-cd3c-4f0a-90de-765a4cb3f5ed', 'name' VALUE 'Microsoft VBA For Outlook Addin Loaded Via Outlook', 'description' VALUE 'Detects outlvba (Microsoft VBA for Outlook Addin) DLL being loaded by the outlook process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate macro usage. Add the appropriate filter according to your environment'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9a0b8719-cd3c-4f0a-90de-765a4cb3f5ed', 'name' VALUE 'Microsoft VBA For Outlook Addin Loaded Via Outlook', 'description' VALUE 'Detects outlvba (Microsoft VBA for Outlook Addin) DLL being loaded by the outlook process'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate macro usage. Add the appropriate filter according to your environment'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^\\outlvba\.dll.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bb2ba6fb-95d4-4a25-89fc-30bb736c021a', 'name' VALUE 'PowerShell Core DLL Loaded Via Office Application', 'description' VALUE 'Detects PowerShell core DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'bb2ba6fb-95d4-4a25-89fc-30bb736c021a', 'name' VALUE 'PowerShell Core DLL Loaded Via Office Application', 'description' VALUE 'Detects PowerShell core DLL being loaded by an Office Product'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['NA']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\system\.management\.automation\.dll.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\system\.management\.automation\.ni\.dll.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mspub\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenote\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenoteim\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e6ce8457-68b1-485b-9bdd-3c2b5d679aa9', 'name' VALUE 'VBA DLL Loaded Via Office Application', 'description' VALUE 'Detects VB DLLs loaded by an office application. Which could indicate the presence of VBA Macros.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate macro usage. Add the appropriate filter according to your environment'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'e6ce8457-68b1-485b-9bdd-3c2b5d679aa9', 'name' VALUE 'VBA DLL Loaded Via Office Application', 'description' VALUE 'Detects VB DLLs loaded by an office application. Which could indicate the presence of VBA Macros.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate macro usage. Add the appropriate filter according to your environment'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vbe7\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vbeui\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vbe7intl\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\excel\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\mspub\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenote\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\onenoteim\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\outlook\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\powerpnt\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\winword\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f40017b3-cb2e-4335-ab5d-3babf679c1de', 'name' VALUE 'Remote DLL Load Via Rundll32.EXE', 'description' VALUE 'Detects a remote DLL load event via "rundll32.exe".'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'f40017b3-cb2e-4335-ab5d-3babf679c1de', 'name' VALUE 'Remote DLL Load Via Rundll32.EXE', 'description' VALUE 'Detects a remote DLL load event via "rundll32.exe".'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1204.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^\\\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\rundll32\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b439f47d-ef52-4b29-9a2f-57d8a96cb6b8', 'name' VALUE 'WMI ActiveScriptEventConsumers Activity Via Scrcons.EXE DLL Load', 'description' VALUE 'Detects signs of the WMI script host process "scrcons.exe" loading scripting DLLs which could indicates WMI ActiveScriptEventConsumers EventConsumers activity.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate event consumers', 'Dell computers on some versions register an event consumer that is known to cause false positives when brightness is changed by the corresponding keyboard button'] ,
       'tacticidlist' VALUE ARRAY['TA0008', 'TA0004', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.003']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b439f47d-ef52-4b29-9a2f-57d8a96cb6b8', 'name' VALUE 'WMI ActiveScriptEventConsumers Activity Via Scrcons.EXE DLL Load', 'description' VALUE 'Detects signs of the WMI script host process "scrcons.exe" loading scripting DLLs which could indicates WMI ActiveScriptEventConsumers EventConsumers activity.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate event consumers', 'Dell computers on some versions register an event consumer that is known to cause false positives when brightness is changed by the corresponding keyboard button'] ,
       'tacticidlist' VALUE ARRAY['TA0008', 'TA0004', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1546.003']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vbscript\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wbemdisp\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wshom\.ocx$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\scrrun\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\scrcons\.exe$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4f6edb78-5c21-42ab-a558-fd2a6fc1fd57', 'name' VALUE 'Potential 7za.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "7za.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate third party application located in "AppData" may leverage this DLL to offer 7z compression functionality and may generate false positives. Apply additional filters as needed.'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'info'),
       'rule' VALUE JSON_OBJECT('id' VALUE '4f6edb78-5c21-42ab-a558-fd2a6fc1fd57', 'name' VALUE 'Potential 7za.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "7za.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate third party application located in "AppData" may leverage this DLL to offer 7z compression functionality and may generate false positives. Apply additional filters as needed.'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\7za\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '799a5f48-0ac1-4e0f-9152-71d137d48c2a', 'name' VALUE 'Abusable DLL Potential Sideloading From Suspicious Location', 'description' VALUE 'Detects potential DLL sideloading of DLLs that are known to be abused from suspicious locations'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '799a5f48-0ac1-4e0f-9152-71d137d48c2a', 'name' VALUE 'Abusable DLL Potential Sideloading From Suspicious Location', 'description' VALUE 'Detects potential DLL sideloading of DLLs that are known to be abused from suspicious locations'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0002'],
       'techniqueidlist' VALUE ARRAY['T1059']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\coreclr\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\facesdk\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\hpcustpartui\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\libcef\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\zipdll\.dll$') is not null) )and  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\perflogs\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\users\\public\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\temporary\ internet.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\windows\\temp\\.*$') is not null) ) OR ( ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\users\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\favorites\\.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\users\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\favourites\\.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\users\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\contacts\\.*$') is not null)  )  OR  ( (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*:\\users\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\pictures\\.*$') is not null)  ) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '552b6b65-df37-4d3e-a258-f2fc4771ae54', 'name' VALUE 'Potential Antivirus Software DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of DLLs that are part of antivirus software suchas McAfee, Symantec...etc'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Applications that load the same dlls mentioned in the detection section. Investigate them and filter them out if a lot FPs are caused.', 'Dell SARemediation plugin folder (C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll) is known to contain the log.dll file.', 'The Canon MyPrinter folder C:\\Program Files\\Canon\\MyPrinter\\ is known to contain the log.dll file'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '552b6b65-df37-4d3e-a258-f2fc4771ae54', 'name' VALUE 'Potential Antivirus Software DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of DLLs that are part of antivirus software suchas McAfee, Symantec...etc'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Applications that load the same dlls mentioned in the detection section. Investigate them and filter them out if a lot FPs are caused.', 'Dell SARemediation plugin folder (C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll) is known to contain the log.dll file.', 'The Canon MyPrinter folder C:\\Program Files\\Canon\\MyPrinter\\ is known to contain the log.dll file'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) )and ( (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\log\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\bitdefender\ antivirus\ free\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\bitdefender\ antivirus\ free\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\canon\\myprinter\\.*$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\dell\\saremediation\\audit\\telemetryutility\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\dell\\saremediation\\plugin\\log\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\dell\\saremediation\\audit\\log\.dll$') is not null) ))  )  or (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\qrt\.dll$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\f\-secure\\anti\-virus\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\f\-secure\\anti\-virus\\.*$') is not null) ))  or (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\ashldres\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\lockdown\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vsodscpl\.dll$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\mcafee\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\mcafee\\.*$') is not null) ))  or (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\vftrace\.dll$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\cyberark\\endpoint\ privilege\ manager\\agent\\x32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\cyberark\\endpoint\ privilege\ manager\\agent\\x32\\.*$') is not null) ))  or (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wsc\.dll$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\avast\ software\\avast\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\avast\ software\\avast\\.*$') is not null) ))  or (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\tmdbglog\.dll$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\trend\ micro\\titanium\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\trend\ micro\\titanium\\.*$') is not null) ))  or (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dlpprem32\.dll$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\eset.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\eset.*$') is not null) ))   )  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ee6cea48-c5b6-4304-a332-10fc6446f484', 'name' VALUE 'Potential appverifUI.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "appverifUI.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'ee6cea48-c5b6-4304-a332-10fc6446f484', 'name' VALUE 'Potential appverifUI.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "appverifUI.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appverifui\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\syswow64\\appverif\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\windows\\system32\\appverif\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '90ae0469-0cee-4509-b67f-e5efcef040f7', 'name' VALUE 'Aruba Network Service Potential DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading activity via the Aruba Networks Virtual Intranet Access "arubanetsvc.exe" process using DLL Search Order Hijacking'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0004', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '90ae0469-0cee-4509-b67f-e5efcef040f7', 'name' VALUE 'Aruba Network Service Potential DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading activity via the Aruba Networks Virtual Intranet Access "arubanetsvc.exe" process using DLL Search Order Hijacking'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0004', 'TA0003'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wtsapi32\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\msvcr100\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\msvcp100\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dbghelp\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dbgcore\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wininet\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\iphlpapi\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\version\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\cryptsp\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\cryptbase\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\wldp\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\profapi\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\sspicli\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\winsta\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dpapi\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\arubanetsvc\.exe$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '952ed57c-8f99-453d-aee0-53a49c22f95d', 'name' VALUE 'Potential AVKkid.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "AVKkid.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '952ed57c-8f99-453d-aee0-53a49c22f95d', 'name' VALUE 'Potential AVKkid.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "AVKkid.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\avkkid\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\g\ data\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\g\ data\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*c:\\program\ files\ \(x86\)\\g\ data\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*c:\\program\ files\\g\ data\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\avkkid\.exe$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1fbc0671-5596-4e17-8682-f020a0b995dc', 'name' VALUE 'Potential CCleanerDU.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "CCleanerDU.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives could occur from other custom installation paths. Apply additional filters accordingly.'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '1fbc0671-5596-4e17-8682-f020a0b995dc', 'name' VALUE 'Potential CCleanerDU.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "CCleanerDU.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives could occur from other custom installation paths. Apply additional filters accordingly.'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\ccleanerdu\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\ccleaner\.exe$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\ccleaner64\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\ccleaner\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\ccleaner\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3735d5ac-d770-4da0-99ff-156b180bc600', 'name' VALUE 'Potential CCleanerReactivator.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "CCleanerReactivator.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives could occur from other custom installation paths. Apply additional filters accordingly.'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '3735d5ac-d770-4da0-99ff-156b180bc600', 'name' VALUE 'Potential CCleanerReactivator.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "CCleanerReactivator.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['False positives could occur from other custom installation paths. Apply additional filters accordingly.'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\ccleanerreactivator\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\ccleanerreactivator\.exe$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\\ccleaner\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\ccleaner\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '72ca7c75-bf85-45cd-aca7-255d360e423c', 'name' VALUE 'Potential Chrome Frame Helper DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "chrome_frame_helper.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '72ca7c75-bf85-45cd-aca7-255d360e423c', 'name' VALUE 'Potential Chrome Frame Helper DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "chrome_frame_helper.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\chrome_frame_helper\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\google\\chrome\\application\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\google\\chrome\\application\\.*$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\appdata\\local\\google\\chrome\\application\\.*$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'caa02837-f659-466f-bca6-48bde2826ab4', 'name' VALUE 'Potential DLL Sideloading Via ClassicExplorer32.dll', 'description' VALUE 'Detects potential DLL sideloading using ClassicExplorer32.dll from the Classic Shell software'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'caa02837-f659-466f-bca6-48bde2826ab4', 'name' VALUE 'Potential DLL Sideloading Via ClassicExplorer32.dll', 'description' VALUE 'Detects potential DLL sideloading using ClassicExplorer32.dll from the Classic Shell software'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\classicexplorer32\.dll$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\classic\ shell\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6360757a-d460-456c-8b13-74cf0e60cceb', 'name' VALUE 'Potential DLL Sideloading Via comctl32.dll', 'description' VALUE 'Detects potential DLL sideloading using comctl32.dll to obtain system privileges'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6360757a-d460-456c-8b13-74cf0e60cceb', 'name' VALUE 'Potential DLL Sideloading Via comctl32.dll', 'description' VALUE 'Detects potential DLL sideloading using comctl32.dll to obtain system privileges'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\comctl32\.dll$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\logonui\.exe\.local\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\werfault\.exe\.local\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\consent\.exe\.local\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\narrator\.exe\.local\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\wermgr\.exe\.local\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0fa66f66-e3f6-4a9c-93f8-4f2610b00171', 'name' VALUE 'Potential DLL Sideloading Using Coregen.exe', 'description' VALUE 'Detect usage of DLL "coregen.exe" (Microsoft CoreCLR Native Image Generator) binary to sideload arbitrary DLLs.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218', 'T1055']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '0fa66f66-e3f6-4a9c-93f8-4f2610b00171', 'name' VALUE 'Potential DLL Sideloading Using Coregen.exe', 'description' VALUE 'Detect usage of DLL "coregen.exe" (Microsoft CoreCLR Native Image Generator) binary to sideload arbitrary DLLs.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unknown'] ,
       'tacticidlist' VALUE ARRAY['TA0005'],
       'techniqueidlist' VALUE ARRAY['T1218', 'T1055']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\coregen\.exe$') is not null) )and not ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\microsoft\ silverlight\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\microsoft\ silverlight\\.*$') is not null) );
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9ca2bf31-0570-44d8-a543-534c47c33ed7', 'name' VALUE 'Potential DLL Sideloading Of DBGCORE.DLL', 'description' VALUE 'Detects DLL sideloading of "dbgcore.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate applications loading their own versions of the DLL mentioned in this rule'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '9ca2bf31-0570-44d8-a543-534c47c33ed7', 'name' VALUE 'Potential DLL Sideloading Of DBGCORE.DLL', 'description' VALUE 'Detects DLL sideloading of "dbgcore.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate applications loading their own versions of the DLL mentioned in this rule'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dbgcore\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\softwaredistribution\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\systemtemp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\steam\\bin\\cef\\cef\.win7x64\\dbgcore\.dll$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6414b5cd-b19d-447e-bb5e-9f03940b5784', 'name' VALUE 'Potential DLL Sideloading Of DBGHELP.DLL', 'description' VALUE 'Detects DLL sideloading of "dbghelp.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate applications loading their own versions of the DLL mentioned in this rule'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '6414b5cd-b19d-447e-bb5e-9f03940b5784', 'name' VALUE 'Potential DLL Sideloading Of DBGHELP.DLL', 'description' VALUE 'Detects DLL sideloading of "dbghelp.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Legitimate applications loading their own versions of the DLL mentioned in this rule'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0003', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\dbghelp\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\ \(x86\)\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\softwaredistribution\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\system32\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\systemtemp\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\syswow64\\.*$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\windows\\winsxs\\.*$') is not null) ))  and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\anaconda3\\lib\\site\-packages\\vtrace\\platforms\\windll\\amd64\\dbghelp\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\anaconda3\\lib\\site\-packages\\vtrace\\platforms\\windll\\i386\\dbghelp\.dll$') is not null) ) OR ((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\epic\ games\\launcher\\engine\\binaries\\thirdparty\\dbghelp\\dbghelp\.dll$') is not null OR REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\epic\ games\\magiclegends\\x86\\dbghelp\.dll$') is not null) ))  ;
 insert into FlinkOut SELECT 
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'edd3ddc3-386f-4ba5-9ada-4376b2cfa7b5', 'name' VALUE 'Potential EACore.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "EACore.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('code' VALUE `event`.`code`, 'type' VALUE `event`.`type`, 'category' VALUE `event`.`category`, 'action' VALUE `event`.`action`, 'channel' VALUE `event`.`channel`),'host' VALUE JSON_OBJECT ('name' VALUE `host`.`name`),'user' VALUE JSON_OBJECT ('name' VALUE `user`.`name`, 'domain' VALUE `user`.`domain`),'process' VALUE JSON_OBJECT ('name' VALUE `process`.`name`, 'parent' VALUE  JSON_OBJECT ('name' VALUE `process`.`parent`.`name`, 'executable' VALUE `process`.`parent`.`executable`, 'command_line' VALUE `process`.`parent`.`command_line`), 'executable' VALUE `process`.`executable`, 'command_line' VALUE `process`.`command_line`, 'working_directory' VALUE `process`.`working_directory`, 'pe' VALUE  JSON_OBJECT ('original_file_name' VALUE `process`.`pe`.`original_file_name`, 'description' VALUE `process`.`pe`.`description`, 'company' VALUE `process`.`pe`.`company`, 'product' VALUE `process`.`pe`.`product`), 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `process`.`hash`.`sha256`, 'imphash' VALUE `process`.`hash`.`imphash`)),'file' VALUE JSON_OBJECT ('name' VALUE `file`.`name`, 'path' VALUE `file`.`path`, 'hash' VALUE  JSON_OBJECT ('sha256' VALUE `file`.`hash`.`sha256`, 'imphash' VALUE `file`.`hash`.`imphash`)),'registry' VALUE JSON_OBJECT ('path' VALUE `registry`.`path`, 'value' VALUE `registry`.`value`),'dns' VALUE JSON_OBJECT ('question' VALUE  JSON_OBJECT ('name' VALUE `dns`.`question`.`name`)),'source' VALUE JSON_OBJECT ('domain' VALUE `source`.`domain`, 'ip' VALUE `source`.`ip`, 'port' VALUE `source`.`port`),'destination' VALUE JSON_OBJECT ('domain' VALUE `destination`.`domain`, 'ip' VALUE `destination`.`ip`, 'port' VALUE `destination`.`port`),'winlog' VALUE JSON_OBJECT ('targetimage' VALUE `winlog`.`targetimage`, 'grantedaccess' VALUE `winlog`.`grantedaccess`, 'eventtype' VALUE `winlog`.`eventtype`, 'initiated' VALUE `winlog`.`initiated`, 'user' VALUE `winlog`.`user`, 'state' VALUE `winlog`.`state`, 'integritylevel' VALUE `winlog`.`integritylevel`, 'eventnamespace' VALUE `winlog`.`eventnamespace`, 'name' VALUE `winlog`.`name`, 'operation' VALUE `winlog`.`operation`, 'consumer' VALUE `winlog`.`consumer`, 'filter' VALUE `winlog`.`filter`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'high'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'edd3ddc3-386f-4ba5-9ada-4376b2cfa7b5', 'name' VALUE 'Potential EACore.DLL Sideloading', 'description' VALUE 'Detects potential DLL sideloading of "EACore.dll"'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['Unlikely'] ,
       'tacticidlist' VALUE ARRAY['TA0005', 'TA0004'],
       'techniqueidlist' VALUE ARRAY['T1574.001', 'T1574.002']

  )) FROM EdrTable WHERE ((REGEXP_EXTRACT(cast(`event`.`code` as VARCHAR), '^7$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^.*\\eacore\.dll$') is not null) )and not  (((REGEXP_EXTRACT(LOWER(cast(`file`.`path` as VARCHAR)), '^c:\\program\ files\\electronic\ arts\\ea\ desktop\\.*$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*c:\\program\ files\\electronic\ arts\\ea\ desktop\\.*$') is not null AND REGEXP_EXTRACT(LOWER(cast(`process`.`executable` as VARCHAR)), '^.*\\eacoreserver\.exe.*$') is not null) ))  ;

	
END;
