SET 'execution.checkpointing.interval' = '1min';
SET pipeline.name ='3c36bc68_cloud_azure_batch1';
SET yarn.application.queue=root;
DROP TABLE IF EXISTS CloudAzureTable;
Create Temporary Table CloudAzureTable(
`organization` row(`id`  varchar,
                   `name` varchar),
`azure` row(`correlation_id`  varchar,
            `auditlogs` row(`properties` row(`loggedbyservice`  varchar)),
            `signinlogs` row(`properties` row(`state` varchar,
                                              `usertype` varchar,
                                              `operationname` varchar,
                                              `identity` varchar,
                                              `additional_details` varchar)),
            `tenant_id`  varchar),
`package` row(`description`  varchar),
`user` row(`email`  varchar,
          `full_name`  varchar,
           `name`  varchar,
           `fullname`  varchar,
           `id`  varchar),
`user_agent` row(`original`  varchar),
`agent` row(`type`  varchar),
`client` row(`port`  int),
`destination` row(`as` row(`organization` row(`name`  varchar)),
                  `geo` row(`city_name`  varchar,
                            `continent_code`  varchar,
                            `country_code`  varchar,
                            `country_name`  varchar,
                            `location` row(`lat`  double,
                                           `lon`  double),
                            `region_name`  varchar),
                  `locality`  varchar,
                  `user` row(`email`  varchar,
                             `id`  varchar)),
`error` row(`code`  varchar),
`event` row(`action`  varchar,
            `category`  array<varchar>,
            `dataset`  varchar,
            `id`  varchar,
            `created`  varchar,
            `ingested` varchar,
            `kind`  varchar,
            `original` string,
            `module`  varchar,
            `provider` varchar,
            `description` varchar,
            `outcome`  varchar,
            `reason`  varchar,
            `severity`  varchar,
            `type`  array<varchar>),
`file` row(`group`  varchar,
           `directory`  varchar,
           `extension`  varchar,
           `inode`  int,
           `mtime`  varchar,
           `name`  varchar,
           `owner`  varchar),
`group` row(`name`  varchar),
`host` row(`os` row(`name`  varchar,
                    `version`  varchar)),
`log` row(`level`  varchar,
          `type`  varchar),
`message`  string,
`network` row(`type`  varchar),
`observer` row(`type`  varchar),
`process` row(`name`  varchar),
`related` row(`hash`  array<varchar>,
              `hosts`  array<varchar>,
              `ip`  array<varchar>,
              `user`  array<varchar>),
`rule` row(`category`  varchar,
           `description`  varchar,
           `id`  varchar,
           `name`  varchar,
           `reference`  varchar,
           `ruleset`  varchar,
           `version`  varchar),
`sensor` row(`id`  varchar),
`server` row(`ip`  varchar),
`service` row(`id`  varchar,
              `name`  varchar,
              `status`  varchar),
`source` row(`ip`  varchar,
             `user` row(`email`  varchar),
             `as` row(`number`  varchar,
                      `organization` row(`name`  varchar)),
             `geo` row(`city_name`  varchar,
                       `continent_code`  varchar,
                       `country_code`  varchar,
                       `country_name`  varchar,
                       `location` row(`lat`  double,
                                      `lon`  double),
                       `region_name`  varchar),
             `locality`  varchar),
`threat` row(`technique` row(`id`  varchar)),
`threatintel` row(`days`  int,
                  `entity`  varchar,
                  `event_data`  varchar,
                  `lookup`  varchar,
                  `malware` row(`malware`  varchar,
                                `timestamp`  timestamp),
                  `severity`  varchar,
                  `tags`  varchar,
                  `white_list`  varchar),
`url` row(`original`  varchar),
`records` row(`properties` row(`status` row(`failurereason` varchar)),
              `category` varchar),
`o365` row(`audit` row(`logonerror` varchar,
                       `event` row(`category` varchar),
                       `actoripaddress` varchar)),
`uuid`  varchar,
`source_data` string,
`ts`  AS CURRENT_ROW_TIMESTAMP(),
 WATERMARK FOR ts AS ts - INTERVAL '5' SECOND)
WITH (
  'connector' = 'kafka',
  'topic' = 'cloud-azure',
  'properties.bootstrap.servers' = '10.0.132.234:9092,10.0.22.60:9092,10.0.43.247:9092',
  'properties.group.id' = '3c36bc68_cloud_azure_batch01',
  'scan.startup.mode' = 'latest-offset',
  'format' = 'json',
 'json.fail-on-missing-field' = 'false',
 'json.ignore-parse-errors' = 'true'
);

CREATE TABLE default_catalog.default_database.FlinkOut (
  `message` STRING
) WITH (
  'connector' = 'kafka',
  'topic' = 'ams_alert_in',
  'properties.bootstrap.servers' = '10.0.132.234:9092,10.0.22.60:9092,10.0.43.247:9092',
  'properties.group.id' = '3c36bc68_cloud_azure_batch01',
  'scan.startup.mode' = 'earliest-offset',
  'format' = 'raw'
);

ADD jar '/home/ec2-user/flink/flink-1.18.0/bin/jars/flink-sql-connector-kafka-3.0.2-1.18.jar';

EXECUTE STATEMENT SET
BEGIN
insert into FlinkOut SELECT
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('dataset' VALUE  `event`.`dataset`, 'module' VALUE  `event`.`module`, 'provider' VALUE  `event`.`provider`, 'outcome' VALUE  `event`.`outcome`, 'type' VALUE  `event`.`type`, 'action' VALUE  `event`.`action`, 'kind' VALUE  `event`.`kind`, 'description' VALUE  `event`.`description`, 'id' VALUE  `event`.`id`),'source' VALUE JSON_OBJECT ('ip' VALUE  `source`.`ip`, 'port' VALUE  `source`.`port`),'destination' VALUE JSON_OBJECT ('ip' VALUE  `destination`.`ip`, 'port' VALUE  `destination`.`port`),'cloud' VALUE JSON_OBJECT ('provider' VALUE  `cloud`.`provider`),'service' VALUE JSON_OBJECT ('name' VALUE  `service`.`name`),'threatintel' VALUE JSON_OBJECT ('lookup' VALUE  `threatintel`.`lookup`),'user_agent' VALUE JSON_OBJECT ('original' VALUE  `user_agent`.`original`),'user' VALUE JSON_OBJECT ('email' VALUE  `user`.`email`, 'name' VALUE  `user`.`name`, 'id' VALUE  `user`.`id`),'host' VALUE JSON_OBJECT ('id' VALUE  `host`.`id`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '14b9f789-667e-4cb2-8a07-6ab33060859f', 'name' VALUE 'Microsoft_O365 Excessive Single Sign-On Logon Errors', 'description' VALUE 'Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.  Identifies accounts with a high number of single sign-on (SSO) logon errors. Excessive logon errors may indicate an attempt to brute force a password or SSO token.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['NA'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1110']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('dataset' VALUE  `event`.`dataset`, 'module' VALUE  `event`.`module`, 'provider' VALUE  `event`.`provider`, 'outcome' VALUE  `event`.`outcome`, 'type' VALUE  `event`.`type`, 'action' VALUE  `event`.`action`, 'kind' VALUE  `event`.`kind`, 'description' VALUE  `event`.`description`, 'id' VALUE  `event`.`id`),'source' VALUE JSON_OBJECT ('ip' VALUE  `source`.`ip`, 'port' VALUE  `source`.`port`),'destination' VALUE JSON_OBJECT ('ip' VALUE  `destination`.`ip`, 'port' VALUE  `destination`.`port`),'cloud' VALUE JSON_OBJECT ('provider' VALUE  `cloud`.`provider`),'service' VALUE JSON_OBJECT ('name' VALUE  `service`.`name`),'threatintel' VALUE JSON_OBJECT ('lookup' VALUE  `threatintel`.`lookup`),'user_agent' VALUE JSON_OBJECT ('original' VALUE  `user_agent`.`original`),'user' VALUE JSON_OBJECT ('email' VALUE  `user`.`email`, 'name' VALUE  `user`.`name`, 'id' VALUE  `user`.`id`),'host' VALUE JSON_OBJECT ('id' VALUE  `host`.`id`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE '14b9f789-667e-4cb2-8a07-6ab33060859f', 'name' VALUE 'Microsoft_O365 Excessive Single Sign-On Logon Errors', 'description' VALUE 'Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.  Identifies accounts with a high number of single sign-on (SSO) logon errors. Excessive logon errors may indicate an attempt to brute force a password or SSO token.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['NA'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1110']

  )) FROM Cloud_AzureTable WHERE (`organization`.`id`='3c36bc68') AND ((REGEXP_EXTRACT(LOWER(cast(`event`.`provider` as VARCHAR)), '^azureactivedirectory$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`o365audit`.`logonerror` as VARCHAR)), '^ssoartifactinvalidorexpired$') is not null) );
insert into FlinkOut SELECT
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('dataset' VALUE  `event`.`dataset`, 'module' VALUE  `event`.`module`, 'provider' VALUE  `event`.`provider`, 'outcome' VALUE  `event`.`outcome`, 'type' VALUE  `event`.`type`, 'action' VALUE  `event`.`action`, 'kind' VALUE  `event`.`kind`, 'description' VALUE  `event`.`description`, 'id' VALUE  `event`.`id`),'source' VALUE JSON_OBJECT ('ip' VALUE  `source`.`ip`, 'port' VALUE  `source`.`port`),'destination' VALUE JSON_OBJECT ('ip' VALUE  `destination`.`ip`, 'port' VALUE  `destination`.`port`),'cloud' VALUE JSON_OBJECT ('provider' VALUE  `cloud`.`provider`),'service' VALUE JSON_OBJECT ('name' VALUE  `service`.`name`),'threatintel' VALUE JSON_OBJECT ('lookup' VALUE  `threatintel`.`lookup`),'user_agent' VALUE JSON_OBJECT ('original' VALUE  `user_agent`.`original`),'user' VALUE JSON_OBJECT ('email' VALUE  `user`.`email`, 'name' VALUE  `user`.`name`, 'id' VALUE  `user`.`id`),'host' VALUE JSON_OBJECT ('id' VALUE  `host`.`id`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b80cd0e9-5fc0-4b22-82fe-c25f09cff598', 'name' VALUE 'Microsoft_O365 Excessive Single Sign-On Logon Errors_clone', 'description' VALUE 'Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.  Identifies accounts with a high number of single sign-on (SSO) logon errors. Excessive logon errors may indicate an attempt to brute force a password or SSO token.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['NA'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1110']

  , 'source_data' VALUE
  JSON_OBJECT ('event' VALUE JSON_OBJECT('host' VALUE `host`.`name`, 'uuid' VALUE `uuid`, 'created' VALUE `event`.`created`, 'code' VALUE `event`.`code`),
       'observables' VALUE JSON_OBJECT('event' VALUE JSON_OBJECT ('dataset' VALUE  `event`.`dataset`, 'module' VALUE  `event`.`module`, 'provider' VALUE  `event`.`provider`, 'outcome' VALUE  `event`.`outcome`, 'type' VALUE  `event`.`type`, 'action' VALUE  `event`.`action`, 'kind' VALUE  `event`.`kind`, 'description' VALUE  `event`.`description`, 'id' VALUE  `event`.`id`),'source' VALUE JSON_OBJECT ('ip' VALUE  `source`.`ip`, 'port' VALUE  `source`.`port`),'destination' VALUE JSON_OBJECT ('ip' VALUE  `destination`.`ip`, 'port' VALUE  `destination`.`port`),'cloud' VALUE JSON_OBJECT ('provider' VALUE  `cloud`.`provider`),'service' VALUE JSON_OBJECT ('name' VALUE  `service`.`name`),'threatintel' VALUE JSON_OBJECT ('lookup' VALUE  `threatintel`.`lookup`),'user_agent' VALUE JSON_OBJECT ('original' VALUE  `user_agent`.`original`),'user' VALUE JSON_OBJECT ('email' VALUE  `user`.`email`, 'name' VALUE  `user`.`name`, 'id' VALUE  `user`.`id`),'host' VALUE JSON_OBJECT ('id' VALUE  `host`.`id`)),
       'observer' value JSON_OBJECT ('type' VALUE `observer`.`type`),
       'organization' VALUE JSON_OBJECT('id' VALUE `organization`.`id`),
       'uuid' VALUE UUID(),
       'alert' VALUE JSON_OBJECT('created' VALUE now(), 'kind' VALUE 'alert', 'level' VALUE 'medium'),
       'rule' VALUE JSON_OBJECT('id' VALUE 'b80cd0e9-5fc0-4b22-82fe-c25f09cff598', 'name' VALUE 'Microsoft_O365 Excessive Single Sign-On Logon Errors_clone', 'description' VALUE 'Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.  Identifies accounts with a high number of single sign-on (SSO) logon errors. Excessive logon errors may indicate an attempt to brute force a password or SSO token.'),
       'observables_list' VALUE ARRAY['NA'],
       'falsepositives' VALUE ARRAY['NA'] ,
       'tacticidlist' VALUE ARRAY['TA0006'],
       'techniqueidlist' VALUE ARRAY['T1110']

  )) FROM Cloud_AzureTable WHERE (`organization`.`id`='3c36bc68') AND ((REGEXP_EXTRACT(LOWER(cast(`event`.`provider` as VARCHAR)), '^azureactivedirectory$') is not null) AND (REGEXP_EXTRACT(LOWER(cast(`o365audit`.`logonerror` as VARCHAR)), '^ssoartifactinvalidorexpired$') is not null) );
END;
